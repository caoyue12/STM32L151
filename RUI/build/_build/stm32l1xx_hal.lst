ARM GAS  /tmp/ccwZ5nuG.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l1xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB74:
  25              		.file 1 "..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c"
   1:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
   2:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ******************************************************************************
   3:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @file    stm32l1xx_hal.c
   4:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @author  MCD Application Team
   5:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief   HAL module driver.
   6:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
   8:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   @verbatim
   9:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ==============================================================================
  10:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                      ##### How to use this driver #####
  11:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ==============================================================================
  12:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]
  13:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]
  16:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     The HAL contains two APIs categories:
  17:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****          (+) Common HAL APIs
  18:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****          (+) Services HAL APIs
  19:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  20:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   @endverbatim
  21:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ******************************************************************************
  22:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @attention
  23:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  24:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * All rights reserved.</center></h2>
  26:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  27:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *
  32:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   ******************************************************************************
  33:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
ARM GAS  /tmp/ccwZ5nuG.s 			page 2


  34:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  35:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #include "stm32l1xx_hal.h"
  37:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  38:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @addtogroup STM32L1xx_HAL_Driver
  39:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  40:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  41:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  42:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL HAL
  43:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief HAL module driver.
  44:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  45:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  46:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  47:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  49:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  52:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Private_Defines HAL Private Defines
  53:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  54:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  55:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  56:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
  57:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  * @brief STM32L1xx HAL Driver version number
  58:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    */
  59:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  60:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_SUB1   (0x04) /*!< [23:16] sub1 version */
  61:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_SUB2   (0x00) /*!< [15:8]  sub2 version */
  62:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */
  63:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define __STM32L1xx_HAL_VERSION         ((__STM32L1xx_HAL_VERSION_MAIN << 24)\
  64:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                                         |(__STM32L1xx_HAL_VERSION_SUB1 << 16)\
  65:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                                         |(__STM32L1xx_HAL_VERSION_SUB2 << 8 )\
  66:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                                         |(__STM32L1xx_HAL_VERSION_RC))
  67:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  68:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  69:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  70:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
  71:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
  72:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  73:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  74:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  75:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  76:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  77:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  78:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  79:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  80:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  81:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  82:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  83:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __IO uint32_t uwTick;
  84:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t uwTickPrio = (1UL << __NVIC_PRIO_BITS); /* Invalid priority */
  85:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  86:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
  87:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
  88:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  89:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  90:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /* Exported functions --------------------------------------------------------*/
ARM GAS  /tmp/ccwZ5nuG.s 			page 3


  91:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  92:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
  93:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
  94:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  95:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
  96:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  97:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *
  98:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @verbatim
  99:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 100:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 101:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 102:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    [..]  This section provides functions allowing to:
 103:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Initialize the Flash interface, the NVIC allocation and initial clock
 104:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****           configuration. It initializes the source of time base also when timeout
 105:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****           is needed and the backup domain when enabled.
 106:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) De-initialize common part of the HAL.
 107:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated
 108:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****           Tick interrupt priority.
 109:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 110:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 111:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 112:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 113:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              handled in milliseconds basis.
 114:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 115:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 116:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 117:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 118:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 119:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 120:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 121:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             ISR process will be blocked.
 122:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 123:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 124:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 125:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @endverbatim
 126:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
 127:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 128:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 129:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 130:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function configures the Flash prefetch,
 131:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        configures time base source, NVIC and Low level hardware
 132:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is called at the beginning of program after reset and before
 133:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       the clock configuration
 134:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note The time base configuration is based on MSI clock when exiting from Reset.
 135:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       Once done, time base tick start incrementing.
 136:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        In the default implementation,Systick is used as source of time base.
 137:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        the tick variable is incremented each 1ms in its ISR.
 138:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
 139:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 140:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 141:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 142:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 143:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 144:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Configure Flash prefetch */
 145:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 146:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 147:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** #endif /* PREFETCH_ENABLE */
ARM GAS  /tmp/ccwZ5nuG.s 			page 4


 148:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 149:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Set Interrupt Group Priority */
 150:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 151:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 152:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 153:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 154:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 155:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     status = HAL_ERROR;
 156:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 157:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   else
 158:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 159:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     /* Init the low level hardware */
 160:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     HAL_MspInit();
 161:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 162:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 163:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Return function status */
 164:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return status;
 165:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 166:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 167:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 168:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function de-initializes common part of the HAL and stops the source
 169:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        of time base.
 170:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is optional.
 171:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
 172:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 173:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 174:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 175:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Reset of all peripherals */
 176:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 177:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 178:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 179:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 180:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 181:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 182:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 183:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 184:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 185:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* De-Init the low level hardware */
 186:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_MspDeInit();
 187:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 188:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Return function status */
 189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return HAL_OK;
 190:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 191:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 192:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 193:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Initialize the MSP.
 194:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 195:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 196:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_MspInit(void)
 197:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
  26              		.loc 1 197 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
ARM GAS  /tmp/ccwZ5nuG.s 			page 5


  33              	.LFE74:
  35              		.section	.text.HAL_MspDeInit,"ax",%progbits
  36              		.align	1
  37              		.weak	HAL_MspDeInit
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	HAL_MspDeInit:
  44              	.LFB75:
 198:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 199:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 200:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    */
 201:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 202:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 203:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 204:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  DeInitialize the MSP.
 205:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 206:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 207:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_MspDeInit(void)
 208:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
  45              		.loc 1 208 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE75:
  54              		.section	.text.HAL_DeInit,"ax",%progbits
  55              		.align	1
  56              		.global	HAL_DeInit
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	HAL_DeInit:
  63              	.LFB73:
 174:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Reset of all peripherals */
  64              		.loc 1 174 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
 174:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 174 0
  69 0000 10B5     		push	{r4, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
 176:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  74              		.loc 1 176 0
  75 0002 074B     		ldr	r3, .L5
  76 0004 4FF0FF32 		mov	r2, #-1
  77 0008 9A61     		str	r2, [r3, #24]
 177:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  78              		.loc 1 177 0
ARM GAS  /tmp/ccwZ5nuG.s 			page 6


  79 000a 0024     		movs	r4, #0
  80 000c 9C61     		str	r4, [r3, #24]
 179:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  81              		.loc 1 179 0
  82 000e 5A61     		str	r2, [r3, #20]
 180:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  83              		.loc 1 180 0
  84 0010 5C61     		str	r4, [r3, #20]
 182:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  85              		.loc 1 182 0
  86 0012 1A61     		str	r2, [r3, #16]
 183:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  87              		.loc 1 183 0
  88 0014 1C61     		str	r4, [r3, #16]
 186:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  89              		.loc 1 186 0
  90 0016 FFF7FEFF 		bl	HAL_MspDeInit
  91              	.LVL0:
 190:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
  92              		.loc 1 190 0
  93 001a 2046     		mov	r0, r4
  94 001c 10BD     		pop	{r4, pc}
  95              	.L6:
  96 001e 00BF     		.align	2
  97              	.L5:
  98 0020 00380240 		.word	1073887232
  99              		.cfi_endproc
 100              	.LFE73:
 102              		.section	.text.HAL_InitTick,"ax",%progbits
 103              		.align	1
 104              		.weak	HAL_InitTick
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu softvfp
 110              	HAL_InitTick:
 111              	.LFB76:
 209:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 210:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 211:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    */
 212:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 213:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 214:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 215:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function configures the source of the time base:
 216:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        The time source is configured to have 1ms time base with a dedicated
 217:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        Tick interrupt priority.
 218:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 219:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 220:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 221:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 222:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 223:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 224:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 225:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 226:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementation  in user file.
 227:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 228:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
ARM GAS  /tmp/ccwZ5nuG.s 			page 7


 229:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 230:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 231:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 112              		.loc 1 231 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL1:
 232:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 233:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 234:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   if (uwTickFreq != 0U)
 117              		.loc 1 234 0
 118 0000 104B     		ldr	r3, .L18
 119 0002 1B68     		ldr	r3, [r3]
 120 0004 0BB9     		cbnz	r3, .L16
 235:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 236:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     /*Configure the SysTick to have interrupt in 1ms time basis*/
 237:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) == 0U)
 238:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     {
 239:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       /* Configure the SysTick IRQ priority */
 240:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 241:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       {
 242:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 243:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         uwTickPrio = TickPriority;
 244:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       }
 245:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       else
 246:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       {
 247:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         status = HAL_ERROR;
 248:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       }
 249:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     }
 250:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     else
 251:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     {
 252:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       status = HAL_ERROR;
 253:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     }
 254:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 255:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   else
 256:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 257:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     status = HAL_ERROR;
 121              		.loc 1 257 0
 122 0006 0120     		movs	r0, #1
 123              	.LVL2:
 124 0008 7047     		bx	lr
 125              	.LVL3:
 126              	.L16:
 231:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 127              		.loc 1 231 0
 128 000a 10B5     		push	{r4, lr}
 129              	.LCFI1:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 133 000c 0446     		mov	r4, r0
 237:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     {
 134              		.loc 1 237 0
 135 000e 4FF47A70 		mov	r0, #1000
 136              	.LVL4:
 137 0012 B0FBF3F3 		udiv	r3, r0, r3
ARM GAS  /tmp/ccwZ5nuG.s 			page 8


 138 0016 0C4A     		ldr	r2, .L18+4
 139 0018 1068     		ldr	r0, [r2]
 140 001a B0FBF3F0 		udiv	r0, r0, r3
 141 001e FFF7FEFF 		bl	HAL_SYSTICK_Config
 142              	.LVL5:
 143 0022 68B9     		cbnz	r0, .L10
 240:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       {
 144              		.loc 1 240 0
 145 0024 0F2C     		cmp	r4, #15
 146 0026 01D9     		bls	.L17
 247:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       }
 147              		.loc 1 247 0
 148 0028 0120     		movs	r0, #1
 149              	.LVL6:
 258:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 259:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 260:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Return function status */
 261:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return status;
 262:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 150              		.loc 1 262 0
 151 002a 10BD     		pop	{r4, pc}
 152              	.LVL7:
 153              	.L17:
 242:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****         uwTickPrio = TickPriority;
 154              		.loc 1 242 0
 155 002c 0022     		movs	r2, #0
 156 002e 2146     		mov	r1, r4
 157 0030 4FF0FF30 		mov	r0, #-1
 158 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 159              	.LVL8:
 243:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       }
 160              		.loc 1 243 0
 161 0038 044B     		ldr	r3, .L18+8
 162 003a 1C60     		str	r4, [r3]
 232:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 163              		.loc 1 232 0
 164 003c 0020     		movs	r0, #0
 165 003e 10BD     		pop	{r4, pc}
 166              	.LVL9:
 167              	.L10:
 252:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     }
 168              		.loc 1 252 0
 169 0040 0120     		movs	r0, #1
 170 0042 10BD     		pop	{r4, pc}
 171              	.LVL10:
 172              	.L19:
 173              		.align	2
 174              	.L18:
 175 0044 00000000 		.word	.LANCHOR0
 176 0048 00000000 		.word	SystemCoreClock
 177 004c 00000000 		.word	.LANCHOR1
 178              		.cfi_endproc
 179              	.LFE76:
 181              		.section	.text.HAL_Init,"ax",%progbits
 182              		.align	1
 183              		.global	HAL_Init
 184              		.syntax unified
ARM GAS  /tmp/ccwZ5nuG.s 			page 9


 185              		.thumb
 186              		.thumb_func
 187              		.fpu softvfp
 189              	HAL_Init:
 190              	.LFB72:
 141:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 191              		.loc 1 141 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 10B5     		push	{r4, lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 4, -8
 199              		.cfi_offset 14, -4
 200              	.LVL11:
 150:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 201              		.loc 1 150 0
 202 0002 0320     		movs	r0, #3
 203 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 204              	.LVL12:
 153:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 205              		.loc 1 153 0
 206 0008 0020     		movs	r0, #0
 207 000a FFF7FEFF 		bl	HAL_InitTick
 208              	.LVL13:
 209 000e 10B1     		cbz	r0, .L24
 155:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 210              		.loc 1 155 0
 211 0010 0124     		movs	r4, #1
 212              	.L21:
 213              	.LVL14:
 165:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 214              		.loc 1 165 0
 215 0012 2046     		mov	r0, r4
 216 0014 10BD     		pop	{r4, pc}
 217              	.LVL15:
 218              	.L24:
 219 0016 0446     		mov	r4, r0
 160:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 220              		.loc 1 160 0
 221 0018 FFF7FEFF 		bl	HAL_MspInit
 222              	.LVL16:
 223 001c F9E7     		b	.L21
 224              		.cfi_endproc
 225              	.LFE72:
 227              		.section	.text.HAL_IncTick,"ax",%progbits
 228              		.align	1
 229              		.weak	HAL_IncTick
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
 235              	HAL_IncTick:
 236              	.LFB77:
 263:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 264:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
ARM GAS  /tmp/ccwZ5nuG.s 			page 10


 265:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
 266:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 267:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 268:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions
 269:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *  @brief    HAL Control functions
 270:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *
 271:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @verbatim
 272:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 273:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                       ##### HAL Control functions #####
 274:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 275:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]  This section provides functions allowing to:
 276:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Provide a tick value in millisecond
 277:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 278:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Suspend the time base source interrupt
 279:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Resume the time base source interrupt
 280:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the HAL API driver version
 281:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the device identifier
 282:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the device revision identifier
 283:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Get the unique device identifier
 284:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 285:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @endverbatim
 286:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
 287:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 288:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 289:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 290:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function is called to increment a global variable "uwTick"
 291:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        used as application time base.
 292:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 293:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       in SysTick ISR.
 294:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 295:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *      implementations in user file.
 296:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 297:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 298:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_IncTick(void)
 299:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 237              		.loc 1 299 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 300:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uwTick += uwTickFreq;
 242              		.loc 1 300 0
 243 0000 034A     		ldr	r2, .L26
 244 0002 1368     		ldr	r3, [r2]
 245 0004 0349     		ldr	r1, .L26+4
 246 0006 0968     		ldr	r1, [r1]
 247 0008 0B44     		add	r3, r3, r1
 248 000a 1360     		str	r3, [r2]
 249 000c 7047     		bx	lr
 250              	.L27:
 251 000e 00BF     		.align	2
 252              	.L26:
 253 0010 00000000 		.word	uwTick
 254 0014 00000000 		.word	.LANCHOR0
 255              		.cfi_endproc
 256              	.LFE77:
 258              		.section	.text.HAL_GetTick,"ax",%progbits
ARM GAS  /tmp/ccwZ5nuG.s 			page 11


 259              		.align	1
 260              		.weak	HAL_GetTick
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu softvfp
 266              	HAL_GetTick:
 267              	.LFB78:
 301:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 302:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 303:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 304:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Provide a tick value in millisecond.
 305:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 306:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 307:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval tick value
 308:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 309:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 310:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 268              		.loc 1 310 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 311:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return uwTick;
 273              		.loc 1 311 0
 274 0000 014B     		ldr	r3, .L29
 275 0002 1868     		ldr	r0, [r3]
 312:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 276              		.loc 1 312 0
 277 0004 7047     		bx	lr
 278              	.L30:
 279 0006 00BF     		.align	2
 280              	.L29:
 281 0008 00000000 		.word	uwTick
 282              		.cfi_endproc
 283              	.LFE78:
 285              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 286              		.align	1
 287              		.global	HAL_GetTickPrio
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu softvfp
 293              	HAL_GetTickPrio:
 294              	.LFB79:
 313:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 314:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 315:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function returns a tick priority.
 316:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval tick priority
 317:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 318:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 319:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 295              		.loc 1 319 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
ARM GAS  /tmp/ccwZ5nuG.s 			page 12


 320:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return uwTickPrio;
 321:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 300              		.loc 1 321 0
 301 0000 014B     		ldr	r3, .L32
 302 0002 1868     		ldr	r0, [r3]
 303 0004 7047     		bx	lr
 304              	.L33:
 305 0006 00BF     		.align	2
 306              	.L32:
 307 0008 00000000 		.word	.LANCHOR1
 308              		.cfi_endproc
 309              	.LFE79:
 311              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 312              		.align	1
 313              		.global	HAL_SetTickFreq
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu softvfp
 319              	HAL_SetTickFreq:
 320              	.LFB80:
 322:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 323:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 324:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Set new tick Freq.
 325:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @param Freq tick frequency
 326:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval HAL status
 327:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 328:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(uint32_t Freq)
 329:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 321              		.loc 1 329 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              	.LVL17:
 330:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 331:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 332:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 333:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   if (uwTickFreq != Freq)
 326              		.loc 1 333 0
 327 0000 094B     		ldr	r3, .L41
 328 0002 1B68     		ldr	r3, [r3]
 329 0004 8342     		cmp	r3, r0
 330 0006 0BD0     		beq	.L36
 329:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 331              		.loc 1 329 0
 332 0008 10B5     		push	{r4, lr}
 333              	.LCFI3:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 4, -8
 336              		.cfi_offset 14, -4
 337 000a 0446     		mov	r4, r0
 334:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 335:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     /* Apply the new tick Freq  */
 336:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 338              		.loc 1 336 0
 339 000c 074B     		ldr	r3, .L41+4
 340 000e 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccwZ5nuG.s 			page 13


 341              	.LVL18:
 342 0010 FFF7FEFF 		bl	HAL_InitTick
 343              	.LVL19:
 337:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     if (status == HAL_OK)
 344              		.loc 1 337 0
 345 0014 0346     		mov	r3, r0
 346 0016 08B9     		cbnz	r0, .L35
 338:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     {
 339:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       uwTickFreq = Freq;
 347              		.loc 1 339 0
 348 0018 034A     		ldr	r2, .L41
 349 001a 1460     		str	r4, [r2]
 350              	.L35:
 351              	.LVL20:
 340:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     }
 341:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 342:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 343:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return status;
 344:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 352              		.loc 1 344 0
 353 001c 1846     		mov	r0, r3
 354 001e 10BD     		pop	{r4, pc}
 355              	.LVL21:
 356              	.L36:
 357              	.LCFI4:
 358              		.cfi_def_cfa_offset 0
 359              		.cfi_restore 4
 360              		.cfi_restore 14
 330:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 361              		.loc 1 330 0
 362 0020 0023     		movs	r3, #0
 363              	.LVL22:
 364              		.loc 1 344 0
 365 0022 1846     		mov	r0, r3
 366              	.LVL23:
 367 0024 7047     		bx	lr
 368              	.L42:
 369 0026 00BF     		.align	2
 370              	.L41:
 371 0028 00000000 		.word	.LANCHOR0
 372 002c 00000000 		.word	.LANCHOR1
 373              		.cfi_endproc
 374              	.LFE80:
 376              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 377              		.align	1
 378              		.global	HAL_GetTickFreq
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu softvfp
 384              	HAL_GetTickFreq:
 385              	.LFB81:
 345:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 346:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 347:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Return tick frequency.
 348:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval tick period in Hz
 349:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
ARM GAS  /tmp/ccwZ5nuG.s 			page 14


 350:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetTickFreq(void)
 351:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 386              		.loc 1 351 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 352:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return uwTickFreq;
 353:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 391              		.loc 1 353 0
 392 0000 014B     		ldr	r3, .L44
 393 0002 1868     		ldr	r0, [r3]
 394 0004 7047     		bx	lr
 395              	.L45:
 396 0006 00BF     		.align	2
 397              	.L44:
 398 0008 00000000 		.word	.LANCHOR0
 399              		.cfi_endproc
 400              	.LFE81:
 402              		.section	.text.HAL_Delay,"ax",%progbits
 403              		.align	1
 404              		.weak	HAL_Delay
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu softvfp
 410              	HAL_Delay:
 411              	.LFB82:
 354:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 355:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 356:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 357:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *        on variable incremented.
 358:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 359:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 360:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is incremented.
 361:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 362:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 363:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 364:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 365:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 366:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 367:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 412              		.loc 1 367 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              	.LVL24:
 417 0000 38B5     		push	{r3, r4, r5, lr}
 418              	.LCFI5:
 419              		.cfi_def_cfa_offset 16
 420              		.cfi_offset 3, -16
 421              		.cfi_offset 4, -12
 422              		.cfi_offset 5, -8
 423              		.cfi_offset 14, -4
 424 0002 0446     		mov	r4, r0
 368:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 425              		.loc 1 368 0
ARM GAS  /tmp/ccwZ5nuG.s 			page 15


 426 0004 FFF7FEFF 		bl	HAL_GetTick
 427              	.LVL25:
 428 0008 0546     		mov	r5, r0
 429              	.LVL26:
 369:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   uint32_t wait = Delay;
 370:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 371:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Add a period to guaranty minimum wait */
 372:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 430              		.loc 1 372 0
 431 000a B4F1FF3F 		cmp	r4, #-1
 432 000e 02D0     		beq	.L48
 373:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 374:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 433              		.loc 1 374 0
 434 0010 044B     		ldr	r3, .L50
 435 0012 1B68     		ldr	r3, [r3]
 436 0014 1C44     		add	r4, r4, r3
 437              	.LVL27:
 438              	.L48:
 375:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 376:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 377:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 439              		.loc 1 377 0 discriminator 1
 440 0016 FFF7FEFF 		bl	HAL_GetTick
 441              	.LVL28:
 442 001a 401B     		subs	r0, r0, r5
 443 001c 8442     		cmp	r4, r0
 444 001e FAD8     		bhi	.L48
 378:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   {
 379:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   }
 380:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 445              		.loc 1 380 0
 446 0020 38BD     		pop	{r3, r4, r5, pc}
 447              	.LVL29:
 448              	.L51:
 449 0022 00BF     		.align	2
 450              	.L50:
 451 0024 00000000 		.word	.LANCHOR0
 452              		.cfi_endproc
 453              	.LFE82:
 455              		.section	.text.HAL_SuspendTick,"ax",%progbits
 456              		.align	1
 457              		.weak	HAL_SuspendTick
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 461              		.fpu softvfp
 463              	HAL_SuspendTick:
 464              	.LFB83:
 381:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 382:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 383:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Suspend the Tick increment.
 384:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 385:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 386:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 387:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is suspended.
 388:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
ARM GAS  /tmp/ccwZ5nuG.s 			page 16


 389:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 390:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 391:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 392:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_SuspendTick(void)
 393:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 465              		.loc 1 393 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              		@ link register save eliminated.
 394:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Disable SysTick Interrupt */
 395:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 470              		.loc 1 395 0
 471 0000 024A     		ldr	r2, .L53
 472 0002 1368     		ldr	r3, [r2]
 473 0004 23F00203 		bic	r3, r3, #2
 474 0008 1360     		str	r3, [r2]
 475 000a 7047     		bx	lr
 476              	.L54:
 477              		.align	2
 478              	.L53:
 479 000c 10E000E0 		.word	-536813552
 480              		.cfi_endproc
 481              	.LFE83:
 483              		.section	.text.HAL_ResumeTick,"ax",%progbits
 484              		.align	1
 485              		.weak	HAL_ResumeTick
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu softvfp
 491              	HAL_ResumeTick:
 492              	.LFB84:
 396:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 397:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 398:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 399:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Resume the Tick increment.
 400:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 401:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 402:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 403:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       is resumed.
 404:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 405:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   *       implementations in user file.
 406:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 407:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 408:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** __weak void HAL_ResumeTick(void)
 409:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 493              		.loc 1 409 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 410:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   /* Enable SysTick Interrupt */
 411:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 498              		.loc 1 411 0
 499 0000 024A     		ldr	r2, .L56
 500 0002 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccwZ5nuG.s 			page 17


 501 0004 43F00203 		orr	r3, r3, #2
 502 0008 1360     		str	r3, [r2]
 503 000a 7047     		bx	lr
 504              	.L57:
 505              		.align	2
 506              	.L56:
 507 000c 10E000E0 		.word	-536813552
 508              		.cfi_endproc
 509              	.LFE84:
 511              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 512              		.align	1
 513              		.global	HAL_GetHalVersion
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu softvfp
 519              	HAL_GetHalVersion:
 520              	.LFB85:
 412:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 413:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 414:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 415:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Return the HAL revision
 416:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval version: 0xXYZR (8bits for each decimal, R for RC)
 417:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 418:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 419:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 521              		.loc 1 419 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 420:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return __STM32L1xx_HAL_VERSION;
 421:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 526              		.loc 1 421 0
 527 0000 4FF08270 		mov	r0, #17039360
 528 0004 7047     		bx	lr
 529              		.cfi_endproc
 530              	.LFE85:
 532              		.section	.text.HAL_GetREVID,"ax",%progbits
 533              		.align	1
 534              		.global	HAL_GetREVID
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 538              		.fpu softvfp
 540              	HAL_GetREVID:
 541              	.LFB86:
 422:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 423:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 424:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief Return the device revision identifier.
 425:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device revision identifier
 426:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 427:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetREVID(void)
 428:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 542              		.loc 1 428 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccwZ5nuG.s 			page 18


 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 429:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 547              		.loc 1 429 0
 548 0000 014B     		ldr	r3, .L60
 549 0002 1868     		ldr	r0, [r3]
 430:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 550              		.loc 1 430 0
 551 0004 000C     		lsrs	r0, r0, #16
 552 0006 7047     		bx	lr
 553              	.L61:
 554              		.align	2
 555              	.L60:
 556 0008 002004E0 		.word	-536600576
 557              		.cfi_endproc
 558              	.LFE86:
 560              		.section	.text.HAL_GetDEVID,"ax",%progbits
 561              		.align	1
 562              		.global	HAL_GetDEVID
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu softvfp
 568              	HAL_GetDEVID:
 569              	.LFB87:
 431:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 432:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 433:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Return the device identifier.
 434:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device identifier
 435:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 436:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 437:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 570              		.loc 1 437 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 438:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 575              		.loc 1 438 0
 576 0000 024B     		ldr	r3, .L63
 577 0002 1868     		ldr	r0, [r3]
 439:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 578              		.loc 1 439 0
 579 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 580 0008 7047     		bx	lr
 581              	.L64:
 582 000a 00BF     		.align	2
 583              	.L63:
 584 000c 002004E0 		.word	-536600576
 585              		.cfi_endproc
 586              	.LFE87:
 588              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 589              		.align	1
 590              		.global	HAL_GetUIDw0
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
ARM GAS  /tmp/ccwZ5nuG.s 			page 19


 594              		.fpu softvfp
 596              	HAL_GetUIDw0:
 597              	.LFB88:
 440:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 441:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 442:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Return the first word of the unique device identifier (UID based on 96 bits)
 443:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device identifier 31:0 bits
 444:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 445:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 446:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 598              		.loc 1 446 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 447:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 448:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 603              		.loc 1 448 0
 604 0000 014B     		ldr	r3, .L66
 605 0002 1868     		ldr	r0, [r3]
 606 0004 7047     		bx	lr
 607              	.L67:
 608 0006 00BF     		.align	2
 609              	.L66:
 610 0008 5000F81F 		.word	536346704
 611              		.cfi_endproc
 612              	.LFE88:
 614              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 615              		.align	1
 616              		.global	HAL_GetUIDw1
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu softvfp
 622              	HAL_GetUIDw1:
 623              	.LFB89:
 449:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 450:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 451:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Return the second word of the unique device identifier (UID based on 96 bits)
 452:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device identifier 63:32 bits
 453:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 454:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 455:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 624              		.loc 1 455 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 456:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x4U))));
 457:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 629              		.loc 1 457 0
 630 0000 014B     		ldr	r3, .L69
 631 0002 1868     		ldr	r0, [r3]
 632 0004 7047     		bx	lr
 633              	.L70:
 634 0006 00BF     		.align	2
 635              	.L69:
ARM GAS  /tmp/ccwZ5nuG.s 			page 20


 636 0008 5400F81F 		.word	536346708
 637              		.cfi_endproc
 638              	.LFE89:
 640              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 641              		.align	1
 642              		.global	HAL_GetUIDw2
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 646              		.fpu softvfp
 648              	HAL_GetUIDw2:
 649              	.LFB90:
 458:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 459:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 460:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Return the third word of the unique device identifier (UID based on 96 bits)
 461:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval Device identifier 95:64 bits
 462:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 463:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 464:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 650              		.loc 1 464 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 465:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x14U))));
 466:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 655              		.loc 1 466 0
 656 0000 014B     		ldr	r3, .L72
 657 0002 1868     		ldr	r0, [r3]
 658 0004 7047     		bx	lr
 659              	.L73:
 660 0006 00BF     		.align	2
 661              	.L72:
 662 0008 6400F81F 		.word	536346724
 663              		.cfi_endproc
 664              	.LFE90:
 666              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 667              		.align	1
 668              		.global	HAL_DBGMCU_EnableDBGSleepMode
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 672              		.fpu softvfp
 674              	HAL_DBGMCU_EnableDBGSleepMode:
 675              	.LFB91:
 467:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 468:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 469:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @}
 470:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 471:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 472:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group3 DBGMCU Peripheral Control functions
 473:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *  @brief    DBGMCU Peripheral Control functions
 474:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  *
 475:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @verbatim
 476:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
 477:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****                       ##### DBGMCU Peripheral Control functions #####
 478:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****  ===============================================================================
ARM GAS  /tmp/ccwZ5nuG.s 			page 21


 479:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****     [..]  This section provides functions allowing to:
 480:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 481:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 482:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 483:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 484:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** @endverbatim
 485:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @{
 486:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 487:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 488:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 489:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 490:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 491:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 492:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 493:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 676              		.loc 1 493 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              		@ link register save eliminated.
 494:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 681              		.loc 1 494 0
 682 0000 024A     		ldr	r2, .L75
 683 0002 5368     		ldr	r3, [r2, #4]
 684 0004 43F00103 		orr	r3, r3, #1
 685 0008 5360     		str	r3, [r2, #4]
 686 000a 7047     		bx	lr
 687              	.L76:
 688              		.align	2
 689              	.L75:
 690 000c 002004E0 		.word	-536600576
 691              		.cfi_endproc
 692              	.LFE91:
 694              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 695              		.align	1
 696              		.global	HAL_DBGMCU_DisableDBGSleepMode
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 700              		.fpu softvfp
 702              	HAL_DBGMCU_DisableDBGSleepMode:
 703              	.LFB92:
 495:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 496:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 497:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 498:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 499:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 500:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 501:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 502:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 704              		.loc 1 502 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 503:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 709              		.loc 1 503 0
ARM GAS  /tmp/ccwZ5nuG.s 			page 22


 710 0000 024A     		ldr	r2, .L78
 711 0002 5368     		ldr	r3, [r2, #4]
 712 0004 23F00103 		bic	r3, r3, #1
 713 0008 5360     		str	r3, [r2, #4]
 714 000a 7047     		bx	lr
 715              	.L79:
 716              		.align	2
 717              	.L78:
 718 000c 002004E0 		.word	-536600576
 719              		.cfi_endproc
 720              	.LFE92:
 722              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 723              		.align	1
 724              		.global	HAL_DBGMCU_EnableDBGStopMode
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu softvfp
 730              	HAL_DBGMCU_EnableDBGStopMode:
 731              	.LFB93:
 504:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 505:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 506:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 507:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 508:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 509:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 510:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 511:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 732              		.loc 1 511 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 512:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 737              		.loc 1 512 0
 738 0000 024A     		ldr	r2, .L81
 739 0002 5368     		ldr	r3, [r2, #4]
 740 0004 43F00203 		orr	r3, r3, #2
 741 0008 5360     		str	r3, [r2, #4]
 742 000a 7047     		bx	lr
 743              	.L82:
 744              		.align	2
 745              	.L81:
 746 000c 002004E0 		.word	-536600576
 747              		.cfi_endproc
 748              	.LFE93:
 750              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 751              		.align	1
 752              		.global	HAL_DBGMCU_DisableDBGStopMode
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 756              		.fpu softvfp
 758              	HAL_DBGMCU_DisableDBGStopMode:
 759              	.LFB94:
 513:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 514:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
ARM GAS  /tmp/ccwZ5nuG.s 			page 23


 515:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 516:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 517:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 518:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 519:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 520:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 760              		.loc 1 520 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 521:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 765              		.loc 1 521 0
 766 0000 024A     		ldr	r2, .L84
 767 0002 5368     		ldr	r3, [r2, #4]
 768 0004 23F00203 		bic	r3, r3, #2
 769 0008 5360     		str	r3, [r2, #4]
 770 000a 7047     		bx	lr
 771              	.L85:
 772              		.align	2
 773              	.L84:
 774 000c 002004E0 		.word	-536600576
 775              		.cfi_endproc
 776              	.LFE94:
 778              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 779              		.align	1
 780              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu softvfp
 786              	HAL_DBGMCU_EnableDBGStandbyMode:
 787              	.LFB95:
 522:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 523:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 524:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 525:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 526:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 527:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 528:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 529:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 788              		.loc 1 529 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 530:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 793              		.loc 1 530 0
 794 0000 024A     		ldr	r2, .L87
 795 0002 5368     		ldr	r3, [r2, #4]
 796 0004 43F00403 		orr	r3, r3, #4
 797 0008 5360     		str	r3, [r2, #4]
 798 000a 7047     		bx	lr
 799              	.L88:
 800              		.align	2
 801              	.L87:
 802 000c 002004E0 		.word	-536600576
ARM GAS  /tmp/ccwZ5nuG.s 			page 24


 803              		.cfi_endproc
 804              	.LFE95:
 806              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 807              		.align	1
 808              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 812              		.fpu softvfp
 814              	HAL_DBGMCU_DisableDBGStandbyMode:
 815              	.LFB96:
 531:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** }
 532:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** 
 533:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** /**
 534:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 535:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   * @retval None
 536:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   */
 537:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 538:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c **** {
 816              		.loc 1 538 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 539:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 821              		.loc 1 539 0
 822 0000 024A     		ldr	r2, .L90
 823 0002 5368     		ldr	r3, [r2, #4]
 824 0004 23F00403 		bic	r3, r3, #4
 825 0008 5360     		str	r3, [r2, #4]
 826 000a 7047     		bx	lr
 827              	.L91:
 828              		.align	2
 829              	.L90:
 830 000c 002004E0 		.word	-536600576
 831              		.cfi_endproc
 832              	.LFE96:
 834              		.global	uwTickFreq
 835              		.global	uwTickPrio
 836              		.comm	uwTick,4,4
 837              		.section	.data.uwTickFreq,"aw",%progbits
 838              		.align	2
 839              		.set	.LANCHOR0,. + 0
 842              	uwTickFreq:
 843 0000 01000000 		.word	1
 844              		.section	.data.uwTickPrio,"aw",%progbits
 845              		.align	2
 846              		.set	.LANCHOR1,. + 0
 849              	uwTickPrio:
 850 0000 10000000 		.word	16
 851              		.text
 852              	.Letext0:
 853              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 854              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 855              		.file 4 "..//Source/stm/lib/CMSIS/Include/core_cm3.h"
 856              		.file 5 "..//Source/stm/lib/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 857              		.file 6 "..//Source/stm/lib/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xba.h"
ARM GAS  /tmp/ccwZ5nuG.s 			page 25


 858              		.file 7 "..//Source/stm/lib/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 859              		.file 8 "..//Source/stm/lib/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
 860              		.file 9 "..//Source/stm/lib/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_cortex.h"
ARM GAS  /tmp/ccwZ5nuG.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_hal.c
     /tmp/ccwZ5nuG.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccwZ5nuG.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccwZ5nuG.s:36     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccwZ5nuG.s:43     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccwZ5nuG.s:55     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccwZ5nuG.s:62     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccwZ5nuG.s:98     .text.HAL_DeInit:0000000000000020 $d
     /tmp/ccwZ5nuG.s:103    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccwZ5nuG.s:110    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccwZ5nuG.s:175    .text.HAL_InitTick:0000000000000044 $d
     /tmp/ccwZ5nuG.s:182    .text.HAL_Init:0000000000000000 $t
     /tmp/ccwZ5nuG.s:189    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccwZ5nuG.s:228    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccwZ5nuG.s:235    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccwZ5nuG.s:253    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccwZ5nuG.s:259    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccwZ5nuG.s:266    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccwZ5nuG.s:281    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccwZ5nuG.s:286    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccwZ5nuG.s:293    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccwZ5nuG.s:307    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccwZ5nuG.s:312    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccwZ5nuG.s:319    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccwZ5nuG.s:371    .text.HAL_SetTickFreq:0000000000000028 $d
     /tmp/ccwZ5nuG.s:377    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccwZ5nuG.s:384    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccwZ5nuG.s:398    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccwZ5nuG.s:403    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccwZ5nuG.s:410    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccwZ5nuG.s:451    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccwZ5nuG.s:456    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccwZ5nuG.s:463    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccwZ5nuG.s:479    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccwZ5nuG.s:484    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccwZ5nuG.s:491    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccwZ5nuG.s:507    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccwZ5nuG.s:512    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccwZ5nuG.s:519    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccwZ5nuG.s:533    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccwZ5nuG.s:540    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccwZ5nuG.s:556    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccwZ5nuG.s:561    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccwZ5nuG.s:568    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccwZ5nuG.s:584    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccwZ5nuG.s:589    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccwZ5nuG.s:596    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccwZ5nuG.s:610    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccwZ5nuG.s:615    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccwZ5nuG.s:622    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccwZ5nuG.s:636    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccwZ5nuG.s:641    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccwZ5nuG.s:648    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccwZ5nuG.s:662    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccwZ5nuG.s:667    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
ARM GAS  /tmp/ccwZ5nuG.s 			page 27


     /tmp/ccwZ5nuG.s:674    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccwZ5nuG.s:690    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccwZ5nuG.s:695    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccwZ5nuG.s:702    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccwZ5nuG.s:718    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccwZ5nuG.s:723    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccwZ5nuG.s:730    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccwZ5nuG.s:746    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccwZ5nuG.s:751    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccwZ5nuG.s:758    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccwZ5nuG.s:774    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccwZ5nuG.s:779    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccwZ5nuG.s:786    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccwZ5nuG.s:802    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccwZ5nuG.s:807    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccwZ5nuG.s:814    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccwZ5nuG.s:830    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccwZ5nuG.s:842    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccwZ5nuG.s:849    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccwZ5nuG.s:838    .data.uwTickFreq:0000000000000000 $d
     /tmp/ccwZ5nuG.s:845    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
