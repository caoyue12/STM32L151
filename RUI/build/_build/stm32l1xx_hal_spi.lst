ARM GAS  /tmp/ccefzn75.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l1xx_hal_spi.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SPI_AbortRx_ISR:
  23              	.LFB125:
  24              		.file 1 "..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c"
   1:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
   2:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ******************************************************************************
   3:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @file    stm32l1xx_hal_spi.c
   4:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @author  MCD Application Team
   5:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + IO operation functions
  10:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + Peripheral Control functions
  11:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           + Peripheral State functions
  12:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
  13:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   @verbatim
  14:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ==============================================================================
  15:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                         ##### How to use this driver #####
  16:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ==============================================================================
  17:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..]
  18:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  20:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  23:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) SPI pins configuration
  26:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Enable the DMAx clock
  34:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
ARM GAS  /tmp/ccefzn75.s 			page 2


  35:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  39:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  42:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
  46:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Circular mode restriction:
  47:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) Master 1Line Rx
  50:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
  54:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Master Receive mode restriction:
  55:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
  61:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Callback registration:
  62:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  63:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  64:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  65:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  66:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  67:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  68:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  69:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  70:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  71:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  72:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  73:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  74:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  75:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  76:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  77:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  78:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  79:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           and a pointer to the user callback function.
  80:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  81:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  82:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  83:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           weak function.
  84:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           and the Callback ID.
  86:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           This function allows to reset following callbacks:
  87:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  88:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  89:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  90:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  91:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
ARM GAS  /tmp/ccefzn75.s 			page 3


  92:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  93:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  94:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  95:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  96:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  97:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
  98:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
  99:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 100:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 101:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 102:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 103:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 104:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 105:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 106:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 107:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 108:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 109:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 110:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 111:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 112:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 113:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        or HAL_SPI_Init() function.
 114:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 115:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        When The compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 116:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        not defined, the callback registering feature is not available
 117:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 118:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 119:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      [..]
 120:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 121:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 122:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 123:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 124:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   @endverbatim
 125:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 126:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   Additional table :
 127:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 128:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 129:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 130:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 131:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 132:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 133:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |===========================================================================================
 134:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 135:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 136:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 137:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 138:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 139:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 140:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 141:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 142:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/8  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 143:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 144:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 145:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 146:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 147:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 148:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
ARM GAS  /tmp/ccefzn75.s 			page 4


 149:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 150:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 151:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 152:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 153:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 154:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 155:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 156:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 157:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 158:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |===========================================================================================
 159:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 160:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 161:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/4  |    NA     |    NA    |    NA     |   NA  
 162:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 163:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 164:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 165:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/32  | Fpclk/
 166:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 167:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/4  | Fpclk/4  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 168:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 169:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 170:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 171:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 172:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 173:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 174:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 175:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 176:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 177:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (8bits, 16bits),
 178:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 179:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        @note
 180:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 181:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 182:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 183:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 184:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ******************************************************************************
 185:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @attention
 186:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 187:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 188:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * All rights reserved.</center></h2>
 189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 190:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 191:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 192:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 193:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 194:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 195:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ******************************************************************************
 196:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 197:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 198:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 199:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #include "stm32l1xx_hal.h"
 200:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 201:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @addtogroup STM32L1xx_HAL_Driver
 202:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 203:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 204:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 205:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI SPI
ARM GAS  /tmp/ccefzn75.s 			page 5


 206:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief SPI HAL module driver
 207:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 208:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 209:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 210:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 211:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 212:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 213:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 214:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 215:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 216:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 217:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 218:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
 219:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 220:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 221:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 222:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 223:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 224:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 225:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 226:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 227:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 228:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 229:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 230:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 231:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 232:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 233:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 234:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 235:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 236:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 237:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 238:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 239:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 240:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 241:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 242:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 243:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 244:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 245:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 246:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 247:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 248:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 249:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 250:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 251:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 252:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 253:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 254:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 255:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 256:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 257:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 258:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 259:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 260:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 261:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
 262:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
ARM GAS  /tmp/ccefzn75.s 			page 6


 263:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 264:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 265:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 266:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 267:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 268:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 269:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 270:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 271:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 272:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @verbatim
 273:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
 274:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 275:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
 276:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 277:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 278:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 279:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 280:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 281:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 282:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 283:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           the selected configuration:
 284:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Mode
 285:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Direction
 286:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Data Size
 287:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) Clock Polarity and Phase
 288:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) NSS Management
 289:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) BaudRate Prescaler
 290:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) FirstBit
 291:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) TIMode
 292:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) CRC Calculation
 293:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 294:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 295:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 296:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           of the selected SPIx peripheral.
 297:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 298:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @endverbatim
 299:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 300:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 301:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 302:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 303:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 304:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 305:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 306:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 307:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 308:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 309:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 310:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 311:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 312:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi == NULL)
 313:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 314:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_ERROR;
 315:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 316:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 317:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the parameters */
 318:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 319:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
ARM GAS  /tmp/ccefzn75.s 			page 7


 320:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 321:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 322:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 323:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 324:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 325:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* TI mode is not supported on all devices in stm32l1xx serie.
 326:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      TIMode parameter is mandatory equal to SPI_TIMODE_DISABLE if TI mode is not supported */
 327:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 328:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 329:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 330:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 331:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 332:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 333:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 334:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 335:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 336:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 337:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 338:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 339:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 340:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 341:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 342:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 343:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 344:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 345:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 346:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 347:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 348:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 349:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Init the SPI Callback settings */
 350:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 351:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 352:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 353:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 354:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 355:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 356:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 357:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 358:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 359:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 360:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 361:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 362:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 363:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 364:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 365:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 366:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 367:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 368:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 369:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 370:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 371:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 372:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 373:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 374:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 375:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 376:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccefzn75.s 			page 8


 377:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 378:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 379:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 380:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 381:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 382:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 383:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 384:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 385:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : NSS management, TI Mode */
 386:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 387:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 388:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : NSS management */
 389:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, ((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE));
 390:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 391:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 392:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 393:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 394:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 395:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 396:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 397:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 398:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 399:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 400:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 401:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 402:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 403:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 404:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 405:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 406:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 407:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 408:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 409:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
 410:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 411:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 412:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 413:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 414:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 415:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 416:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 417:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 418:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 419:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 420:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 421:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi == NULL)
 422:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 423:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_ERROR;
 424:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 425:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 426:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check SPI Instance parameter */
 427:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 428:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 429:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 430:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 431:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 432:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 433:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccefzn75.s 			page 9


 434:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 435:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 436:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 437:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 438:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 439:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 440:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 441:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 442:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
 443:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 444:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 445:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 446:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 447:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 448:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 449:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 450:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Release Lock */
 451:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 452:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 453:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
 454:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 455:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 456:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 457:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 458:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 459:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 460:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
 461:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 462:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 463:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 464:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 465:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
 466:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 467:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 468:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 469:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
 470:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 471:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 472:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 473:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 474:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 475:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 476:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
 477:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 478:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 479:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 480:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 481:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
 482:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 483:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 484:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 485:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
 486:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 487:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 488:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 489:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 490:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Register a User SPI Callback
ARM GAS  /tmp/ccefzn75.s 			page 10


 491:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 492:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 493:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 494:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 495:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 496:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 497:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 498:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 499:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 500:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 501:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 502:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 503:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (pCallback == NULL)
 504:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 505:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update the error code */
 506:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 507:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 508:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_ERROR;
 509:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 510:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
 511:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 512:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 513:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 514:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 515:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 516:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 517:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 518:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 519:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 520:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 521:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 522:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 523:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 524:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 525:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 526:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 527:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 528:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 529:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 530:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 531:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 532:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 533:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 534:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 535:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 536:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 537:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 538:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 539:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 540:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 541:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 542:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 543:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 544:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 545:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 546:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 547:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccefzn75.s 			page 11


 548:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 549:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 550:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 551:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 552:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 553:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 554:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 555:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 556:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 557:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 558:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 559:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 560:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 561:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 562:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 563:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 564:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 565:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 566:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 567:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 568:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 569:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 570:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 571:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 572:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 573:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 574:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 575:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 576:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 577:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 578:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 579:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 580:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 581:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 582:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 583:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 584:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 585:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 586:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 587:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
 588:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 589:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update the error code */
 590:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 591:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 592:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Return error status */
 593:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     status =  HAL_ERROR;
 594:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 595:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 596:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Release Lock */
 597:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 598:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return status;
 599:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 600:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 601:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 602:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 603:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 604:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccefzn75.s 			page 12


 605:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 606:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 607:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 608:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 609:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 610:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 611:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 612:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 613:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
 614:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 615:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 616:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 617:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 618:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 619:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 620:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 621:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 622:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 623:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 624:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 625:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 626:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 627:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 628:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 629:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 630:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 631:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 632:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 633:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 634:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 635:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 636:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 637:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 638:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 639:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 640:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 641:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 642:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 643:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 644:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 645:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 646:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 647:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 648:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 649:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 650:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 651:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 652:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 653:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 654:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 655:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 656:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 657:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 658:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 659:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 660:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 661:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
ARM GAS  /tmp/ccefzn75.s 			page 13


 662:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 663:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 664:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 665:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 666:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 667:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 668:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 669:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 670:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 671:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     switch (CallbackID)
 672:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 673:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 674:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 675:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 676:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 677:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 678:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 679:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 680:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 681:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       default :
 682:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Update the error code */
 683:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 684:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 685:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Return error status */
 686:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         status =  HAL_ERROR;
 687:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 688:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 689:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 690:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
 691:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 692:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update the error code */
 693:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 694:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 695:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Return error status */
 696:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     status =  HAL_ERROR;
 697:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 698:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 699:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Release Lock */
 700:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 701:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return status;
 702:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 703:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 704:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 705:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
 706:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 707:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 708:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 709:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *  @brief   Data transfers functions
 710:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
 711:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @verbatim
 712:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   ==============================================================================
 713:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                       ##### IO operation functions #####
 714:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
 715:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  [..]
 716:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 717:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     data transfers.
 718:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccefzn75.s 			page 14


 719:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 720:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 721:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     (#) There are two modes of transfer:
 722:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 723:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 724:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             after finishing transfer.
 725:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 726:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 727:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The end of the data processing will be indicated through the
 728:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 729:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             using DMA mode.
 730:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 731:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 732:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 733:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 734:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 735:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 736:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 737:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @endverbatim
 738:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
 739:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 740:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 741:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 742:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 743:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 744:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 745:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 746:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
 747:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 748:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 749:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 750:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 751:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 752:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 753:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 754:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 755:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 756:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
 757:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 758:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 759:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 760:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 761:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 762:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 763:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 764:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
 765:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 766:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 767:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 768:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 769:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 770:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 771:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 772:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 773:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 774:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 775:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/ccefzn75.s 			page 15


 776:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 777:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 778:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
 779:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 780:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 781:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 782:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 783:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 784:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 785:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 786:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 787:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 788:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 789:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 790:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 791:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 792:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 793:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 794:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 795:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 796:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 797:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 798:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 799:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
 800:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 801:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 802:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 803:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 804:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 805:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 806:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 807:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 808:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 809:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
 810:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 811:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 812:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 813:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 814:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 815:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 816:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 817:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 818:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 819:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 820:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 821:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 822:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 823:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 824:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 825:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 826:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 827:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 828:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 829:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 830:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 831:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 832:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
ARM GAS  /tmp/ccefzn75.s 			page 16


 833:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 834:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
 835:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 836:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 837:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 838:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 839:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 840:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 841:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 842:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 843:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 844:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
 845:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 846:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 847:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 848:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 849:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 850:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 851:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 852:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 853:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 854:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 855:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 856:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 857:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 858:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 859:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 860:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 861:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
 862:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 863:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
 864:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 865:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 866:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 867:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 868:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 869:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 870:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 871:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 872:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 873:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
 874:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 875:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 876:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 877:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 878:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 879:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 880:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
 881:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 882:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 883:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 884:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 885:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 886:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 887:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 888:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 889:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
ARM GAS  /tmp/ccefzn75.s 			page 17


 890:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 891:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 892:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 893:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 894:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 895:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 896:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 897:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error:
 898:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 899:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
 900:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 901:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 902:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 903:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 904:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
 905:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 906:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 907:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
 908:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 909:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be received
 910:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 911:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
 912:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
 913:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 914:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 915:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 916:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 917:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 918:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 919:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 920:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 921:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 922:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 923:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 924:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 925:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 926:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 927:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 928:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 929:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 930:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 931:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 932:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 933:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
 934:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 935:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 936:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 937:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 938:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 939:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 940:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 941:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 942:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 943:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
 944:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 945:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 946:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
ARM GAS  /tmp/ccefzn75.s 			page 18


 947:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 948:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 949:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 950:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 951:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 952:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 953:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 954:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 955:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 956:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 957:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 958:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
 959:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 960:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 961:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 962:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
 963:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount--;
 964:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 965:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 966:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 967:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction: 1Line */
 968:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 969:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 970:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 971:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 972:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 973:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 974:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 975:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 976:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
 977:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 978:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 979:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 980:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
 981:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 982:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 983:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Transfer loop */
 984:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
 985:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 986:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check the RXNE flag */
 987:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 988:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 989:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* read the received data */
 990:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 991:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 992:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 993:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 994:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
 995:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 996:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
 997:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 998:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 999:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1000:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
1001:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1002:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1003:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
ARM GAS  /tmp/ccefzn75.s 			page 19


1004:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1005:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1006:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1007:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Transfer loop */
1008:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1009:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1010:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check the RXNE flag */
1011:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1012:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1013:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1014:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1015:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1016:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1017:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
1018:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1019:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Timeout management */
1020:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1021:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1022:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1023:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
1024:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1025:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1026:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1027:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1028:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1029:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1030:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Handle the CRC Transmission */
1031:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1032:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1033:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1034:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1035:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1036:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Read the latest data */
1037:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1038:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1039:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* the latest data has not been received */
1040:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1041:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       goto error;
1042:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1043:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1044:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1045:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1046:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1047:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1048:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1049:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1050:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
1051:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1052:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1053:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1054:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1055:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait the CRC data */
1056:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1057:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1058:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1059:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1060:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       goto error;
ARM GAS  /tmp/ccefzn75.s 			page 20


1061:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1062:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1063:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1064:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1065:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1066:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1067:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1068:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
1069:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1070:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1071:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1072:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1073:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1074:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1075:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
1076:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1077:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1078:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1079:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1080:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1081:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1082:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1083:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1084:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1085:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1086:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1087:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1088:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1089:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1090:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1091:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1092:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1093:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1094:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1095:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1096:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1097:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1098:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1099:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1100:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1101:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
1102:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1103:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1104:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1105:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                           uint32_t Timeout)
1106:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1107:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1108:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
1109:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1110:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tickstart;
1111:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1112:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1113:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1114:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1115:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1116:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1117:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
ARM GAS  /tmp/ccefzn75.s 			page 21


1118:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1119:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1120:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1121:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1122:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1123:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
1124:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1125:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init temporary variables */
1126:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_state           = hspi->State;
1127:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1128:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
1129:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1130:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1131:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1132:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1133:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1134:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1135:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1136:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1137:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1138:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1139:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1140:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1141:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1142:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1143:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1144:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1145:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1146:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1147:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1148:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1149:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1150:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1151:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1152:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1153:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1154:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1155:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1156:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1157:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1158:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1159:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1160:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1161:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1162:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1163:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1164:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1165:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1166:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1167:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1168:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1169:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1170:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1171:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1172:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1173:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1174:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
ARM GAS  /tmp/ccefzn75.s 			page 22


1175:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1176:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1177:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1178:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1179:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1180:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1181:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1182:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1183:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1184:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
1185:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1186:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1187:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1188:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check TXE flag */
1189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1190:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1191:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1192:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1193:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
1194:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1195:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 0U;
1196:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1197:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1198:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Enable CRC Transmission */
1199:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1200:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1201:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1202:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1203:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1204:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1205:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1206:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check RXNE flag */
1207:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1208:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1209:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1210:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1211:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1212:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1213:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 1U;
1214:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1215:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1216:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1217:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1218:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
1219:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1220:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1221:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1222:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1223:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1224:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1225:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1226:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1227:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
1228:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
1229:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
1230:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1231:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
ARM GAS  /tmp/ccefzn75.s 			page 23


1232:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1233:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Check TXE flag */
1234:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1235:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1236:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1237:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1238:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
1239:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1240:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 0U;
1241:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1242:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1243:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Enable CRC Transmission */
1244:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1245:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
1246:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1247:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
1248:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1249:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1250:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1251:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1252:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1253:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1254:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
1255:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
1256:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
1257:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1258:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         txallowed = 1U;
1259:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1260:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1261:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1262:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1263:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
1264:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1265:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1266:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1267:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1268:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1269:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1270:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1271:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1272:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait until TXE flag */
1273:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1274:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1275:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Error on the CRC reception */
1276:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1277:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1278:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       goto error;
1279:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
1280:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Read CRC */
1281:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     READ_REG(hspi->Instance->DR);
1282:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1283:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1284:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
1285:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1286:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1287:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1288:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Clear CRC Flag */
ARM GAS  /tmp/ccefzn75.s 			page 24


1289:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1290:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1291:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1292:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1293:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1294:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1295:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
1296:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1297:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1298:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1299:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1300:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1301:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1302:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1303:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
1304:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
1305:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1306:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
1307:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1308:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1309:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1310:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1311:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1312:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1313:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1314:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1315:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1316:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1317:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1318:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1319:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1320:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1321:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1322:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1323:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1324:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1325:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1326:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1327:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1328:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1329:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1330:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1331:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1332:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1333:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1334:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1335:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1336:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1337:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1338:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1339:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1340:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1341:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1342:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1343:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1344:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1345:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
ARM GAS  /tmp/ccefzn75.s 			page 25


1346:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1347:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1348:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1349:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1350:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1351:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1352:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1353:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1354:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1355:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1356:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1357:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1358:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the function for IT treatment */
1359:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1360:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1361:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1362:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1363:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1364:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1365:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1366:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1367:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1368:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1369:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1370:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1371:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1372:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1373:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1374:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1375:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1376:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1377:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1378:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1379:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1380:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1381:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1382:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1383:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1384:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1385:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1386:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1387:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1388:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1389:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1390:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1391:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1392:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1393:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1394:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1395:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1396:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1397:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1398:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1399:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1400:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1401:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1402:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
ARM GAS  /tmp/ccefzn75.s 			page 26


1403:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1404:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1405:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1406:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1407:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1408:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1409:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1410:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1411:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1412:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1413:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1414:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1415:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1416:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1417:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1418:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1419:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1420:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1421:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1422:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1423:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1424:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1425:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1426:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1427:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1428:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1429:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1430:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1431:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1432:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1433:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1434:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1435:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1436:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1437:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1438:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1439:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1440:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1441:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1442:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1443:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1444:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1445:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the function for IT treatment */
1446:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1447:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1448:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1449:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1450:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1451:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1452:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1453:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1454:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1455:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1456:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1457:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1458:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1459:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccefzn75.s 			page 27


1460:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1461:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1462:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1463:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1464:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1465:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1466:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1467:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1468:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1469:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1470:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1471:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1472:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1473:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1474:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             process unlock */
1475:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1476:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1477:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1478:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1479:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1480:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1481:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1482:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1483:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1484:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1485:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1486:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1487:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1488:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1489:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1490:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1491:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1492:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1493:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1494:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1495:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1496:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1497:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1498:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1499:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1500:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
1501:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1502:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1503:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1504:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1505:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1506:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1507:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
1508:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1509:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1510:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init temporary variables */
1511:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_state           = hspi->State;
1512:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1513:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1514:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1515:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1516:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccefzn75.s 			page 28


1517:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1518:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1519:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1520:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1521:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1522:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1523:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1524:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1525:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1526:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1527:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1528:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1529:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1530:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1531:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1532:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1533:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1534:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1535:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1536:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1537:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1538:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1539:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1540:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1541:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1542:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the function for IT treatment */
1543:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1544:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1545:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1546:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1547:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1548:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1549:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1550:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1551:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1552:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1553:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1554:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1555:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1556:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1557:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1558:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1559:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1560:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1561:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1562:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1563:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1564:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1565:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1566:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1567:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1568:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1569:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1570:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1571:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1572:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1573:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
ARM GAS  /tmp/ccefzn75.s 			page 29


1574:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1575:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1576:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1577:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1578:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1579:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1580:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1581:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1582:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1583:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1584:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1585:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1586:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1587:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1588:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1589:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1590:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check tx dma handle */
1591:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1592:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1593:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1594:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1595:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1596:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1597:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1598:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1599:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1600:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1601:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1602:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1603:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1604:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1605:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1606:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1607:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1608:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1609:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1610:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1611:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1612:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1613:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1614:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1615:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1616:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1617:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1618:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1619:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1620:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1621:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1622:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1623:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1624:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1625:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1626:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1627:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1628:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1629:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1630:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccefzn75.s 			page 30


1631:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1632:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1633:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1634:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1635:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1636:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1637:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1638:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1639:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1640:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1641:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1642:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1643:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1644:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1645:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA error callback */
1646:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1647:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1648:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1649:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1650:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1651:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1652:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1653:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
1654:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1655:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1656:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1657:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1658:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1659:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1660:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1661:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1662:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1663:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1664:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1665:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1666:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1667:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1668:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1669:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1670:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1671:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1672:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1673:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1674:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1675:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1676:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1677:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1678:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1679:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1680:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1681:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1682:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1683:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1684:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1685:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1686:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1687:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pData pointer to data buffer
ARM GAS  /tmp/ccefzn75.s 			page 31


1688:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1689:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1690:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1691:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1692:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1693:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1694:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1695:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1696:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check rx dma handle */
1697:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1698:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1699:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1700:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1701:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1702:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1703:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check tx dma handle */
1704:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1705:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1706:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1707:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1708:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1709:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1710:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
1711:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1712:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1713:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1714:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1715:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1716:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1717:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1718:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1719:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1720:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1721:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1722:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1723:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1724:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1725:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1726:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1727:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1728:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1729:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1730:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1731:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1732:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1733:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1734:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1735:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1736:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1737:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1738:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1739:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1740:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1741:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1742:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1743:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1744:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccefzn75.s 			page 32


1745:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1746:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1747:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1748:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1749:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1750:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1751:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1752:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1753:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1754:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1755:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1756:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
1757:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1758:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA error callback */
1759:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1760:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1761:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1762:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1763:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1764:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1765:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1766:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
1767:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1768:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1769:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1770:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1771:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1772:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1773:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1774:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1775:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1776:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1777:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1778:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1779:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1780:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1781:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1782:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1783:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1784:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1785:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1786:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1787:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1788:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1789:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error:
1790:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1791:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1792:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1793:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1794:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1795:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1796:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1797:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1798:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
1799:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1800:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1801:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
ARM GAS  /tmp/ccefzn75.s 			page 33


1802:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1803:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1804:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1805:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1806:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                               uint16_t Size)
1807:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1808:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
1809:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1810:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1811:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1812:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check rx & tx dma handles */
1813:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1814:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1815:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1816:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Direction parameter */
1817:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1818:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1819:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process locked */
1820:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
1821:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1822:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init temporary variables */
1823:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_state           = hspi->State;
1824:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1825:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1826:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
1827:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1828:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1829:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_BUSY;
1830:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1831:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1832:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1833:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1834:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1835:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1836:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1837:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1838:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1839:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1840:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1841:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1842:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1843:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1844:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1845:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the transaction information */
1846:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1847:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1848:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1849:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
1850:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1851:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1852:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
1853:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1854:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1855:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
1856:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
1857:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1858:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccefzn75.s 			page 34


1859:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset CRC Calculation */
1860:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1861:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1862:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1863:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1864:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1865:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1866:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1867:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
1868:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1869:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1870:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1871:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
1872:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1873:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
1874:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1875:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1876:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
1877:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
1878:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1879:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1880:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA error callback */
1881:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1882:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1883:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1884:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
1885:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1886:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1887:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
1888:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
1889:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1890:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1891:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1892:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1893:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1894:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1895:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1896:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1897:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1898:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1899:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1900:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1901:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1902:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   is performed in DMA reception complete callback  */
1903:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
1904:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
1905:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
1906:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
1907:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1908:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
1909:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1910:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
1911:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1912:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Update SPI error code */
1913:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1914:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
1915:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccefzn75.s 			page 35


1916:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1917:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
1918:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1919:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1920:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1921:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1922:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1923:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Enable SPI peripheral */
1924:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1925:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1926:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1927:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1928:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1929:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1930:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1931:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1932:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** error :
1933:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
1934:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1935:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
1936:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
1937:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1938:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
1939:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
1940:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle.
1941:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
1942:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
1943:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         This procedure performs following operations :
1944:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
1945:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1946:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1947:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Set handle State to READY
1948:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1949:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
1950:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
1951:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
1952:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
1953:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
1954:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
1955:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t resetcount;
1956:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1957:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Initialized local variable  */
1958:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   errorcode = HAL_OK;
1959:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
1960:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
1961:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1962:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
1963:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
1964:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1965:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
1966:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
1967:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1968:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
1969:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
1970:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
1971:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1972:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
ARM GAS  /tmp/ccefzn75.s 			page 36


1973:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1974:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
1975:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
1976:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1977:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
1978:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
1979:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
1980:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
1981:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1982:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
1983:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
1984:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
1985:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
1986:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
1987:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
1988:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
1989:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
1990:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
1991:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
1992:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
1993:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
1994:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
1995:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
1996:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
1997:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
1998:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
1999:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2000:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2001:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2002:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2003:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2004:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2005:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2006:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2007:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2008:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2009:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2010:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2011:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2012:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2013:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2014:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2015:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2016:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable Tx DMA Request */
2017:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
2018:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2019:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until TXE flag is set */
2020:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       do
2021:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2022:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (count == 0U)
2023:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
2024:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2025:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           break;
2026:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
2027:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         count--;
2028:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
2029:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
ARM GAS  /tmp/ccefzn75.s 			page 37


2030:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2031:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2032:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2033:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2034:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2035:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2036:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2037:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2038:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2039:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2040:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2041:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2042:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2043:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2044:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2045:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2046:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2047:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2048:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable peripheral */
2049:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2050:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2051:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable Rx DMA Request */
2052:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2053:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2054:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2055:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2056:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2057:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2058:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2059:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check error during Abort procedure */
2060:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2061:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2062:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2063:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
2064:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2065:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
2066:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2067:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset errorCode */
2068:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2069:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2070:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2071:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2072:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2073:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2074:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2075:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2076:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2077:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Restore hspi->state to ready */
2078:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2079:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2080:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
2081:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2082:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2083:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2084:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2085:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle.
2086:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
ARM GAS  /tmp/ccefzn75.s 			page 38


2087:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2088:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         This procedure performs following operations :
2089:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2090:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2091:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2092:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - Set handle State to READY
2093:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2094:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2095:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2096:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2097:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2098:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2099:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2100:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2101:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t abortcplt ;
2102:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
2103:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t resetcount;
2104:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2105:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Initialized local variable  */
2106:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   errorcode = HAL_OK;
2107:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   abortcplt = 1U;
2108:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2109:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
2110:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2111:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2112:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2113:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2114:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2115:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2116:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2117:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2118:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2119:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
2120:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2121:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
2122:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2123:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2124:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
2125:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2126:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
2127:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2128:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
2129:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
2130:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2131:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2132:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2133:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2134:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2135:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2136:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     do
2137:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2138:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (count == 0U)
2139:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2140:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2141:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
2142:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2143:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       count--;
ARM GAS  /tmp/ccefzn75.s 			page 39


2144:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
2145:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
2146:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count = resetcount;
2147:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2148:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2149:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2150:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      before any call to DMA Abort functions */
2151:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2152:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2153:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2154:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2155:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Otherwise, set it to NULL */
2156:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2157:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2158:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2159:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2160:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2161:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2162:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2163:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2164:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2165:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2166:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2167:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2168:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2169:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        Otherwise, set it to NULL */
2170:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2171:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2172:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2173:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2174:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2175:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2176:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2177:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2178:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2179:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2180:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2181:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2182:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2183:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2184:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2185:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2186:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2187:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2188:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2190:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2191:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2192:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2193:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2194:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         abortcplt = 0U;
2195:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2196:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2197:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2198:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2199:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2200:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccefzn75.s 			page 40


2201:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2202:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2203:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2204:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2205:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2206:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2207:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2208:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2209:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2210:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2211:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2212:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         abortcplt = 0U;
2213:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2214:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2215:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2216:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2217:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (abortcplt == 1U)
2218:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2219:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2220:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2221:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2222:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2223:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check error during Abort procedure */
2224:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2225:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2226:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2227:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2228:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2229:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
2230:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2231:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Reset errorCode */
2232:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2233:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2234:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2235:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2236:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2237:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2238:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
2239:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2240:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2241:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2242:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2243:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2244:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2245:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2246:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2247:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2248:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2249:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2250:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2251:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2252:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
2253:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2254:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2255:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2256:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2257:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccefzn75.s 			page 41


2258:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2259:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2260:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2261:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2262:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2263:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
2264:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
2265:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2266:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2267:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2268:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2269:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
2270:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2271:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2272:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
2273:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2274:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2275:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2276:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2277:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2278:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2279:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2280:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2281:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2282:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2283:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
2284:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_LOCK(hspi);
2285:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2286:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2287:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2288:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2289:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
2290:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2291:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2292:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
2293:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2294:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2295:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2296:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2297:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2298:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2299:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
2300:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2301:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2302:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2303:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2304:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2305:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2306:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2307:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2308:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      */
2309:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2310:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2311:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2312:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2313:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2314:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccefzn75.s 			page 42


2315:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2316:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2317:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2318:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2319:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2320:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2321:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2322:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2323:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2324:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2325:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
2326:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2327:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2328:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2329:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2330:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2331:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2332:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
2333:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2334:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2335:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2336:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2337:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2338:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2339:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2340:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2341:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2342:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2343:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2344:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2345:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2346:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2347:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
2348:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2349:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2350:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxISR(hspi);
2351:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
2352:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2353:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2354:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2355:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2356:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2357:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR(hspi);
2358:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
2359:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2360:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2361:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2362:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2363:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2364:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT
2365:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2366:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2367:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
2368:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2369:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2370:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2371:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
ARM GAS  /tmp/ccefzn75.s 			page 43


2372:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2373:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2374:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2375:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2376:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2377:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2378:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2379:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2380:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2381:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return;
2382:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2383:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2384:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2385:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2386:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2387:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2388:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2389:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2390:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2391:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2392:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2393:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2394:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
2395:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2396:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2397:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2398:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2399:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2400:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2401:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2402:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2403:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable all interrupts */
2404:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2405:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2406:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2407:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2408:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2409:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2410:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2411:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2412:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2413:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2414:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
2415:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2416:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2417:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2418:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2419:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
2420:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2421:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
2422:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
2423:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2424:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2425:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
2426:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2427:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2428:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
ARM GAS  /tmp/ccefzn75.s 			page 44


2429:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2430:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
2431:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2432:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
2433:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
2434:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2435:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
2436:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2437:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user error callback */
2438:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2439:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2440:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2441:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2442:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2443:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2444:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2445:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
2446:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2447:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2448:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2449:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2450:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2451:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2452:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2453:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2454:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2455:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2456:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2457:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2458:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2459:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2460:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2461:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2462:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2463:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2464:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2465:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2466:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2467:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2468:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2469:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2470:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2471:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2472:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2473:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2474:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2475:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2476:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2477:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2478:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2479:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2480:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2481:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2482:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2483:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2484:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2485:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/ccefzn75.s 			page 45


2486:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2487:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2488:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2489:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2490:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2491:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2492:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2493:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2494:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2495:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2496:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2497:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2498:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2499:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2500:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2501:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2502:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2503:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2504:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2505:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2506:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2507:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2508:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2509:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2510:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2511:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2512:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2513:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2514:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2515:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2516:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2517:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2518:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2519:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2520:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2521:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2522:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2523:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2524:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2525:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2526:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2527:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2528:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2529:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2530:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2531:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2532:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2533:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2534:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2535:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2536:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2537:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2538:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2539:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2540:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2541:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2542:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
ARM GAS  /tmp/ccefzn75.s 			page 46


2543:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2544:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2545:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2546:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  SPI error callback.
2547:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2548:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2549:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2550:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2551:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2552:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2553:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2554:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2555:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2556:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2557:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2558:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2559:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2560:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2561:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2562:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2563:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2564:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2565:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2566:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle.
2567:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2568:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2569:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2570:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2571:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2572:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   UNUSED(hspi);
2573:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2574:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2575:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2576:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****    */
2577:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2578:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2579:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2580:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
2581:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2582:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2583:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2584:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief   SPI control functions
2585:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *
2586:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @verbatim
2587:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
2588:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2589:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****  ===============================================================================
2590:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     [..]
2591:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2592:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2593:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2594:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** @endverbatim
2595:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
2596:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2597:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2598:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2599:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Return the SPI handle state.
ARM GAS  /tmp/ccefzn75.s 			page 47


2600:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2601:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2602:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval SPI state
2603:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2604:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2605:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2606:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI handle state */
2607:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return hspi->State;
2608:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2609:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2610:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2611:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Return the SPI error code.
2612:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2613:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
2614:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2615:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2616:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2617:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2618:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI ErrorCode */
2619:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return hspi->ErrorCode;
2620:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2621:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2622:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2623:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
2624:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2625:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2626:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2627:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @}
2628:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2629:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2630:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2631:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief   Private functions
2632:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @{
2633:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2634:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2635:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2636:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2637:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2638:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2639:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2640:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2641:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2642:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2643:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2644:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
2645:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2646:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2647:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2648:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2649:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Normal Mode */
2650:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2651:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2652:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable ERR interrupt */
2653:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2654:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2655:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable Tx DMA Request */
2656:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
ARM GAS  /tmp/ccefzn75.s 			page 48


2657:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2658:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check the end of the transaction */
2659:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2660:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2661:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2662:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2663:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2664:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2665:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
2666:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2667:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2668:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2669:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2670:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2671:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2672:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2673:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2674:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2675:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
2676:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2677:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2678:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2679:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2680:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2681:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2682:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2683:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2684:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Tx complete callback */
2685:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2686:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2687:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2688:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2689:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2690:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2691:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2692:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2693:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2694:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2695:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2696:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2697:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2698:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2699:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2700:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2701:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
2702:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2703:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2704:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2705:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2706:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Normal Mode */
2707:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2708:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2709:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable ERR interrupt */
2710:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2711:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2712:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2713:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* CRC handling */
ARM GAS  /tmp/ccefzn75.s 			page 49


2714:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2715:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2716:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait until RXNE flag */
2717:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2718:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2719:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Error on the CRC reception */
2720:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2721:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2722:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Read CRC */
2723:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2724:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2725:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2726:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2727:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
2728:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2729:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2730:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check the end of the transaction */
2731:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2732:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2733:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
2734:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2735:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2736:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2737:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2738:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2739:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2740:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check if CRC error occurred */
2741:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2742:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2743:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2744:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2745:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2746:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2747:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2748:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2749:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2750:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
2751:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2752:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2753:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2754:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2755:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2756:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2757:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2758:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2759:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Rx complete callback */
2760:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2761:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
2762:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2763:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
2764:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2765:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2766:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2767:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2768:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2769:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2770:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
ARM GAS  /tmp/ccefzn75.s 			page 50


2771:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2772:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2773:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2774:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2775:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2776:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
2777:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2778:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2779:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
2780:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2781:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* DMA Normal Mode */
2782:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
2783:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2784:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable ERR interrupt */
2785:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2786:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2787:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2788:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* CRC handling */
2789:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2790:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2791:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait the CRC data */
2792:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2793:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
2794:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2795:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
2796:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Read CRC to Flush DR and RXNE flag */
2797:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
2798:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2799:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2800:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2801:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check the end of the transaction */
2802:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2803:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2804:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2805:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2806:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2807:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2808:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2809:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2810:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2811:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2812:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2813:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2814:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2815:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Check if CRC error occurred */
2816:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
2817:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2818:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2819:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2820:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2821:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2822:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2823:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2824:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2825:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
2826:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2827:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
ARM GAS  /tmp/ccefzn75.s 			page 51


2828:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2829:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2830:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2831:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2832:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2833:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2834:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user TxRx complete callback */
2835:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2836:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
2837:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2838:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
2839:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2840:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2841:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2842:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2843:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2844:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2845:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2846:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2847:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2848:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2849:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2850:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2851:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2852:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Tx half complete callback */
2853:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2854:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
2855:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2856:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
2857:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2858:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2859:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2860:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2861:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2862:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2863:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2864:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2865:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2866:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2867:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2868:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2869:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2870:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Rx half complete callback */
2871:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2872:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
2873:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2874:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
2875:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2876:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2877:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2878:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2879:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
2880:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2881:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2882:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2883:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2884:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccefzn75.s 			page 52


2885:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2886:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2887:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2888:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user TxRx half complete callback */
2889:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2890:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
2891:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2892:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
2893:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2894:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2895:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2896:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2897:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
2898:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2899:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2900:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2901:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2902:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2903:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2904:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2905:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2906:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
2907:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2908:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2909:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2910:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2911:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user error callback */
2912:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2913:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
2914:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2915:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2916:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2917:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2918:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2919:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2920:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
2921:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2922:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma DMA handle.
2923:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2924:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2925:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2926:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2927:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2928:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2929:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2930:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2931:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user error callback */
2932:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2933:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
2934:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
2935:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2936:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2937:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
2938:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2939:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
2940:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
2941:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
ARM GAS  /tmp/ccefzn75.s 			page 53


2942:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2943:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
2944:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma DMA handle.
2945:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
2946:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
2947:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2948:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
2949:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2950:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
2951:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2952:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
2953:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2954:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2955:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable Tx DMA Request */
2956:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2957:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2958:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
2959:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
2960:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2961:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
2962:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2963:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2964:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
2965:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2966:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
2967:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
2968:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2969:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
2970:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2971:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2972:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
2973:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
2974:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
2975:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
2976:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2977:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2978:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
2979:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2980:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2981:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2982:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check no error during Abort procedure */
2983:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
2984:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
2985:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset errorCode */
2986:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2987:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
2988:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2989:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2990:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2991:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
2992:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2993:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
2994:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2995:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
2996:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
2997:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
2998:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Abort complete callback */
ARM GAS  /tmp/ccefzn75.s 			page 54


2999:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3000:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3001:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3002:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3003:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3004:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3005:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3006:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3007:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3008:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3009:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3010:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3011:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hdma DMA handle.
3012:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3013:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3014:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3015:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3016:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3017:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3018:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3019:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3020:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3021:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3022:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3023:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable Rx DMA Request */
3024:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3025:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3026:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check Busy flag */
3027:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3028:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3029:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
3030:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3031:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3032:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3033:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3034:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3035:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3036:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3037:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3038:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3039:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3040:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3041:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3042:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3043:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3044:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3045:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3046:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3047:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3048:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset errorCode */
3049:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3050:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3051:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3052:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3053:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3054:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
3055:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
ARM GAS  /tmp/ccefzn75.s 			page 55


3056:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
3057:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3058:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3059:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3060:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3061:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user Abort complete callback */
3062:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3063:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3064:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3065:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3066:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3067:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3068:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3069:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3070:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3071:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3072:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3073:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3074:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3075:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3076:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3077:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 8bit mode */
3078:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3079:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3080:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3081:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3082:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check end of the reception */
3083:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3084:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3085:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3086:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3087:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3088:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3089:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3090:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3091:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3092:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3093:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3094:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3095:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3096:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3097:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3098:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3099:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3100:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3101:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3102:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3103:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3104:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3105:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3106:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3107:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3108:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3109:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3110:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3111:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3112:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
ARM GAS  /tmp/ccefzn75.s 			page 56


3113:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3114:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3115:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3116:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3117:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3118:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3119:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3120:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseRxTx_ISR(hspi);
3121:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3122:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3123:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3124:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3125:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3126:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3127:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3128:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3129:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3130:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3131:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3132:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3133:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3134:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3135:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3136:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3137:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transmission */
3138:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3139:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3140:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3141:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3142:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3143:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3144:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3145:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable TXE interrupt */
3146:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3147:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3148:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3149:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3150:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3151:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable TXE interrupt */
3152:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3153:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3154:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3155:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3156:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3157:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3158:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3159:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3160:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3161:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3162:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3163:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3164:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3165:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3166:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3167:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3168:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3169:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
ARM GAS  /tmp/ccefzn75.s 			page 57


3170:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3171:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3172:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3173:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3174:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3175:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3176:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3177:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3178:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3179:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3180:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3181:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3182:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3183:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3184:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable RXNE interrupt */
3185:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3186:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3187:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3188:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3190:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3191:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3192:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3193:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3194:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3195:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3196:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3197:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3198:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3199:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3200:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3201:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3202:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3203:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3204:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3205:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3206:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE interrupt */
3207:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3208:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3209:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3210:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3211:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3212:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3213:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3214:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3215:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3216:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3217:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3218:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3219:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3220:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3221:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3222:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3223:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3224:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3225:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3226:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
ARM GAS  /tmp/ccefzn75.s 			page 58


3227:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3228:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3229:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3230:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3231:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3232:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3233:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3234:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable TXE interrupt */
3235:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3236:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3237:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3238:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3239:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3240:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable TXE interrupt */
3241:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3242:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3243:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3244:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3245:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3246:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3247:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3248:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3249:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3250:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3251:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3252:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3253:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3254:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3255:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3256:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3257:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3258:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3259:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3260:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3261:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3262:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3263:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3264:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3265:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3266:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3267:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3268:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3269:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3270:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3271:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3272:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3273:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3274:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3275:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3276:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3277:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3278:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3279:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
3280:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3281:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3282:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3283:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccefzn75.s 			page 59


3284:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3285:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3286:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3287:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3288:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3289:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3290:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3291:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3292:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3293:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3294:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3295:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3296:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3297:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3298:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3299:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3300:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3301:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3302:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3303:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3304:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3305:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3306:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3307:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3308:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3309:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3310:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3311:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3312:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3313:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3314:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3315:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3316:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3317:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3318:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3319:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3320:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3321:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3322:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3323:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3324:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3325:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3326:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3327:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3328:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
3329:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3330:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3331:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Enable CRC Transmission */
3332:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3333:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3334:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3335:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3336:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3337:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3338:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3339:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3340:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccefzn75.s 			page 60


3341:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3342:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3343:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3344:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return;
3345:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3346:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3347:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3348:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3349:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3350:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3351:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3352:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3353:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3354:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3355:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3356:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3357:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3358:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3359:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3360:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3361:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3362:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3363:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3364:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3365:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3366:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3367:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3368:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Enable CRC Transmission */
3369:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3370:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3371:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3372:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3373:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3374:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3375:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3376:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3377:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3378:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3379:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3380:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3381:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3382:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3383:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3384:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3385:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3386:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3387:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
3388:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3389:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3390:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3391:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3392:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3393:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3394:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Enable CRC Transmission */
3395:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3396:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3397:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/ccefzn75.s 			page 61


3398:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3399:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3400:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3401:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3402:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3403:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3404:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3405:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *              the configuration information for SPI module.
3406:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Flag SPI flag to check
3407:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  State flag state to check
3408:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3409:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Tickstart tick start value
3410:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
3411:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3412:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3413:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3414:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3415:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
3416:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3417:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
3418:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3419:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
3420:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3421:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3422:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3423:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         and slave for their respective CRC calculation */
3424:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3425:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3426:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
3427:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3428:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3429:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3430:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
3431:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           /* Disable SPI peripheral */
3432:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3433:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
3434:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3435:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Reset CRC Calculation */
3436:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3437:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
3438:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3439:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
3440:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3441:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3442:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3443:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Process Unlocked */
3444:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
3445:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3446:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3447:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3448:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3449:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3450:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3451:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
3452:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3453:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3454:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
ARM GAS  /tmp/ccefzn75.s 			page 62


3455:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3456:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3457:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3458:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3459:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Tickstart tick start value
3460:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
3461:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3462:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3463:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3464:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3465:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3466:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3467:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Disable SPI peripheral */
3468:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3469:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3470:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3471:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
3472:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
3473:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3474:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
3475:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3476:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Control the BSY flag */
3477:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3478:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3479:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3480:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3481:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3482:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3483:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
3484:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3485:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait the RXNE reset */
3486:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3487:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3488:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3489:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3490:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3491:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3492:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3493:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3494:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3495:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait the RXNE reset */
3496:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3497:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3498:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3499:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
3500:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3501:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3502:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
3503:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3504:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3505:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3506:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3507:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi SPI handle
3508:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3509:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  Tickstart tick start value
3510:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval HAL status
3511:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
ARM GAS  /tmp/ccefzn75.s 			page 63


3512:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3513:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3514:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
3515:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Mode == SPI_MODE_MASTER)
3516:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3517:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Control the BSY flag */
3518:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3519:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3520:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3521:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
3522:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3523:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3524:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3525:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3526:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Control RXNE flag in case of Full-Duplex transfer */
3527:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
3528:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3529:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Wait the RXNE reset */
3530:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
3531:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3532:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3533:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
3534:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3535:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3536:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3537:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return HAL_OK;
3538:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3539:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3540:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3541:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3542:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3543:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3544:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3545:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3546:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3547:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3548:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
3549:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3550:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3551:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3552:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3553:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3554:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable ERR interrupt */
3555:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3556:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3557:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3558:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3559:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3560:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
3561:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3562:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3563:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
3564:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3565:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
3566:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3567:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3568:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
ARM GAS  /tmp/ccefzn75.s 			page 64


3569:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3570:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3571:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3572:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3573:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3574:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3575:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3576:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3577:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3578:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3579:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3580:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3581:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
3582:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3583:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3584:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3585:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3586:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3587:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user error callback */
3588:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3589:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3590:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3591:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3592:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3593:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3594:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3595:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3596:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3597:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3598:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3599:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
3600:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3601:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3602:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user Rx complete callback */
3603:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3604:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
3605:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3606:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
3607:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3608:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3609:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       else
3610:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
3611:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3612:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user TxRx complete callback */
3613:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3614:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
3615:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3616:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3617:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3618:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
3619:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3620:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
3621:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3622:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3623:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
3624:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3625:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
ARM GAS  /tmp/ccefzn75.s 			page 65


3626:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3627:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3628:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3629:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3630:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3631:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3632:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3633:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3634:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3635:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3636:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3637:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3638:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3639:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3640:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3641:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3642:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3643:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3644:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3645:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3646:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
3647:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3648:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3649:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3650:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3651:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3652:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3653:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3654:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3655:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3656:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3657:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3658:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3659:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3660:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check if CRC error occurred */
3661:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3662:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3663:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3664:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3665:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user error callback */
3666:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3667:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3668:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3669:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3670:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3671:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3672:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3673:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3674:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3675:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3676:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3677:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user Rx complete callback */
3678:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3679:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3680:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3681:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
3682:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccefzn75.s 			page 66


3683:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3684:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     else
3685:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3686:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
3687:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3688:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3689:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3690:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3691:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3692:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3693:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3694:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3695:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3696:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3697:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3698:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3699:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3700:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3701:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3702:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3703:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3704:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3705:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
3706:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
3707:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
3708:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3709:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3710:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tickstart = HAL_GetTick();
3711:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3712:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3713:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3714:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3715:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
3716:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3717:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3718:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
3719:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3720:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
3721:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
3722:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3723:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3724:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
3725:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3726:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the end of the transaction */
3727:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3728:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3729:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3730:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3731:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3732:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3733:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
3734:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3735:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
3736:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3737:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3738:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3739:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
ARM GAS  /tmp/ccefzn75.s 			page 67


3740:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3741:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user error callback */
3742:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3743:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3744:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3745:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3746:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3747:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3748:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   else
3749:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3750:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call user Rx complete callback */
3751:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3752:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
3753:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #else
3754:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3755:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3756:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
3757:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
3758:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3759:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3760:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3761:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3762:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3763:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3764:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3765:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3766:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
  25              		.loc 1 3766 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
3767:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
  34              		.loc 1 3767 0
  35 0002 154B     		ldr	r3, .L7
  36 0004 1B68     		ldr	r3, [r3]
  37 0006 154A     		ldr	r2, .L7+4
  38 0008 A2FB0323 		umull	r2, r3, r2, r3
  39 000c 5B0A     		lsrs	r3, r3, #9
  40 000e 6422     		movs	r2, #100
  41 0010 02FB03F3 		mul	r3, r2, r3
  42 0014 0193     		str	r3, [sp, #4]
  43              	.L4:
3768:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3769:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3770:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   do
3771:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
3772:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     if (count == 0U)
  44              		.loc 1 3772 0
  45 0016 019B     		ldr	r3, [sp, #4]
  46 0018 43B1     		cbz	r3, .L6
3773:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
3774:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
ARM GAS  /tmp/ccefzn75.s 			page 68


3775:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
3776:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
3777:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     count--;
  47              		.loc 1 3777 0
  48 001a 019B     		ldr	r3, [sp, #4]
  49 001c 013B     		subs	r3, r3, #1
  50 001e 0193     		str	r3, [sp, #4]
3778:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
  51              		.loc 1 3778 0
  52 0020 0368     		ldr	r3, [r0]
  53 0022 9B68     		ldr	r3, [r3, #8]
  54 0024 13F0020F 		tst	r3, #2
  55 0028 F5D0     		beq	.L4
  56 002a 03E0     		b	.L3
  57              	.L6:
3774:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
  58              		.loc 1 3774 0
  59 002c 436D     		ldr	r3, [r0, #84]
  60 002e 43F04003 		orr	r3, r3, #64
  61 0032 4365     		str	r3, [r0, #84]
  62              	.L3:
3779:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3780:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3781:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
  63              		.loc 1 3781 0
  64 0034 0268     		ldr	r2, [r0]
  65 0036 1368     		ldr	r3, [r2]
  66 0038 23F04003 		bic	r3, r3, #64
  67 003c 1360     		str	r3, [r2]
3782:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3783:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3784:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
  68              		.loc 1 3784 0
  69 003e 0268     		ldr	r2, [r0]
  70 0040 5368     		ldr	r3, [r2, #4]
  71 0042 23F0E003 		bic	r3, r3, #224
  72 0046 5360     		str	r3, [r2, #4]
3785:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3786:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Read CRC to flush Data Register */
3787:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
  73              		.loc 1 3787 0
  74 0048 0368     		ldr	r3, [r0]
  75 004a DB68     		ldr	r3, [r3, #12]
3788:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3789:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
  76              		.loc 1 3789 0
  77 004c 0723     		movs	r3, #7
  78 004e 80F85130 		strb	r3, [r0, #81]
3790:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
  79              		.loc 1 3790 0
  80 0052 02B0     		add	sp, sp, #8
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 0
  83              		@ sp needed
  84 0054 7047     		bx	lr
  85              	.L8:
  86 0056 00BF     		.align	2
ARM GAS  /tmp/ccefzn75.s 			page 69


  87              	.L7:
  88 0058 00000000 		.word	SystemCoreClock
  89 005c F1197605 		.word	91625969
  90              		.cfi_endproc
  91              	.LFE125:
  93              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
  94              		.align	1
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu softvfp
 100              	SPI_AbortTx_ISR:
 101              	.LFB126:
3791:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3792:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** /**
3793:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3794:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3795:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *               the configuration information for SPI module.
3796:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   * @retval None
3797:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   */
3798:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3799:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** {
 102              		.loc 1 3799 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.LVL1:
3800:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable TXEIE interrupt */
3801:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 108              		.loc 1 3801 0
 109 0000 0268     		ldr	r2, [r0]
 110 0002 5368     		ldr	r3, [r2, #4]
 111 0004 23F08003 		bic	r3, r3, #128
 112 0008 5360     		str	r3, [r2, #4]
3802:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3803:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3804:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 113              		.loc 1 3804 0
 114 000a 0268     		ldr	r2, [r0]
 115 000c 1368     		ldr	r3, [r2]
 116 000e 23F04003 		bic	r3, r3, #64
 117 0012 1360     		str	r3, [r2]
3805:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
3806:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 118              		.loc 1 3806 0
 119 0014 0723     		movs	r3, #7
 120 0016 80F85130 		strb	r3, [r0, #81]
 121 001a 7047     		bx	lr
 122              		.cfi_endproc
 123              	.LFE126:
 125              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 126              		.align	1
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu softvfp
ARM GAS  /tmp/ccefzn75.s 			page 70


 132              	SPI_WaitFlagStateUntilTimeout:
 133              	.LFB119:
3414:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 134              		.loc 1 3414 0
 135              		.cfi_startproc
 136              		@ args = 4, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL2:
 139 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 24
 142              		.cfi_offset 3, -24
 143              		.cfi_offset 4, -20
 144              		.cfi_offset 5, -16
 145              		.cfi_offset 6, -12
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 0546     		mov	r5, r0
 149 0004 0F46     		mov	r7, r1
 150 0006 1646     		mov	r6, r2
 151 0008 1C46     		mov	r4, r3
 152              	.LVL3:
 153              	.L12:
3415:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 154              		.loc 1 3415 0
 155 000a 2B68     		ldr	r3, [r5]
 156 000c 9B68     		ldr	r3, [r3, #8]
 157 000e 37EA0303 		bics	r3, r7, r3
 158 0012 0CBF     		ite	eq
 159 0014 0123     		moveq	r3, #1
 160 0016 0023     		movne	r3, #0
 161 0018 B342     		cmp	r3, r6
 162 001a 37D0     		beq	.L20
3417:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 163              		.loc 1 3417 0
 164 001c B4F1FF3F 		cmp	r4, #-1
 165 0020 F3D0     		beq	.L12
3419:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 166              		.loc 1 3419 0
 167 0022 FFF7FEFF 		bl	HAL_GetTick
 168              	.LVL4:
 169 0026 069B     		ldr	r3, [sp, #24]
 170 0028 C01A     		subs	r0, r0, r3
 171 002a 8442     		cmp	r4, r0
 172 002c 01D9     		bls	.L13
3419:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 173              		.loc 1 3419 0 is_stmt 0 discriminator 1
 174 002e 002C     		cmp	r4, #0
 175 0030 EBD1     		bne	.L12
 176              	.L13:
3426:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 177              		.loc 1 3426 0 is_stmt 1
 178 0032 2A68     		ldr	r2, [r5]
 179 0034 5368     		ldr	r3, [r2, #4]
 180 0036 23F0E003 		bic	r3, r3, #224
 181 003a 5360     		str	r3, [r2, #4]
3428:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
ARM GAS  /tmp/ccefzn75.s 			page 71


 182              		.loc 1 3428 0
 183 003c 6B68     		ldr	r3, [r5, #4]
 184 003e B3F5827F 		cmp	r3, #260
 185 0042 0BD0     		beq	.L21
 186              	.L14:
3436:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 187              		.loc 1 3436 0
 188 0044 AB6A     		ldr	r3, [r5, #40]
 189 0046 B3F5005F 		cmp	r3, #8192
 190 004a 14D0     		beq	.L22
 191              	.L16:
3441:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 192              		.loc 1 3441 0
 193 004c 0123     		movs	r3, #1
 194 004e 85F85130 		strb	r3, [r5, #81]
3444:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 195              		.loc 1 3444 0
 196 0052 0023     		movs	r3, #0
 197 0054 85F85030 		strb	r3, [r5, #80]
3446:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 198              		.loc 1 3446 0
 199 0058 0320     		movs	r0, #3
 200 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 201              	.LVL5:
 202              	.L21:
3428:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 203              		.loc 1 3428 0 discriminator 1
 204 005c AB68     		ldr	r3, [r5, #8]
 205 005e B3F5004F 		cmp	r3, #32768
 206 0062 02D0     		beq	.L15
3429:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 207              		.loc 1 3429 0
 208 0064 B3F5806F 		cmp	r3, #1024
 209 0068 ECD1     		bne	.L14
 210              	.L15:
3432:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 211              		.loc 1 3432 0
 212 006a 2A68     		ldr	r2, [r5]
 213 006c 1368     		ldr	r3, [r2]
 214 006e 23F04003 		bic	r3, r3, #64
 215 0072 1360     		str	r3, [r2]
 216 0074 E6E7     		b	.L14
 217              	.L22:
3438:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         }
 218              		.loc 1 3438 0
 219 0076 2A68     		ldr	r2, [r5]
 220 0078 1368     		ldr	r3, [r2]
 221 007a 23F40053 		bic	r3, r3, #8192
 222 007e 1360     		str	r3, [r2]
 223 0080 2A68     		ldr	r2, [r5]
 224 0082 1368     		ldr	r3, [r2]
 225 0084 43F40053 		orr	r3, r3, #8192
 226 0088 1360     		str	r3, [r2]
 227 008a DFE7     		b	.L16
 228              	.L20:
3451:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 229              		.loc 1 3451 0
ARM GAS  /tmp/ccefzn75.s 			page 72


 230 008c 0020     		movs	r0, #0
3452:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 231              		.loc 1 3452 0
 232 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 233              		.cfi_endproc
 234              	.LFE119:
 236              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 237              		.align	1
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu softvfp
 243              	SPI_EndRxTxTransaction:
 244              	.LFB121:
3513:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
 245              		.loc 1 3513 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              	.LVL6:
 250 0000 10B5     		push	{r4, lr}
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
 255 0002 82B0     		sub	sp, sp, #8
 256              	.LCFI4:
 257              		.cfi_def_cfa_offset 16
 258 0004 0446     		mov	r4, r0
3515:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 259              		.loc 1 3515 0
 260 0006 4068     		ldr	r0, [r0, #4]
 261              	.LVL7:
 262 0008 B0F5827F 		cmp	r0, #260
 263 000c 08D0     		beq	.L28
3527:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 264              		.loc 1 3527 0
 265 000e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 266 0012 C0B2     		uxtb	r0, r0
 267 0014 0528     		cmp	r0, #5
 268 0016 13D0     		beq	.L29
3537:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 269              		.loc 1 3537 0
 270 0018 0023     		movs	r3, #0
 271              	.LVL8:
 272              	.L25:
3538:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 273              		.loc 1 3538 0
 274 001a 1846     		mov	r0, r3
 275 001c 02B0     		add	sp, sp, #8
 276              	.LCFI5:
 277              		.cfi_remember_state
 278              		.cfi_def_cfa_offset 8
 279              		@ sp needed
 280 001e 10BD     		pop	{r4, pc}
 281              	.LVL9:
 282              	.L28:
ARM GAS  /tmp/ccefzn75.s 			page 73


 283              	.LCFI6:
 284              		.cfi_restore_state
3518:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 285              		.loc 1 3518 0
 286 0020 0092     		str	r2, [sp]
 287 0022 0B46     		mov	r3, r1
 288 0024 0022     		movs	r2, #0
 289              	.LVL10:
 290 0026 8021     		movs	r1, #128
 291              	.LVL11:
 292 0028 2046     		mov	r0, r4
 293 002a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 294              	.LVL12:
 295 002e 0346     		mov	r3, r0
 296 0030 0028     		cmp	r0, #0
 297 0032 F2D0     		beq	.L25
3520:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
 298              		.loc 1 3520 0
 299 0034 636D     		ldr	r3, [r4, #84]
 300 0036 43F02003 		orr	r3, r3, #32
 301 003a 6365     		str	r3, [r4, #84]
3521:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 302              		.loc 1 3521 0
 303 003c 0323     		movs	r3, #3
 304 003e ECE7     		b	.L25
 305              	.LVL13:
 306              	.L29:
3530:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 307              		.loc 1 3530 0
 308 0040 0092     		str	r2, [sp]
 309 0042 0B46     		mov	r3, r1
 310 0044 0022     		movs	r2, #0
 311              	.LVL14:
 312 0046 0121     		movs	r1, #1
 313              	.LVL15:
 314 0048 2046     		mov	r0, r4
 315 004a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 316              	.LVL16:
 317 004e 0346     		mov	r3, r0
 318 0050 0028     		cmp	r0, #0
 319 0052 E2D0     		beq	.L25
3532:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
 320              		.loc 1 3532 0
 321 0054 636D     		ldr	r3, [r4, #84]
 322 0056 43F02003 		orr	r3, r3, #32
 323 005a 6365     		str	r3, [r4, #84]
3533:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 324              		.loc 1 3533 0
 325 005c 0323     		movs	r3, #3
 326 005e DCE7     		b	.L25
 327              		.cfi_endproc
 328              	.LFE121:
 330              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 331              		.align	1
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
ARM GAS  /tmp/ccefzn75.s 			page 74


 335              		.fpu softvfp
 337              	SPI_EndRxTransaction:
 338              	.LFB120:
3463:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 339              		.loc 1 3463 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              	.LVL17:
 344 0000 10B5     		push	{r4, lr}
 345              	.LCFI7:
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 4, -8
 348              		.cfi_offset 14, -4
 349 0002 82B0     		sub	sp, sp, #8
 350              	.LCFI8:
 351              		.cfi_def_cfa_offset 16
 352 0004 0446     		mov	r4, r0
3464:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 353              		.loc 1 3464 0
 354 0006 4068     		ldr	r0, [r0, #4]
 355              	.LVL18:
 356 0008 B0F5827F 		cmp	r0, #260
 357 000c 14D0     		beq	.L37
 358              	.L31:
3472:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 359              		.loc 1 3472 0
 360 000e 6068     		ldr	r0, [r4, #4]
 361 0010 B0F5827F 		cmp	r0, #260
 362 0014 1DD0     		beq	.L38
3496:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 363              		.loc 1 3496 0
 364 0016 0092     		str	r2, [sp]
 365 0018 0B46     		mov	r3, r1
 366 001a 0022     		movs	r2, #0
 367              	.LVL19:
 368 001c 0121     		movs	r1, #1
 369              	.LVL20:
 370 001e 2046     		mov	r0, r4
 371 0020 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 372              	.LVL21:
 373 0024 0346     		mov	r3, r0
 374 0026 20B1     		cbz	r0, .L35
3498:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       return HAL_TIMEOUT;
 375              		.loc 1 3498 0
 376 0028 636D     		ldr	r3, [r4, #84]
 377 002a 43F02003 		orr	r3, r3, #32
 378 002e 6365     		str	r3, [r4, #84]
3499:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 379              		.loc 1 3499 0
 380 0030 0323     		movs	r3, #3
 381              	.L35:
3503:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 382              		.loc 1 3503 0
 383 0032 1846     		mov	r0, r3
 384 0034 02B0     		add	sp, sp, #8
 385              	.LCFI9:
ARM GAS  /tmp/ccefzn75.s 			page 75


 386              		.cfi_remember_state
 387              		.cfi_def_cfa_offset 8
 388              		@ sp needed
 389 0036 10BD     		pop	{r4, pc}
 390              	.LVL22:
 391              	.L37:
 392              	.LCFI10:
 393              		.cfi_restore_state
3464:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 394              		.loc 1 3464 0 discriminator 1
 395 0038 A368     		ldr	r3, [r4, #8]
 396 003a B3F5004F 		cmp	r3, #32768
 397 003e 02D0     		beq	.L32
3465:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 398              		.loc 1 3465 0
 399 0040 B3F5806F 		cmp	r3, #1024
 400 0044 E3D1     		bne	.L31
 401              	.L32:
3468:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 402              		.loc 1 3468 0
 403 0046 2068     		ldr	r0, [r4]
 404 0048 0368     		ldr	r3, [r0]
 405 004a 23F04003 		bic	r3, r3, #64
 406 004e 0360     		str	r3, [r0]
 407 0050 DDE7     		b	.L31
 408              	.L38:
3474:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 409              		.loc 1 3474 0
 410 0052 A368     		ldr	r3, [r4, #8]
 411 0054 B3F5806F 		cmp	r3, #1024
 412 0058 0FD0     		beq	.L34
3477:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 413              		.loc 1 3477 0
 414 005a 0092     		str	r2, [sp]
 415 005c 0B46     		mov	r3, r1
 416 005e 0022     		movs	r2, #0
 417              	.LVL23:
 418 0060 8021     		movs	r1, #128
 419              	.LVL24:
 420 0062 2046     		mov	r0, r4
 421 0064 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 422              	.LVL25:
 423 0068 0346     		mov	r3, r0
 424 006a 0028     		cmp	r0, #0
 425 006c E1D0     		beq	.L35
3479:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
 426              		.loc 1 3479 0
 427 006e 636D     		ldr	r3, [r4, #84]
 428 0070 43F02003 		orr	r3, r3, #32
 429 0074 6365     		str	r3, [r4, #84]
3480:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 430              		.loc 1 3480 0
 431 0076 0323     		movs	r3, #3
 432 0078 DBE7     		b	.L35
 433              	.LVL26:
 434              	.L34:
3486:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
ARM GAS  /tmp/ccefzn75.s 			page 76


 435              		.loc 1 3486 0
 436 007a 0092     		str	r2, [sp]
 437 007c 0B46     		mov	r3, r1
 438 007e 0022     		movs	r2, #0
 439              	.LVL27:
 440 0080 0121     		movs	r1, #1
 441              	.LVL28:
 442 0082 2046     		mov	r0, r4
 443 0084 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 444              	.LVL29:
 445 0088 0346     		mov	r3, r0
 446 008a 0028     		cmp	r0, #0
 447 008c D1D0     		beq	.L35
3488:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return HAL_TIMEOUT;
 448              		.loc 1 3488 0
 449 008e 636D     		ldr	r3, [r4, #84]
 450 0090 43F02003 		orr	r3, r3, #32
 451 0094 6365     		str	r3, [r4, #84]
3489:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 452              		.loc 1 3489 0
 453 0096 0323     		movs	r3, #3
 454 0098 CBE7     		b	.L35
 455              		.cfi_endproc
 456              	.LFE120:
 458              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 459              		.align	1
 460              		.weak	HAL_SPI_MspInit
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu softvfp
 466              	HAL_SPI_MspInit:
 467              	.LFB74:
 463:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 468              		.loc 1 463 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473              	.LVL30:
 474 0000 7047     		bx	lr
 475              		.cfi_endproc
 476              	.LFE74:
 478              		.section	.text.HAL_SPI_Init,"ax",%progbits
 479              		.align	1
 480              		.global	HAL_SPI_Init
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 484              		.fpu softvfp
 486              	HAL_SPI_Init:
 487              	.LFB72:
 310:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 488              		.loc 1 310 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccefzn75.s 			page 77


 492              	.LVL31:
 312:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 493              		.loc 1 312 0
 494 0000 0028     		cmp	r0, #0
 495 0002 33D0     		beq	.L43
 310:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 496              		.loc 1 310 0
 497 0004 10B5     		push	{r4, lr}
 498              	.LCFI11:
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 4, -8
 501              		.cfi_offset 14, -4
 502 0006 0446     		mov	r4, r0
 340:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 503              		.loc 1 340 0
 504 0008 0023     		movs	r3, #0
 505 000a 8362     		str	r3, [r0, #40]
 343:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 506              		.loc 1 343 0
 507 000c 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 508 0010 3BB3     		cbz	r3, .L48
 509              	.LVL32:
 510              	.L42:
 372:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 511              		.loc 1 372 0
 512 0012 0223     		movs	r3, #2
 513 0014 84F85130 		strb	r3, [r4, #81]
 375:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 514              		.loc 1 375 0
 515 0018 2268     		ldr	r2, [r4]
 516 001a 1368     		ldr	r3, [r2]
 517 001c 23F04003 		bic	r3, r3, #64
 518 0020 1360     		str	r3, [r2]
 380:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 519              		.loc 1 380 0
 520 0022 2268     		ldr	r2, [r4]
 521 0024 6368     		ldr	r3, [r4, #4]
 522 0026 A168     		ldr	r1, [r4, #8]
 523 0028 0B43     		orrs	r3, r3, r1
 524 002a E168     		ldr	r1, [r4, #12]
 525 002c 0B43     		orrs	r3, r3, r1
 526 002e 2169     		ldr	r1, [r4, #16]
 527 0030 0B43     		orrs	r3, r3, r1
 528 0032 6169     		ldr	r1, [r4, #20]
 529 0034 0B43     		orrs	r3, r3, r1
 530 0036 A169     		ldr	r1, [r4, #24]
 531 0038 01F40071 		and	r1, r1, #512
 532 003c 0B43     		orrs	r3, r3, r1
 533 003e E169     		ldr	r1, [r4, #28]
 534 0040 0B43     		orrs	r3, r3, r1
 535 0042 216A     		ldr	r1, [r4, #32]
 536 0044 0B43     		orrs	r3, r3, r1
 537 0046 A16A     		ldr	r1, [r4, #40]
 538 0048 0B43     		orrs	r3, r3, r1
 539 004a 1360     		str	r3, [r2]
 389:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 540              		.loc 1 389 0
ARM GAS  /tmp/ccefzn75.s 			page 78


 541 004c 2268     		ldr	r2, [r4]
 542 004e 638B     		ldrh	r3, [r4, #26]
 543 0050 03F00403 		and	r3, r3, #4
 544 0054 5360     		str	r3, [r2, #4]
 406:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 545              		.loc 1 406 0
 546 0056 0020     		movs	r0, #0
 547 0058 6065     		str	r0, [r4, #84]
 407:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 548              		.loc 1 407 0
 549 005a 0123     		movs	r3, #1
 550 005c 84F85130 		strb	r3, [r4, #81]
 409:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 551              		.loc 1 409 0
 552 0060 10BD     		pop	{r4, pc}
 553              	.LVL33:
 554              	.L48:
 346:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 555              		.loc 1 346 0
 556 0062 80F85030 		strb	r3, [r0, #80]
 368:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 557              		.loc 1 368 0
 558 0066 FFF7FEFF 		bl	HAL_SPI_MspInit
 559              	.LVL34:
 560 006a D2E7     		b	.L42
 561              	.LVL35:
 562              	.L43:
 563              	.LCFI12:
 564              		.cfi_def_cfa_offset 0
 565              		.cfi_restore 4
 566              		.cfi_restore 14
 314:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 567              		.loc 1 314 0
 568 006c 0120     		movs	r0, #1
 569              	.LVL36:
 570 006e 7047     		bx	lr
 571              		.cfi_endproc
 572              	.LFE72:
 574              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 575              		.align	1
 576              		.weak	HAL_SPI_MspDeInit
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu softvfp
 582              	HAL_SPI_MspDeInit:
 583              	.LFB75:
 479:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 584              		.loc 1 479 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL37:
 590 0000 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE75:
ARM GAS  /tmp/ccefzn75.s 			page 79


 594              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 595              		.align	1
 596              		.global	HAL_SPI_DeInit
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 600              		.fpu softvfp
 602              	HAL_SPI_DeInit:
 603              	.LFB73:
 419:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 604              		.loc 1 419 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              	.LVL38:
 421:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 609              		.loc 1 421 0
 610 0000 90B1     		cbz	r0, .L52
 419:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 611              		.loc 1 419 0
 612 0002 10B5     		push	{r4, lr}
 613              	.LCFI13:
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 4, -8
 616              		.cfi_offset 14, -4
 617 0004 0446     		mov	r4, r0
 429:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 618              		.loc 1 429 0
 619 0006 0223     		movs	r3, #2
 620 0008 80F85130 		strb	r3, [r0, #81]
 432:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 621              		.loc 1 432 0
 622 000c 0268     		ldr	r2, [r0]
 623 000e 1368     		ldr	r3, [r2]
 624 0010 23F04003 		bic	r3, r3, #64
 625 0014 1360     		str	r3, [r2]
 444:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 626              		.loc 1 444 0
 627 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 628              	.LVL39:
 447:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 629              		.loc 1 447 0
 630 001a 0020     		movs	r0, #0
 631 001c 6065     		str	r0, [r4, #84]
 448:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 632              		.loc 1 448 0
 633 001e 84F85100 		strb	r0, [r4, #81]
 451:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 634              		.loc 1 451 0
 635 0022 84F85000 		strb	r0, [r4, #80]
 453:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 636              		.loc 1 453 0
 637 0026 10BD     		pop	{r4, pc}
 638              	.LVL40:
 639              	.L52:
 640              	.LCFI14:
 641              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccefzn75.s 			page 80


 642              		.cfi_restore 4
 643              		.cfi_restore 14
 423:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 644              		.loc 1 423 0
 645 0028 0120     		movs	r0, #1
 646              	.LVL41:
 647 002a 7047     		bx	lr
 648              		.cfi_endproc
 649              	.LFE73:
 651              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 652              		.align	1
 653              		.global	HAL_SPI_Transmit
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu softvfp
 659              	HAL_SPI_Transmit:
 660              	.LFB76:
 751:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 661              		.loc 1 751 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 8
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              	.LVL42:
 666 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 667              	.LCFI15:
 668              		.cfi_def_cfa_offset 24
 669              		.cfi_offset 4, -24
 670              		.cfi_offset 5, -20
 671              		.cfi_offset 6, -16
 672              		.cfi_offset 7, -12
 673              		.cfi_offset 8, -8
 674              		.cfi_offset 14, -4
 675 0004 82B0     		sub	sp, sp, #8
 676              	.LCFI16:
 677              		.cfi_def_cfa_offset 32
 678              	.LVL43:
 760:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 679              		.loc 1 760 0
 680 0006 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 681 000a 012C     		cmp	r4, #1
 682 000c 03D1     		bne	.L90
 683 000e 0220     		movs	r0, #2
 684              	.LVL44:
 685              	.L58:
 902:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 686              		.loc 1 902 0
 687 0010 02B0     		add	sp, sp, #8
 688              	.LCFI17:
 689              		.cfi_remember_state
 690              		.cfi_def_cfa_offset 24
 691              		@ sp needed
 692 0012 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 693              	.LVL45:
 694              	.L90:
 695              	.LCFI18:
 696              		.cfi_restore_state
ARM GAS  /tmp/ccefzn75.s 			page 81


 697 0016 1D46     		mov	r5, r3
 698 0018 1746     		mov	r7, r2
 699 001a 8846     		mov	r8, r1
 700 001c 0446     		mov	r4, r0
 760:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 701              		.loc 1 760 0 discriminator 2
 702 001e 0123     		movs	r3, #1
 703              	.LVL46:
 704 0020 80F85030 		strb	r3, [r0, #80]
 763:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
 705              		.loc 1 763 0 discriminator 2
 706 0024 FFF7FEFF 		bl	HAL_GetTick
 707              	.LVL47:
 708 0028 0646     		mov	r6, r0
 709              	.LVL48:
 766:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 710              		.loc 1 766 0 discriminator 2
 711 002a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 712 002e DBB2     		uxtb	r3, r3
 713 0030 012B     		cmp	r3, #1
 714 0032 07D0     		beq	.L91
 768:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 715              		.loc 1 768 0
 716 0034 0220     		movs	r0, #2
 717              	.LVL49:
 718              	.L59:
 898:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Unlocked */
 719              		.loc 1 898 0
 720 0036 0123     		movs	r3, #1
 721 0038 84F85130 		strb	r3, [r4, #81]
 900:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 722              		.loc 1 900 0
 723 003c 0023     		movs	r3, #0
 724 003e 84F85030 		strb	r3, [r4, #80]
 901:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 725              		.loc 1 901 0
 726 0042 E5E7     		b	.L58
 727              	.LVL50:
 728              	.L91:
 772:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 729              		.loc 1 772 0
 730 0044 B8F1000F 		cmp	r8, #0
 731 0048 00F09C80 		beq	.L82
 772:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 732              		.loc 1 772 0 is_stmt 0 discriminator 1
 733 004c 002F     		cmp	r7, #0
 734 004e 00F09B80 		beq	.L83
 779:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 735              		.loc 1 779 0 is_stmt 1
 736 0052 0323     		movs	r3, #3
 737 0054 84F85130 		strb	r3, [r4, #81]
 780:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 738              		.loc 1 780 0
 739 0058 0023     		movs	r3, #0
 740 005a 6365     		str	r3, [r4, #84]
 781:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 741              		.loc 1 781 0
ARM GAS  /tmp/ccefzn75.s 			page 82


 742 005c C4F83080 		str	r8, [r4, #48]
 782:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 743              		.loc 1 782 0
 744 0060 A786     		strh	r7, [r4, #52]	@ movhi
 783:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 745              		.loc 1 783 0
 746 0062 E786     		strh	r7, [r4, #54]	@ movhi
 786:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 747              		.loc 1 786 0
 748 0064 A363     		str	r3, [r4, #56]
 787:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 749              		.loc 1 787 0
 750 0066 A387     		strh	r3, [r4, #60]	@ movhi
 788:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 751              		.loc 1 788 0
 752 0068 E387     		strh	r3, [r4, #62]	@ movhi
 789:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 753              		.loc 1 789 0
 754 006a 6364     		str	r3, [r4, #68]
 790:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 755              		.loc 1 790 0
 756 006c 2364     		str	r3, [r4, #64]
 793:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 757              		.loc 1 793 0
 758 006e A368     		ldr	r3, [r4, #8]
 759 0070 B3F5004F 		cmp	r3, #32768
 760 0074 1DD0     		beq	.L92
 761              	.L60:
 807:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 762              		.loc 1 807 0
 763 0076 2368     		ldr	r3, [r4]
 764 0078 1A68     		ldr	r2, [r3]
 765 007a 12F0400F 		tst	r2, #64
 766 007e 03D1     		bne	.L61
 810:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 767              		.loc 1 810 0
 768 0080 1A68     		ldr	r2, [r3]
 769 0082 42F04002 		orr	r2, r2, #64
 770 0086 1A60     		str	r2, [r3]
 771              	.L61:
 814:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 772              		.loc 1 814 0
 773 0088 E368     		ldr	r3, [r4, #12]
 774 008a B3F5006F 		cmp	r3, #2048
 775 008e 16D0     		beq	.L93
 846:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 776              		.loc 1 846 0
 777 0090 6368     		ldr	r3, [r4, #4]
 778 0092 0BB1     		cbz	r3, .L71
 846:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 779              		.loc 1 846 0 is_stmt 0 discriminator 1
 780 0094 012F     		cmp	r7, #1
 781 0096 4CD1     		bne	.L73
 782              	.L71:
 848:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 783              		.loc 1 848 0 is_stmt 1
 784 0098 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccefzn75.s 			page 83


 785 009a 226B     		ldr	r2, [r4, #48]
 786 009c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 787 009e 1A73     		strb	r2, [r3, #12]
 849:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 788              		.loc 1 849 0
 789 00a0 236B     		ldr	r3, [r4, #48]
 790 00a2 0133     		adds	r3, r3, #1
 791 00a4 2363     		str	r3, [r4, #48]
 850:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 792              		.loc 1 850 0
 793 00a6 E38E     		ldrh	r3, [r4, #54]
 794 00a8 9BB2     		uxth	r3, r3
 795 00aa 013B     		subs	r3, r3, #1
 796 00ac 9BB2     		uxth	r3, r3
 797 00ae E386     		strh	r3, [r4, #54]	@ movhi
 798 00b0 3FE0     		b	.L73
 799              	.L92:
 795:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 800              		.loc 1 795 0
 801 00b2 2268     		ldr	r2, [r4]
 802 00b4 1368     		ldr	r3, [r2]
 803 00b6 43F48043 		orr	r3, r3, #16384
 804 00ba 1360     		str	r3, [r2]
 805 00bc DBE7     		b	.L60
 806              	.L93:
 816:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 807              		.loc 1 816 0
 808 00be 6368     		ldr	r3, [r4, #4]
 809 00c0 0BB1     		cbz	r3, .L63
 816:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 810              		.loc 1 816 0 is_stmt 0 discriminator 1
 811 00c2 012F     		cmp	r7, #1
 812 00c4 16D1     		bne	.L65
 813              	.L63:
 818:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 814              		.loc 1 818 0 is_stmt 1
 815 00c6 2368     		ldr	r3, [r4]
 816 00c8 226B     		ldr	r2, [r4, #48]
 817 00ca 1288     		ldrh	r2, [r2]
 818 00cc DA60     		str	r2, [r3, #12]
 819:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 819              		.loc 1 819 0
 820 00ce 236B     		ldr	r3, [r4, #48]
 821 00d0 0233     		adds	r3, r3, #2
 822 00d2 2363     		str	r3, [r4, #48]
 820:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 823              		.loc 1 820 0
 824 00d4 E38E     		ldrh	r3, [r4, #54]
 825 00d6 9BB2     		uxth	r3, r3
 826 00d8 013B     		subs	r3, r3, #1
 827 00da 9BB2     		uxth	r3, r3
 828 00dc E386     		strh	r3, [r4, #54]	@ movhi
 829 00de 09E0     		b	.L65
 830              	.LVL51:
 831              	.L66:
 835:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 832              		.loc 1 835 0
ARM GAS  /tmp/ccefzn75.s 			page 84


 833 00e0 FFF7FEFF 		bl	HAL_GetTick
 834              	.LVL52:
 835 00e4 801B     		subs	r0, r0, r6
 836 00e6 A842     		cmp	r0, r5
 837 00e8 02D3     		bcc	.L68
 835:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 838              		.loc 1 835 0 is_stmt 0 discriminator 1
 839 00ea B5F1FF3F 		cmp	r5, #-1
 840 00ee 4DD1     		bne	.L84
 841              	.L68:
 835:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 842              		.loc 1 835 0 discriminator 3
 843 00f0 002D     		cmp	r5, #0
 844 00f2 4DD0     		beq	.L85
 845              	.L65:
 823:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 846              		.loc 1 823 0 is_stmt 1
 847 00f4 E38E     		ldrh	r3, [r4, #54]
 848 00f6 9BB2     		uxth	r3, r3
 849 00f8 002B     		cmp	r3, #0
 850 00fa 2ED0     		beq	.L70
 826:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 851              		.loc 1 826 0
 852 00fc 2368     		ldr	r3, [r4]
 853 00fe 9A68     		ldr	r2, [r3, #8]
 854 0100 12F0020F 		tst	r2, #2
 855 0104 ECD0     		beq	.L66
 828:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 856              		.loc 1 828 0
 857 0106 226B     		ldr	r2, [r4, #48]
 858 0108 1288     		ldrh	r2, [r2]
 859 010a DA60     		str	r2, [r3, #12]
 829:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 860              		.loc 1 829 0
 861 010c 236B     		ldr	r3, [r4, #48]
 862 010e 0233     		adds	r3, r3, #2
 863 0110 2363     		str	r3, [r4, #48]
 830:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 864              		.loc 1 830 0
 865 0112 E38E     		ldrh	r3, [r4, #54]
 866 0114 9BB2     		uxth	r3, r3
 867 0116 013B     		subs	r3, r3, #1
 868 0118 9BB2     		uxth	r3, r3
 869 011a E386     		strh	r3, [r4, #54]	@ movhi
 870 011c EAE7     		b	.L65
 871              	.L74:
 864:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 872              		.loc 1 864 0
 873 011e FFF7FEFF 		bl	HAL_GetTick
 874              	.LVL53:
 875 0122 801B     		subs	r0, r0, r6
 876 0124 8542     		cmp	r5, r0
 877 0126 02D8     		bhi	.L76
 864:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 878              		.loc 1 864 0 is_stmt 0 discriminator 1
 879 0128 B5F1FF3F 		cmp	r5, #-1
 880 012c 32D1     		bne	.L86
ARM GAS  /tmp/ccefzn75.s 			page 85


 881              	.L76:
 864:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 882              		.loc 1 864 0 discriminator 3
 883 012e 002D     		cmp	r5, #0
 884 0130 32D0     		beq	.L87
 885              	.L73:
 852:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 886              		.loc 1 852 0 is_stmt 1
 887 0132 E28E     		ldrh	r2, [r4, #54]
 888 0134 92B2     		uxth	r2, r2
 889 0136 82B1     		cbz	r2, .L70
 855:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 890              		.loc 1 855 0
 891 0138 2368     		ldr	r3, [r4]
 892 013a 9A68     		ldr	r2, [r3, #8]
 893 013c 12F0020F 		tst	r2, #2
 894 0140 EDD0     		beq	.L74
 857:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 895              		.loc 1 857 0
 896 0142 226B     		ldr	r2, [r4, #48]
 897 0144 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 898 0146 1A73     		strb	r2, [r3, #12]
 858:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 899              		.loc 1 858 0
 900 0148 236B     		ldr	r3, [r4, #48]
 901 014a 0133     		adds	r3, r3, #1
 902 014c 2363     		str	r3, [r4, #48]
 859:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 903              		.loc 1 859 0
 904 014e E28E     		ldrh	r2, [r4, #54]
 905 0150 92B2     		uxth	r2, r2
 906 0152 013A     		subs	r2, r2, #1
 907 0154 92B2     		uxth	r2, r2
 908 0156 E286     		strh	r2, [r4, #54]	@ movhi
 909 0158 EBE7     		b	.L73
 910              	.L70:
 881:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 911              		.loc 1 881 0
 912 015a 3246     		mov	r2, r6
 913 015c 2946     		mov	r1, r5
 914 015e 2046     		mov	r0, r4
 915 0160 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 916              	.LVL54:
 917 0164 08B1     		cbz	r0, .L78
 883:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 918              		.loc 1 883 0
 919 0166 2023     		movs	r3, #32
 920 0168 6365     		str	r3, [r4, #84]
 921              	.L78:
 887:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 922              		.loc 1 887 0
 923 016a A368     		ldr	r3, [r4, #8]
 924 016c 33B9     		cbnz	r3, .L79
 925              	.LBB2:
 889:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 926              		.loc 1 889 0
 927 016e 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccefzn75.s 			page 86


 928 0170 2368     		ldr	r3, [r4]
 929 0172 DA68     		ldr	r2, [r3, #12]
 930 0174 0192     		str	r2, [sp, #4]
 931 0176 9B68     		ldr	r3, [r3, #8]
 932 0178 0193     		str	r3, [sp, #4]
 933 017a 019B     		ldr	r3, [sp, #4]
 934              	.L79:
 935              	.LBE2:
 892:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 936              		.loc 1 892 0
 937 017c 636D     		ldr	r3, [r4, #84]
 938 017e 6BB9     		cbnz	r3, .L88
 753:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 939              		.loc 1 753 0
 940 0180 0020     		movs	r0, #0
 941 0182 58E7     		b	.L59
 942              	.LVL55:
 943              	.L82:
 774:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 944              		.loc 1 774 0
 945 0184 0120     		movs	r0, #1
 946              	.LVL56:
 947 0186 56E7     		b	.L59
 948              	.LVL57:
 949              	.L83:
 950 0188 0120     		movs	r0, #1
 951              	.LVL58:
 952 018a 54E7     		b	.L59
 953              	.L84:
 837:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 954              		.loc 1 837 0
 955 018c 0320     		movs	r0, #3
 956 018e 52E7     		b	.L59
 957              	.L85:
 958 0190 0320     		movs	r0, #3
 959 0192 50E7     		b	.L59
 960              	.L86:
 866:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 961              		.loc 1 866 0
 962 0194 0320     		movs	r0, #3
 963 0196 4EE7     		b	.L59
 964              	.L87:
 965 0198 0320     		movs	r0, #3
 966 019a 4CE7     		b	.L59
 967              	.L88:
 894:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 968              		.loc 1 894 0
 969 019c 0120     		movs	r0, #1
 970 019e 4AE7     		b	.L59
 971              		.cfi_endproc
 972              	.LFE76:
 974              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 975              		.align	1
 976              		.global	HAL_SPI_TransmitReceive
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
ARM GAS  /tmp/ccefzn75.s 			page 87


 980              		.fpu softvfp
 982              	HAL_SPI_TransmitReceive:
 983              	.LFB78:
1106:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 984              		.loc 1 1106 0
 985              		.cfi_startproc
 986              		@ args = 4, pretend = 0, frame = 8
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988              	.LVL59:
 989 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 990              	.LCFI19:
 991              		.cfi_def_cfa_offset 28
 992              		.cfi_offset 4, -28
 993              		.cfi_offset 5, -24
 994              		.cfi_offset 6, -20
 995              		.cfi_offset 7, -16
 996              		.cfi_offset 8, -12
 997              		.cfi_offset 9, -8
 998              		.cfi_offset 14, -4
 999 0004 83B0     		sub	sp, sp, #12
 1000              	.LCFI20:
 1001              		.cfi_def_cfa_offset 40
 1002 0006 0A9D     		ldr	r5, [sp, #40]
 1003              	.LVL60:
1120:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1004              		.loc 1 1120 0
 1005 0008 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1006 000c 012C     		cmp	r4, #1
 1007 000e 04D1     		bne	.L127
 1008 0010 0223     		movs	r3, #2
 1009              	.LVL61:
 1010              	.L95:
1313:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1011              		.loc 1 1313 0
 1012 0012 1846     		mov	r0, r3
 1013 0014 03B0     		add	sp, sp, #12
 1014              	.LCFI21:
 1015              		.cfi_remember_state
 1016              		.cfi_def_cfa_offset 28
 1017              		@ sp needed
 1018 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1019              	.LVL62:
 1020              	.L127:
 1021              	.LCFI22:
 1022              		.cfi_restore_state
 1023 001a 1E46     		mov	r6, r3
 1024 001c 9046     		mov	r8, r2
 1025 001e 0F46     		mov	r7, r1
 1026 0020 0446     		mov	r4, r0
1120:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1027              		.loc 1 1120 0 discriminator 2
 1028 0022 0123     		movs	r3, #1
 1029              	.LVL63:
 1030 0024 80F85030 		strb	r3, [r0, #80]
1123:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1031              		.loc 1 1123 0 discriminator 2
 1032 0028 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccefzn75.s 			page 88


 1033              	.LVL64:
 1034 002c 8146     		mov	r9, r0
 1035              	.LVL65:
1126:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1036              		.loc 1 1126 0 discriminator 2
 1037 002e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1038 0032 DBB2     		uxtb	r3, r3
 1039              	.LVL66:
1127:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   initial_TxXferCount = Size;
 1040              		.loc 1 1127 0 discriminator 2
 1041 0034 6268     		ldr	r2, [r4, #4]
 1042              	.LVL67:
1130:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1043              		.loc 1 1130 0 discriminator 2
 1044 0036 012B     		cmp	r3, #1
 1045 0038 12D0     		beq	.L96
1130:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1046              		.loc 1 1130 0 is_stmt 0 discriminator 1
 1047 003a B2F5827F 		cmp	r2, #260
 1048 003e 07D0     		beq	.L128
1133:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1049              		.loc 1 1133 0 is_stmt 1
 1050 0040 0223     		movs	r3, #2
 1051              	.LVL68:
 1052              	.L97:
1310:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1053              		.loc 1 1310 0
 1054 0042 0122     		movs	r2, #1
 1055 0044 84F85120 		strb	r2, [r4, #81]
1311:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1056              		.loc 1 1311 0
 1057 0048 0022     		movs	r2, #0
 1058 004a 84F85020 		strb	r2, [r4, #80]
1312:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1059              		.loc 1 1312 0
 1060 004e E0E7     		b	.L95
 1061              	.LVL69:
 1062              	.L128:
1131:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1063              		.loc 1 1131 0
 1064 0050 A268     		ldr	r2, [r4, #8]
 1065              	.LVL70:
 1066 0052 002A     		cmp	r2, #0
 1067 0054 40F0E280 		bne	.L118
1131:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1068              		.loc 1 1131 0 is_stmt 0 discriminator 1
 1069 0058 042B     		cmp	r3, #4
 1070 005a 01D0     		beq	.L96
1133:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1071              		.loc 1 1133 0 is_stmt 1
 1072 005c 0223     		movs	r3, #2
 1073              	.LVL71:
 1074 005e F0E7     		b	.L97
 1075              	.LVL72:
 1076              	.L96:
1137:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1077              		.loc 1 1137 0
ARM GAS  /tmp/ccefzn75.s 			page 89


 1078 0060 002F     		cmp	r7, #0
 1079 0062 00F0DD80 		beq	.L120
1137:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1080              		.loc 1 1137 0 is_stmt 0 discriminator 1
 1081 0066 B8F1000F 		cmp	r8, #0
 1082 006a 00F0DB80 		beq	.L121
1137:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1083              		.loc 1 1137 0 discriminator 2
 1084 006e 002E     		cmp	r6, #0
 1085 0070 00F0DA80 		beq	.L122
1144:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1086              		.loc 1 1144 0 is_stmt 1
 1087 0074 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1088              	.LVL73:
 1089 0078 DBB2     		uxtb	r3, r3
 1090 007a 042B     		cmp	r3, #4
 1091 007c 02D0     		beq	.L98
1146:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1092              		.loc 1 1146 0
 1093 007e 0523     		movs	r3, #5
 1094 0080 84F85130 		strb	r3, [r4, #81]
 1095              	.L98:
1150:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1096              		.loc 1 1150 0
 1097 0084 0023     		movs	r3, #0
 1098 0086 6365     		str	r3, [r4, #84]
1151:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1099              		.loc 1 1151 0
 1100 0088 C4F83880 		str	r8, [r4, #56]
1152:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1101              		.loc 1 1152 0
 1102 008c E687     		strh	r6, [r4, #62]	@ movhi
1153:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1103              		.loc 1 1153 0
 1104 008e A687     		strh	r6, [r4, #60]	@ movhi
1154:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1105              		.loc 1 1154 0
 1106 0090 2763     		str	r7, [r4, #48]
1155:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1107              		.loc 1 1155 0
 1108 0092 E686     		strh	r6, [r4, #54]	@ movhi
1156:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1109              		.loc 1 1156 0
 1110 0094 A686     		strh	r6, [r4, #52]	@ movhi
1159:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1111              		.loc 1 1159 0
 1112 0096 2364     		str	r3, [r4, #64]
1160:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1113              		.loc 1 1160 0
 1114 0098 6364     		str	r3, [r4, #68]
1171:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1115              		.loc 1 1171 0
 1116 009a 2368     		ldr	r3, [r4]
 1117 009c 1A68     		ldr	r2, [r3]
 1118 009e 12F0400F 		tst	r2, #64
 1119 00a2 03D1     		bne	.L99
1174:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccefzn75.s 			page 90


 1120              		.loc 1 1174 0
 1121 00a4 1A68     		ldr	r2, [r3]
 1122 00a6 42F04002 		orr	r2, r2, #64
 1123 00aa 1A60     		str	r2, [r3]
 1124              	.LVL74:
 1125              	.L99:
1178:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1126              		.loc 1 1178 0
 1127 00ac E368     		ldr	r3, [r4, #12]
 1128 00ae B3F5006F 		cmp	r3, #2048
 1129 00b2 11D0     		beq	.L129
1225:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1130              		.loc 1 1225 0
 1131 00b4 6368     		ldr	r3, [r4, #4]
 1132 00b6 0BB1     		cbz	r3, .L108
1225:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1133              		.loc 1 1225 0 is_stmt 0 discriminator 1
 1134 00b8 012E     		cmp	r6, #1
 1135 00ba 0BD1     		bne	.L109
 1136              	.L108:
1227:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 1137              		.loc 1 1227 0 is_stmt 1
 1138 00bc 2368     		ldr	r3, [r4]
 1139 00be 226B     		ldr	r2, [r4, #48]
 1140 00c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1141 00c2 1A73     		strb	r2, [r3, #12]
1228:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 1142              		.loc 1 1228 0
 1143 00c4 236B     		ldr	r3, [r4, #48]
 1144 00c6 0133     		adds	r3, r3, #1
 1145 00c8 2363     		str	r3, [r4, #48]
1229:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 1146              		.loc 1 1229 0
 1147 00ca E38E     		ldrh	r3, [r4, #54]
 1148 00cc 9BB2     		uxth	r3, r3
 1149 00ce 013B     		subs	r3, r3, #1
 1150 00d0 9BB2     		uxth	r3, r3
 1151 00d2 E386     		strh	r3, [r4, #54]	@ movhi
 1152              	.L109:
1258:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1153              		.loc 1 1258 0
 1154 00d4 0126     		movs	r6, #1
 1155              	.LVL75:
 1156 00d6 6CE0     		b	.L113
 1157              	.LVL76:
 1158              	.L129:
1180:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1159              		.loc 1 1180 0
 1160 00d8 6368     		ldr	r3, [r4, #4]
 1161 00da 0BB1     		cbz	r3, .L101
1180:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1162              		.loc 1 1180 0 is_stmt 0 discriminator 1
 1163 00dc 012E     		cmp	r6, #1
 1164 00de 0BD1     		bne	.L102
 1165              	.L101:
1182:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1166              		.loc 1 1182 0 is_stmt 1
ARM GAS  /tmp/ccefzn75.s 			page 91


 1167 00e0 2368     		ldr	r3, [r4]
 1168 00e2 226B     		ldr	r2, [r4, #48]
 1169 00e4 1288     		ldrh	r2, [r2]
 1170 00e6 DA60     		str	r2, [r3, #12]
1183:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       hspi->TxXferCount--;
 1171              		.loc 1 1183 0
 1172 00e8 236B     		ldr	r3, [r4, #48]
 1173 00ea 0233     		adds	r3, r3, #2
 1174 00ec 2363     		str	r3, [r4, #48]
1184:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 1175              		.loc 1 1184 0
 1176 00ee E38E     		ldrh	r3, [r4, #54]
 1177 00f0 9BB2     		uxth	r3, r3
 1178 00f2 013B     		subs	r3, r3, #1
 1179 00f4 9BB2     		uxth	r3, r3
 1180 00f6 E386     		strh	r3, [r4, #54]	@ movhi
 1181              	.L102:
1213:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1182              		.loc 1 1213 0
 1183 00f8 0126     		movs	r6, #1
 1184              	.LVL77:
 1185 00fa 1CE0     		b	.L103
 1186              	.LVL78:
 1187              	.L104:
1207:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1188              		.loc 1 1207 0
 1189 00fc 2368     		ldr	r3, [r4]
 1190 00fe 9A68     		ldr	r2, [r3, #8]
 1191 0100 12F0010F 		tst	r2, #1
 1192 0104 0ED0     		beq	.L105
1207:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1193              		.loc 1 1207 0 is_stmt 0 discriminator 1
 1194 0106 E28F     		ldrh	r2, [r4, #62]
 1195 0108 92B2     		uxth	r2, r2
 1196 010a 5AB1     		cbz	r2, .L105
1209:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1197              		.loc 1 1209 0 is_stmt 1
 1198 010c A26B     		ldr	r2, [r4, #56]
 1199 010e DB68     		ldr	r3, [r3, #12]
 1200 0110 1380     		strh	r3, [r2]	@ movhi
1210:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1201              		.loc 1 1210 0
 1202 0112 A36B     		ldr	r3, [r4, #56]
 1203 0114 0233     		adds	r3, r3, #2
 1204 0116 A363     		str	r3, [r4, #56]
1211:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1205              		.loc 1 1211 0
 1206 0118 E38F     		ldrh	r3, [r4, #62]
 1207 011a 9BB2     		uxth	r3, r3
 1208 011c 013B     		subs	r3, r3, #1
 1209 011e 9BB2     		uxth	r3, r3
 1210 0120 E387     		strh	r3, [r4, #62]	@ movhi
 1211              	.LVL79:
1213:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1212              		.loc 1 1213 0
 1213 0122 0126     		movs	r6, #1
 1214              	.LVL80:
ARM GAS  /tmp/ccefzn75.s 			page 92


 1215              	.L105:
1215:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1216              		.loc 1 1215 0
 1217 0124 FFF7FEFF 		bl	HAL_GetTick
 1218              	.LVL81:
 1219 0128 A0EB0900 		sub	r0, r0, r9
 1220 012c A842     		cmp	r0, r5
 1221 012e 02D3     		bcc	.L103
1215:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1222              		.loc 1 1215 0 is_stmt 0 discriminator 1
 1223 0130 B5F1FF3F 		cmp	r5, #-1
 1224 0134 7AD1     		bne	.L123
 1225              	.LVL82:
 1226              	.L103:
1186:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1227              		.loc 1 1186 0 is_stmt 1
 1228 0136 E38E     		ldrh	r3, [r4, #54]
 1229 0138 9BB2     		uxth	r3, r3
 1230 013a 1BB9     		cbnz	r3, .L106
1186:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1231              		.loc 1 1186 0 is_stmt 0 discriminator 1
 1232 013c E38F     		ldrh	r3, [r4, #62]
 1233 013e 9BB2     		uxth	r3, r3
 1234 0140 002B     		cmp	r3, #0
 1235 0142 54D0     		beq	.L107
 1236              	.L106:
1189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1237              		.loc 1 1189 0 is_stmt 1
 1238 0144 2368     		ldr	r3, [r4]
 1239 0146 9A68     		ldr	r2, [r3, #8]
 1240 0148 12F0020F 		tst	r2, #2
 1241 014c D6D0     		beq	.L104
1189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1242              		.loc 1 1189 0 is_stmt 0 discriminator 1
 1243 014e E28E     		ldrh	r2, [r4, #54]
 1244 0150 92B2     		uxth	r2, r2
 1245 0152 002A     		cmp	r2, #0
 1246 0154 D2D0     		beq	.L104
1189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1247              		.loc 1 1189 0 discriminator 2
 1248 0156 002E     		cmp	r6, #0
 1249 0158 D0D0     		beq	.L104
1191:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1250              		.loc 1 1191 0 is_stmt 1
 1251 015a 226B     		ldr	r2, [r4, #48]
 1252 015c 1288     		ldrh	r2, [r2]
 1253 015e DA60     		str	r2, [r3, #12]
1192:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 1254              		.loc 1 1192 0
 1255 0160 236B     		ldr	r3, [r4, #48]
 1256 0162 0233     		adds	r3, r3, #2
 1257 0164 2363     		str	r3, [r4, #48]
1193:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1258              		.loc 1 1193 0
 1259 0166 E38E     		ldrh	r3, [r4, #54]
 1260 0168 9BB2     		uxth	r3, r3
 1261 016a 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccefzn75.s 			page 93


 1262 016c 9BB2     		uxth	r3, r3
 1263 016e E386     		strh	r3, [r4, #54]	@ movhi
 1264              	.LVL83:
1195:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1265              		.loc 1 1195 0
 1266 0170 0026     		movs	r6, #0
 1267 0172 C3E7     		b	.L104
 1268              	.LVL84:
 1269              	.L110:
1252:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1270              		.loc 1 1252 0
 1271 0174 2368     		ldr	r3, [r4]
 1272 0176 9A68     		ldr	r2, [r3, #8]
 1273 0178 12F0010F 		tst	r2, #1
 1274 017c 0ED0     		beq	.L111
1252:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1275              		.loc 1 1252 0 is_stmt 0 discriminator 1
 1276 017e E28F     		ldrh	r2, [r4, #62]
 1277 0180 92B2     		uxth	r2, r2
 1278 0182 5AB1     		cbz	r2, .L111
1254:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
 1279              		.loc 1 1254 0 is_stmt 1
 1280 0184 A26B     		ldr	r2, [r4, #56]
 1281 0186 DB68     		ldr	r3, [r3, #12]
 1282 0188 1370     		strb	r3, [r2]
1255:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1283              		.loc 1 1255 0
 1284 018a A36B     		ldr	r3, [r4, #56]
 1285 018c 0133     		adds	r3, r3, #1
 1286 018e A363     		str	r3, [r4, #56]
1256:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1287              		.loc 1 1256 0
 1288 0190 E38F     		ldrh	r3, [r4, #62]
 1289 0192 9BB2     		uxth	r3, r3
 1290 0194 013B     		subs	r3, r3, #1
 1291 0196 9BB2     		uxth	r3, r3
 1292 0198 E387     		strh	r3, [r4, #62]	@ movhi
 1293              	.LVL85:
1258:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1294              		.loc 1 1258 0
 1295 019a 0126     		movs	r6, #1
 1296              	.LVL86:
 1297              	.L111:
1260:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1298              		.loc 1 1260 0
 1299 019c FFF7FEFF 		bl	HAL_GetTick
 1300              	.LVL87:
 1301 01a0 A0EB0900 		sub	r0, r0, r9
 1302 01a4 8542     		cmp	r5, r0
 1303 01a6 02D8     		bhi	.L112
1260:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1304              		.loc 1 1260 0 is_stmt 0 discriminator 1
 1305 01a8 B5F1FF3F 		cmp	r5, #-1
 1306 01ac 40D1     		bne	.L124
 1307              	.L112:
1260:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1308              		.loc 1 1260 0 discriminator 3
ARM GAS  /tmp/ccefzn75.s 			page 94


 1309 01ae 002D     		cmp	r5, #0
 1310 01b0 40D0     		beq	.L130
 1311              	.LVL88:
 1312              	.L113:
1231:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1313              		.loc 1 1231 0 is_stmt 1
 1314 01b2 E38E     		ldrh	r3, [r4, #54]
 1315 01b4 9BB2     		uxth	r3, r3
 1316 01b6 13B9     		cbnz	r3, .L114
1231:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1317              		.loc 1 1231 0 is_stmt 0 discriminator 1
 1318 01b8 E38F     		ldrh	r3, [r4, #62]
 1319 01ba 9BB2     		uxth	r3, r3
 1320 01bc BBB1     		cbz	r3, .L107
 1321              	.L114:
1234:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1322              		.loc 1 1234 0 is_stmt 1
 1323 01be 2368     		ldr	r3, [r4]
 1324 01c0 9A68     		ldr	r2, [r3, #8]
 1325 01c2 12F0020F 		tst	r2, #2
 1326 01c6 D5D0     		beq	.L110
1234:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1327              		.loc 1 1234 0 is_stmt 0 discriminator 1
 1328 01c8 E28E     		ldrh	r2, [r4, #54]
 1329 01ca 92B2     		uxth	r2, r2
 1330 01cc 002A     		cmp	r2, #0
 1331 01ce D1D0     		beq	.L110
1234:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1332              		.loc 1 1234 0 discriminator 2
 1333 01d0 002E     		cmp	r6, #0
 1334 01d2 CFD0     		beq	.L110
1236:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1335              		.loc 1 1236 0 is_stmt 1
 1336 01d4 226B     		ldr	r2, [r4, #48]
 1337 01d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1338 01d8 1A73     		strb	r2, [r3, #12]
1237:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->TxXferCount--;
 1339              		.loc 1 1237 0
 1340 01da 236B     		ldr	r3, [r4, #48]
 1341 01dc 0133     		adds	r3, r3, #1
 1342 01de 2363     		str	r3, [r4, #48]
1238:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1343              		.loc 1 1238 0
 1344 01e0 E38E     		ldrh	r3, [r4, #54]
 1345 01e2 9BB2     		uxth	r3, r3
 1346 01e4 013B     		subs	r3, r3, #1
 1347 01e6 9BB2     		uxth	r3, r3
 1348 01e8 E386     		strh	r3, [r4, #54]	@ movhi
 1349              	.LVL89:
1240:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1350              		.loc 1 1240 0
 1351 01ea 0026     		movs	r6, #0
 1352 01ec C2E7     		b	.L110
 1353              	.LVL90:
 1354              	.L107:
1296:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1355              		.loc 1 1296 0
ARM GAS  /tmp/ccefzn75.s 			page 95


 1356 01ee 4A46     		mov	r2, r9
 1357 01f0 2946     		mov	r1, r5
 1358 01f2 2046     		mov	r0, r4
 1359 01f4 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1360              	.LVL91:
 1361 01f8 0346     		mov	r3, r0
 1362 01fa 18B1     		cbz	r0, .L115
 1363              	.LVL92:
1299:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1364              		.loc 1 1299 0
 1365 01fc 2023     		movs	r3, #32
 1366 01fe 6365     		str	r3, [r4, #84]
1298:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1367              		.loc 1 1298 0
 1368 0200 0123     		movs	r3, #1
1300:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1369              		.loc 1 1300 0
 1370 0202 1EE7     		b	.L97
 1371              	.LVL93:
 1372              	.L115:
1304:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1373              		.loc 1 1304 0
 1374 0204 A268     		ldr	r2, [r4, #8]
 1375 0206 002A     		cmp	r2, #0
 1376 0208 7FF41BAF 		bne	.L97
 1377              	.LBB3:
1306:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1378              		.loc 1 1306 0
 1379 020c 0192     		str	r2, [sp, #4]
 1380 020e 2268     		ldr	r2, [r4]
 1381 0210 D168     		ldr	r1, [r2, #12]
 1382 0212 0191     		str	r1, [sp, #4]
 1383 0214 9268     		ldr	r2, [r2, #8]
 1384 0216 0192     		str	r2, [sp, #4]
 1385 0218 019A     		ldr	r2, [sp, #4]
 1386 021a 12E7     		b	.L97
 1387              	.LVL94:
 1388              	.L118:
 1389              	.LBE3:
1133:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1390              		.loc 1 1133 0
 1391 021c 0223     		movs	r3, #2
 1392              	.LVL95:
 1393 021e 10E7     		b	.L97
 1394              	.LVL96:
 1395              	.L120:
1139:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1396              		.loc 1 1139 0
 1397 0220 0123     		movs	r3, #1
 1398              	.LVL97:
 1399 0222 0EE7     		b	.L97
 1400              	.LVL98:
 1401              	.L121:
 1402 0224 0123     		movs	r3, #1
 1403              	.LVL99:
 1404 0226 0CE7     		b	.L97
 1405              	.LVL100:
ARM GAS  /tmp/ccefzn75.s 			page 96


 1406              	.L122:
 1407 0228 0123     		movs	r3, #1
 1408              	.LVL101:
 1409 022a 0AE7     		b	.L97
 1410              	.LVL102:
 1411              	.L123:
1217:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
 1412              		.loc 1 1217 0
 1413 022c 0323     		movs	r3, #3
 1414 022e 08E7     		b	.L97
 1415              	.L124:
1262:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         goto error;
 1416              		.loc 1 1262 0
 1417 0230 0323     		movs	r3, #3
 1418 0232 06E7     		b	.L97
 1419              	.L130:
 1420 0234 0323     		movs	r3, #3
 1421 0236 04E7     		b	.L97
 1422              		.cfi_endproc
 1423              	.LFE78:
 1425              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1426              		.align	1
 1427              		.global	HAL_SPI_Receive
 1428              		.syntax unified
 1429              		.thumb
 1430              		.thumb_func
 1431              		.fpu softvfp
 1433              	HAL_SPI_Receive:
 1434              	.LFB77:
 914:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 1435              		.loc 1 914 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 1439              	.LVL103:
 1440 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1441              	.LCFI23:
 1442              		.cfi_def_cfa_offset 24
 1443              		.cfi_offset 4, -24
 1444              		.cfi_offset 5, -20
 1445              		.cfi_offset 6, -16
 1446              		.cfi_offset 7, -12
 1447              		.cfi_offset 8, -8
 1448              		.cfi_offset 14, -4
 1449 0004 82B0     		sub	sp, sp, #8
 1450              	.LCFI24:
 1451              		.cfi_def_cfa_offset 32
 1452 0006 0446     		mov	r4, r0
 1453 0008 0F46     		mov	r7, r1
 1454 000a 9046     		mov	r8, r2
 1455 000c 1D46     		mov	r5, r3
 1456              	.LVL104:
 918:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1457              		.loc 1 918 0
 1458 000e 4368     		ldr	r3, [r0, #4]
 1459              	.LVL105:
 1460 0010 B3F5827F 		cmp	r3, #260
ARM GAS  /tmp/ccefzn75.s 			page 97


 1461 0014 07D0     		beq	.L159
 1462              	.L132:
 926:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1463              		.loc 1 926 0
 1464 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1465 001a 012B     		cmp	r3, #1
 1466 001c 0FD1     		bne	.L160
 1467 001e 0220     		movs	r0, #2
 1468              	.LVL106:
 1469              	.L133:
1092:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1470              		.loc 1 1092 0
 1471 0020 02B0     		add	sp, sp, #8
 1472              	.LCFI25:
 1473              		.cfi_remember_state
 1474              		.cfi_def_cfa_offset 24
 1475              		@ sp needed
 1476 0022 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1477              	.LVL107:
 1478              	.L159:
 1479              	.LCFI26:
 1480              		.cfi_restore_state
 918:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1481              		.loc 1 918 0 discriminator 1
 1482 0026 8368     		ldr	r3, [r0, #8]
 1483 0028 002B     		cmp	r3, #0
 1484 002a F4D1     		bne	.L132
 920:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 1485              		.loc 1 920 0
 1486 002c 0423     		movs	r3, #4
 1487 002e 80F85130 		strb	r3, [r0, #81]
 922:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1488              		.loc 1 922 0
 1489 0032 0095     		str	r5, [sp]
 1490 0034 1346     		mov	r3, r2
 1491 0036 0A46     		mov	r2, r1
 1492              	.LVL108:
 1493 0038 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1494              	.LVL109:
 1495 003c F0E7     		b	.L133
 1496              	.LVL110:
 1497              	.L160:
 926:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1498              		.loc 1 926 0 discriminator 2
 1499 003e 0123     		movs	r3, #1
 1500 0040 84F85030 		strb	r3, [r4, #80]
 929:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1501              		.loc 1 929 0 discriminator 2
 1502 0044 FFF7FEFF 		bl	HAL_GetTick
 1503              	.LVL111:
 1504 0048 0646     		mov	r6, r0
 1505              	.LVL112:
 931:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1506              		.loc 1 931 0 discriminator 2
 1507 004a 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 1508 004e DBB2     		uxtb	r3, r3
 1509 0050 012B     		cmp	r3, #1
ARM GAS  /tmp/ccefzn75.s 			page 98


 1510 0052 07D0     		beq	.L161
 933:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1511              		.loc 1 933 0
 1512 0054 0220     		movs	r0, #2
 1513              	.LVL113:
 1514              	.L134:
1089:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1515              		.loc 1 1089 0
 1516 0056 0123     		movs	r3, #1
 1517 0058 84F85130 		strb	r3, [r4, #81]
1090:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1518              		.loc 1 1090 0
 1519 005c 0023     		movs	r3, #0
 1520 005e 84F85030 		strb	r3, [r4, #80]
1091:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1521              		.loc 1 1091 0
 1522 0062 DDE7     		b	.L133
 1523              	.LVL114:
 1524              	.L161:
 937:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1525              		.loc 1 937 0
 1526 0064 002F     		cmp	r7, #0
 1527 0066 6FD0     		beq	.L151
 937:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1528              		.loc 1 937 0 is_stmt 0 discriminator 1
 1529 0068 B8F1000F 		cmp	r8, #0
 1530 006c 6ED0     		beq	.L152
 944:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1531              		.loc 1 944 0 is_stmt 1
 1532 006e 0423     		movs	r3, #4
 1533 0070 84F85130 		strb	r3, [r4, #81]
 945:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1534              		.loc 1 945 0
 1535 0074 0023     		movs	r3, #0
 1536 0076 6365     		str	r3, [r4, #84]
 946:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1537              		.loc 1 946 0
 1538 0078 A763     		str	r7, [r4, #56]
 947:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1539              		.loc 1 947 0
 1540 007a A4F83C80 		strh	r8, [r4, #60]	@ movhi
 948:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1541              		.loc 1 948 0
 1542 007e A4F83E80 		strh	r8, [r4, #62]	@ movhi
 951:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1543              		.loc 1 951 0
 1544 0082 2363     		str	r3, [r4, #48]
 952:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1545              		.loc 1 952 0
 1546 0084 A386     		strh	r3, [r4, #52]	@ movhi
 953:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1547              		.loc 1 953 0
 1548 0086 E386     		strh	r3, [r4, #54]	@ movhi
 954:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1549              		.loc 1 954 0
 1550 0088 2364     		str	r3, [r4, #64]
 955:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccefzn75.s 			page 99


 1551              		.loc 1 955 0
 1552 008a 6364     		str	r3, [r4, #68]
 968:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1553              		.loc 1 968 0
 1554 008c A368     		ldr	r3, [r4, #8]
 1555 008e B3F5004F 		cmp	r3, #32768
 1556 0092 0BD0     		beq	.L162
 1557              	.L135:
 974:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1558              		.loc 1 974 0
 1559 0094 2368     		ldr	r3, [r4]
 1560 0096 1A68     		ldr	r2, [r3]
 1561 0098 12F0400F 		tst	r2, #64
 1562 009c 03D1     		bne	.L136
 977:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1563              		.loc 1 977 0
 1564 009e 1A68     		ldr	r2, [r3]
 1565 00a0 42F04002 		orr	r2, r2, #64
 1566 00a4 1A60     		str	r2, [r3]
 1567              	.L136:
 981:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1568              		.loc 1 981 0
 1569 00a6 E368     		ldr	r3, [r4, #12]
 1570 00a8 83B1     		cbz	r3, .L137
 1571 00aa 2DE0     		b	.L138
 1572              	.L162:
 970:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1573              		.loc 1 970 0
 1574 00ac 2268     		ldr	r2, [r4]
 1575 00ae 1368     		ldr	r3, [r2]
 1576 00b0 23F48043 		bic	r3, r3, #16384
 1577 00b4 1360     		str	r3, [r2]
 1578 00b6 EDE7     		b	.L135
 1579              	.LVL115:
 1580              	.L139:
 997:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1581              		.loc 1 997 0
 1582 00b8 FFF7FEFF 		bl	HAL_GetTick
 1583              	.LVL116:
 1584 00bc 801B     		subs	r0, r0, r6
 1585 00be 8542     		cmp	r5, r0
 1586 00c0 02D8     		bhi	.L141
 997:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1587              		.loc 1 997 0 is_stmt 0 discriminator 1
 1588 00c2 B5F1FF3F 		cmp	r5, #-1
 1589 00c6 43D1     		bne	.L153
 1590              	.L141:
 997:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1591              		.loc 1 997 0 discriminator 3
 1592 00c8 002D     		cmp	r5, #0
 1593 00ca 43D0     		beq	.L154
 1594              	.L137:
 984:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1595              		.loc 1 984 0 is_stmt 1
 1596 00cc E38F     		ldrh	r3, [r4, #62]
 1597 00ce 9BB2     		uxth	r3, r3
 1598 00d0 002B     		cmp	r3, #0
ARM GAS  /tmp/ccefzn75.s 			page 100


 1599 00d2 2DD0     		beq	.L143
 987:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1600              		.loc 1 987 0
 1601 00d4 2368     		ldr	r3, [r4]
 1602 00d6 9A68     		ldr	r2, [r3, #8]
 1603 00d8 12F0010F 		tst	r2, #1
 1604 00dc ECD0     		beq	.L139
 990:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1605              		.loc 1 990 0
 1606 00de A26B     		ldr	r2, [r4, #56]
 1607 00e0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1608 00e2 1370     		strb	r3, [r2]
 991:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1609              		.loc 1 991 0
 1610 00e4 A36B     		ldr	r3, [r4, #56]
 1611 00e6 0133     		adds	r3, r3, #1
 1612 00e8 A363     		str	r3, [r4, #56]
 992:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1613              		.loc 1 992 0
 1614 00ea E38F     		ldrh	r3, [r4, #62]
 1615 00ec 9BB2     		uxth	r3, r3
 1616 00ee 013B     		subs	r3, r3, #1
 1617 00f0 9BB2     		uxth	r3, r3
 1618 00f2 E387     		strh	r3, [r4, #62]	@ movhi
 1619 00f4 EAE7     		b	.L137
 1620              	.L144:
1020:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1621              		.loc 1 1020 0
 1622 00f6 FFF7FEFF 		bl	HAL_GetTick
 1623              	.LVL117:
 1624 00fa 801B     		subs	r0, r0, r6
 1625 00fc 8542     		cmp	r5, r0
 1626 00fe 02D8     		bhi	.L146
1020:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1627              		.loc 1 1020 0 is_stmt 0 discriminator 1
 1628 0100 B5F1FF3F 		cmp	r5, #-1
 1629 0104 28D1     		bne	.L155
 1630              	.L146:
1020:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 1631              		.loc 1 1020 0 discriminator 3
 1632 0106 4DB3     		cbz	r5, .L156
 1633              	.L138:
1008:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 1634              		.loc 1 1008 0 is_stmt 1
 1635 0108 E38F     		ldrh	r3, [r4, #62]
 1636 010a 9BB2     		uxth	r3, r3
 1637 010c 83B1     		cbz	r3, .L143
1011:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 1638              		.loc 1 1011 0
 1639 010e 2368     		ldr	r3, [r4]
 1640 0110 9A68     		ldr	r2, [r3, #8]
 1641 0112 12F0010F 		tst	r2, #1
 1642 0116 EED0     		beq	.L144
1013:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1643              		.loc 1 1013 0
 1644 0118 A26B     		ldr	r2, [r4, #56]
 1645 011a DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccefzn75.s 			page 101


 1646 011c 1380     		strh	r3, [r2]	@ movhi
1014:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->RxXferCount--;
 1647              		.loc 1 1014 0
 1648 011e A36B     		ldr	r3, [r4, #56]
 1649 0120 0233     		adds	r3, r3, #2
 1650 0122 A363     		str	r3, [r4, #56]
1015:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 1651              		.loc 1 1015 0
 1652 0124 E38F     		ldrh	r3, [r4, #62]
 1653 0126 9BB2     		uxth	r3, r3
 1654 0128 013B     		subs	r3, r3, #1
 1655 012a 9BB2     		uxth	r3, r3
 1656 012c E387     		strh	r3, [r4, #62]	@ movhi
 1657 012e EBE7     		b	.L138
 1658              	.L143:
1069:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1659              		.loc 1 1069 0
 1660 0130 3246     		mov	r2, r6
 1661 0132 2946     		mov	r1, r5
 1662 0134 2046     		mov	r0, r4
 1663 0136 FFF7FEFF 		bl	SPI_EndRxTransaction
 1664              	.LVL118:
 1665 013a 08B1     		cbz	r0, .L148
1071:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1666              		.loc 1 1071 0
 1667 013c 2023     		movs	r3, #32
 1668 013e 6365     		str	r3, [r4, #84]
 1669              	.L148:
1083:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1670              		.loc 1 1083 0
 1671 0140 636D     		ldr	r3, [r4, #84]
 1672 0142 6BB9     		cbnz	r3, .L157
 916:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1673              		.loc 1 916 0
 1674 0144 0020     		movs	r0, #0
 1675 0146 86E7     		b	.L134
 1676              	.LVL119:
 1677              	.L151:
 939:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1678              		.loc 1 939 0
 1679 0148 0120     		movs	r0, #1
 1680              	.LVL120:
 1681 014a 84E7     		b	.L134
 1682              	.LVL121:
 1683              	.L152:
 1684 014c 0120     		movs	r0, #1
 1685              	.LVL122:
 1686 014e 82E7     		b	.L134
 1687              	.L153:
 999:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 1688              		.loc 1 999 0
 1689 0150 0320     		movs	r0, #3
 1690 0152 80E7     		b	.L134
 1691              	.L154:
 1692 0154 0320     		movs	r0, #3
 1693 0156 7EE7     		b	.L134
 1694              	.L155:
ARM GAS  /tmp/ccefzn75.s 			page 102


1022:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           goto error;
 1695              		.loc 1 1022 0
 1696 0158 0320     		movs	r0, #3
 1697 015a 7CE7     		b	.L134
 1698              	.L156:
 1699 015c 0320     		movs	r0, #3
 1700 015e 7AE7     		b	.L134
 1701              	.L157:
1085:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1702              		.loc 1 1085 0
 1703 0160 0120     		movs	r0, #1
 1704 0162 78E7     		b	.L134
 1705              		.cfi_endproc
 1706              	.LFE77:
 1708              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1709              		.align	1
 1710              		.global	HAL_SPI_Transmit_IT
 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1714              		.fpu softvfp
 1716              	HAL_SPI_Transmit_IT:
 1717              	.LFB79:
1324:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 1718              		.loc 1 1324 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
 1721              		@ frame_needed = 0, uses_anonymous_args = 0
 1722              		@ link register save eliminated.
 1723              	.LVL123:
 1724 0000 0346     		mov	r3, r0
 1725              	.LVL124:
1331:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1726              		.loc 1 1331 0
 1727 0002 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
 1728              	.LVL125:
 1729 0006 0128     		cmp	r0, #1
 1730 0008 43D0     		beq	.L169
1331:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1731              		.loc 1 1331 0 is_stmt 0 discriminator 2
 1732 000a 0120     		movs	r0, #1
 1733 000c 83F85000 		strb	r0, [r3, #80]
1333:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1734              		.loc 1 1333 0 is_stmt 1 discriminator 2
 1735 0010 0029     		cmp	r1, #0
 1736 0012 35D0     		beq	.L170
1333:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1737              		.loc 1 1333 0 is_stmt 0 discriminator 1
 1738 0014 002A     		cmp	r2, #0
 1739 0016 35D0     		beq	.L171
1339:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1740              		.loc 1 1339 0 is_stmt 1
 1741 0018 93F85100 		ldrb	r0, [r3, #81]	@ zero_extendqisi2
 1742 001c C0B2     		uxtb	r0, r0
 1743 001e 0128     		cmp	r0, #1
 1744 0020 01D0     		beq	.L174
1341:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/ccefzn75.s 			page 103


 1745              		.loc 1 1341 0
 1746 0022 0220     		movs	r0, #2
 1747 0024 2FE0     		b	.L165
 1748              	.L174:
1346:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1749              		.loc 1 1346 0
 1750 0026 0320     		movs	r0, #3
 1751 0028 83F85100 		strb	r0, [r3, #81]
1347:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1752              		.loc 1 1347 0
 1753 002c 0020     		movs	r0, #0
 1754 002e 5865     		str	r0, [r3, #84]
1348:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1755              		.loc 1 1348 0
 1756 0030 1963     		str	r1, [r3, #48]
1349:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1757              		.loc 1 1349 0
 1758 0032 9A86     		strh	r2, [r3, #52]	@ movhi
1350:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1759              		.loc 1 1350 0
 1760 0034 DA86     		strh	r2, [r3, #54]	@ movhi
1353:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1761              		.loc 1 1353 0
 1762 0036 9863     		str	r0, [r3, #56]
1354:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1763              		.loc 1 1354 0
 1764 0038 9887     		strh	r0, [r3, #60]	@ movhi
1355:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1765              		.loc 1 1355 0
 1766 003a D887     		strh	r0, [r3, #62]	@ movhi
1356:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1767              		.loc 1 1356 0
 1768 003c 1864     		str	r0, [r3, #64]
1359:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1769              		.loc 1 1359 0
 1770 003e DA68     		ldr	r2, [r3, #12]
 1771              	.LVL126:
 1772 0040 AAB1     		cbz	r2, .L166
1361:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1773              		.loc 1 1361 0
 1774 0042 154A     		ldr	r2, .L176
 1775 0044 5A64     		str	r2, [r3, #68]
 1776              	.L167:
1369:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1777              		.loc 1 1369 0
 1778 0046 9A68     		ldr	r2, [r3, #8]
 1779 0048 B2F5004F 		cmp	r2, #32768
 1780 004c 12D0     		beq	.L175
 1781              	.LVL127:
 1782              	.L168:
1383:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1783              		.loc 1 1383 0
 1784 004e 1968     		ldr	r1, [r3]
 1785 0050 4A68     		ldr	r2, [r1, #4]
 1786 0052 42F0A002 		orr	r2, r2, #160
 1787 0056 4A60     		str	r2, [r1, #4]
1387:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccefzn75.s 			page 104


 1788              		.loc 1 1387 0
 1789 0058 1A68     		ldr	r2, [r3]
 1790 005a 1168     		ldr	r1, [r2]
 1791 005c 11F0400F 		tst	r1, #64
 1792 0060 15D1     		bne	.L173
1390:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1793              		.loc 1 1390 0
 1794 0062 1168     		ldr	r1, [r2]
 1795 0064 41F04001 		orr	r1, r1, #64
 1796 0068 1160     		str	r1, [r2]
1325:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1797              		.loc 1 1325 0
 1798 006a 0020     		movs	r0, #0
 1799 006c 0BE0     		b	.L165
 1800              	.LVL128:
 1801              	.L166:
1365:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1802              		.loc 1 1365 0
 1803 006e 0B4A     		ldr	r2, .L176+4
 1804 0070 5A64     		str	r2, [r3, #68]
 1805 0072 E8E7     		b	.L167
 1806              	.L175:
1371:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1807              		.loc 1 1371 0
 1808 0074 1968     		ldr	r1, [r3]
 1809              	.LVL129:
 1810 0076 0A68     		ldr	r2, [r1]
 1811 0078 42F48042 		orr	r2, r2, #16384
 1812 007c 0A60     		str	r2, [r1]
 1813              	.LVL130:
 1814 007e E6E7     		b	.L168
 1815              	.LVL131:
 1816              	.L170:
1335:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1817              		.loc 1 1335 0
 1818 0080 0120     		movs	r0, #1
 1819 0082 00E0     		b	.L165
 1820              	.L171:
 1821 0084 0120     		movs	r0, #1
 1822              	.LVL132:
 1823              	.L165:
1394:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1824              		.loc 1 1394 0
 1825 0086 0022     		movs	r2, #0
 1826 0088 83F85020 		strb	r2, [r3, #80]
1395:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 1827              		.loc 1 1395 0
 1828 008c 7047     		bx	lr
 1829              	.LVL133:
 1830              	.L173:
1325:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1831              		.loc 1 1325 0
 1832 008e 0020     		movs	r0, #0
 1833 0090 F9E7     		b	.L165
 1834              	.LVL134:
 1835              	.L169:
1331:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccefzn75.s 			page 105


 1836              		.loc 1 1331 0
 1837 0092 0220     		movs	r0, #2
1396:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1838              		.loc 1 1396 0
 1839 0094 7047     		bx	lr
 1840              	.L177:
 1841 0096 00BF     		.align	2
 1842              	.L176:
 1843 0098 00000000 		.word	SPI_TxISR_16BIT
 1844 009c 00000000 		.word	SPI_TxISR_8BIT
 1845              		.cfi_endproc
 1846              	.LFE79:
 1848              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 1849              		.align	1
 1850              		.global	HAL_SPI_TransmitReceive_IT
 1851              		.syntax unified
 1852              		.thumb
 1853              		.thumb_func
 1854              		.fpu softvfp
 1856              	HAL_SPI_TransmitReceive_IT:
 1857              	.LFB81:
1499:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
 1858              		.loc 1 1499 0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 0
 1861              		@ frame_needed = 0, uses_anonymous_args = 0
 1862              		@ link register save eliminated.
 1863              	.LVL135:
 1864 0000 30B4     		push	{r4, r5}
 1865              	.LCFI27:
 1866              		.cfi_def_cfa_offset 8
 1867              		.cfi_offset 4, -8
 1868              		.cfi_offset 5, -4
 1869              	.LVL136:
1508:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1870              		.loc 1 1508 0
 1871 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 1872 0006 012C     		cmp	r4, #1
 1873 0008 54D0     		beq	.L185
1508:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1874              		.loc 1 1508 0 is_stmt 0 discriminator 2
 1875 000a 0124     		movs	r4, #1
 1876 000c 80F85040 		strb	r4, [r0, #80]
1511:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1877              		.loc 1 1511 0 is_stmt 1 discriminator 2
 1878 0010 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1879 0014 E4B2     		uxtb	r4, r4
 1880              	.LVL137:
1512:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1881              		.loc 1 1512 0 discriminator 2
 1882 0016 4568     		ldr	r5, [r0, #4]
 1883              	.LVL138:
1514:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1884              		.loc 1 1514 0 discriminator 2
 1885 0018 012C     		cmp	r4, #1
 1886 001a 10D0     		beq	.L180
1514:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
ARM GAS  /tmp/ccefzn75.s 			page 106


 1887              		.loc 1 1514 0 is_stmt 0 discriminator 1
 1888 001c B5F5827F 		cmp	r5, #260
 1889 0020 06D0     		beq	.L194
1517:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1890              		.loc 1 1517 0 is_stmt 1
 1891 0022 0223     		movs	r3, #2
 1892              	.LVL139:
 1893              	.L181:
1574:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 1894              		.loc 1 1574 0
 1895 0024 0022     		movs	r2, #0
 1896 0026 80F85020 		strb	r2, [r0, #80]
 1897              	.LVL140:
 1898              	.L179:
1576:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1899              		.loc 1 1576 0
 1900 002a 1846     		mov	r0, r3
 1901              	.LVL141:
 1902 002c 30BC     		pop	{r4, r5}
 1903              	.LCFI28:
 1904              		.cfi_remember_state
 1905              		.cfi_restore 5
 1906              		.cfi_restore 4
 1907              		.cfi_def_cfa_offset 0
 1908 002e 7047     		bx	lr
 1909              	.LVL142:
 1910              	.L194:
 1911              	.LCFI29:
 1912              		.cfi_restore_state
1515:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1913              		.loc 1 1515 0
 1914 0030 8568     		ldr	r5, [r0, #8]
 1915              	.LVL143:
 1916 0032 002D     		cmp	r5, #0
 1917 0034 34D1     		bne	.L187
1515:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1918              		.loc 1 1515 0 is_stmt 0 discriminator 1
 1919 0036 042C     		cmp	r4, #4
 1920 0038 01D0     		beq	.L180
1517:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 1921              		.loc 1 1517 0 is_stmt 1
 1922 003a 0223     		movs	r3, #2
 1923              	.LVL144:
 1924 003c F2E7     		b	.L181
 1925              	.LVL145:
 1926              	.L180:
1521:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1927              		.loc 1 1521 0
 1928 003e 0029     		cmp	r1, #0
 1929 0040 30D0     		beq	.L189
1521:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1930              		.loc 1 1521 0 is_stmt 0 discriminator 1
 1931 0042 002A     		cmp	r2, #0
 1932 0044 30D0     		beq	.L190
1521:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1933              		.loc 1 1521 0 discriminator 2
 1934 0046 002B     		cmp	r3, #0
ARM GAS  /tmp/ccefzn75.s 			page 107


 1935 0048 30D0     		beq	.L191
1528:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1936              		.loc 1 1528 0 is_stmt 1
 1937 004a 90F85140 		ldrb	r4, [r0, #81]	@ zero_extendqisi2
 1938              	.LVL146:
 1939 004e E4B2     		uxtb	r4, r4
 1940 0050 042C     		cmp	r4, #4
 1941 0052 02D0     		beq	.L182
1530:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1942              		.loc 1 1530 0
 1943 0054 0524     		movs	r4, #5
 1944 0056 80F85140 		strb	r4, [r0, #81]
 1945              	.L182:
1534:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1946              		.loc 1 1534 0
 1947 005a 0024     		movs	r4, #0
 1948 005c 4465     		str	r4, [r0, #84]
1535:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1949              		.loc 1 1535 0
 1950 005e 0163     		str	r1, [r0, #48]
1536:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1951              		.loc 1 1536 0
 1952 0060 8386     		strh	r3, [r0, #52]	@ movhi
1537:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1953              		.loc 1 1537 0
 1954 0062 C386     		strh	r3, [r0, #54]	@ movhi
1538:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1955              		.loc 1 1538 0
 1956 0064 8263     		str	r2, [r0, #56]
1539:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1957              		.loc 1 1539 0
 1958 0066 8387     		strh	r3, [r0, #60]	@ movhi
1540:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1959              		.loc 1 1540 0
 1960 0068 C387     		strh	r3, [r0, #62]	@ movhi
1543:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1961              		.loc 1 1543 0
 1962 006a C368     		ldr	r3, [r0, #12]
 1963              	.LVL147:
 1964 006c 9BB1     		cbz	r3, .L183
1545:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 1965              		.loc 1 1545 0
 1966 006e 124B     		ldr	r3, .L195
 1967 0070 0364     		str	r3, [r0, #64]
1546:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1968              		.loc 1 1546 0
 1969 0072 124B     		ldr	r3, .L195+4
 1970 0074 4364     		str	r3, [r0, #68]
 1971              	.L184:
1563:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1972              		.loc 1 1563 0
 1973 0076 0268     		ldr	r2, [r0]
 1974              	.LVL148:
 1975 0078 5368     		ldr	r3, [r2, #4]
 1976 007a 43F0E003 		orr	r3, r3, #224
 1977 007e 5360     		str	r3, [r2, #4]
 1978              	.LVL149:
ARM GAS  /tmp/ccefzn75.s 			page 108


1566:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 1979              		.loc 1 1566 0
 1980 0080 0368     		ldr	r3, [r0]
 1981 0082 1A68     		ldr	r2, [r3]
 1982 0084 12F0400F 		tst	r2, #64
 1983 0088 12D1     		bne	.L192
1569:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1984              		.loc 1 1569 0
 1985 008a 1A68     		ldr	r2, [r3]
 1986 008c 42F04002 		orr	r2, r2, #64
 1987 0090 1A60     		str	r2, [r3]
1502:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 1988              		.loc 1 1502 0
 1989 0092 0023     		movs	r3, #0
 1990 0094 C6E7     		b	.L181
 1991              	.LVL150:
 1992              	.L183:
1550:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 1993              		.loc 1 1550 0
 1994 0096 0A4B     		ldr	r3, .L195+8
 1995 0098 0364     		str	r3, [r0, #64]
1551:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 1996              		.loc 1 1551 0
 1997 009a 0A4B     		ldr	r3, .L195+12
 1998 009c 4364     		str	r3, [r0, #68]
 1999 009e EAE7     		b	.L184
 2000              	.LVL151:
 2001              	.L187:
1517:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2002              		.loc 1 1517 0
 2003 00a0 0223     		movs	r3, #2
 2004              	.LVL152:
 2005 00a2 BFE7     		b	.L181
 2006              	.LVL153:
 2007              	.L189:
1523:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2008              		.loc 1 1523 0
 2009 00a4 0123     		movs	r3, #1
 2010              	.LVL154:
 2011 00a6 BDE7     		b	.L181
 2012              	.LVL155:
 2013              	.L190:
 2014 00a8 0123     		movs	r3, #1
 2015              	.LVL156:
 2016 00aa BBE7     		b	.L181
 2017              	.LVL157:
 2018              	.L191:
 2019 00ac 0123     		movs	r3, #1
 2020              	.LVL158:
 2021 00ae B9E7     		b	.L181
 2022              	.LVL159:
 2023              	.L192:
1502:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2024              		.loc 1 1502 0
 2025 00b0 0023     		movs	r3, #0
 2026 00b2 B7E7     		b	.L181
 2027              	.LVL160:
ARM GAS  /tmp/ccefzn75.s 			page 109


 2028              	.L185:
1508:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2029              		.loc 1 1508 0
 2030 00b4 0223     		movs	r3, #2
 2031              	.LVL161:
 2032 00b6 B8E7     		b	.L179
 2033              	.L196:
 2034              		.align	2
 2035              	.L195:
 2036 00b8 00000000 		.word	SPI_2linesRxISR_16BIT
 2037 00bc 00000000 		.word	SPI_2linesTxISR_16BIT
 2038 00c0 00000000 		.word	SPI_2linesRxISR_8BIT
 2039 00c4 00000000 		.word	SPI_2linesTxISR_8BIT
 2040              		.cfi_endproc
 2041              	.LFE81:
 2043              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2044              		.align	1
 2045              		.global	HAL_SPI_Receive_IT
 2046              		.syntax unified
 2047              		.thumb
 2048              		.thumb_func
 2049              		.fpu softvfp
 2051              	HAL_SPI_Receive_IT:
 2052              	.LFB80:
1407:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2053              		.loc 1 1407 0
 2054              		.cfi_startproc
 2055              		@ args = 0, pretend = 0, frame = 0
 2056              		@ frame_needed = 0, uses_anonymous_args = 0
 2057              	.LVL162:
 2058 0000 38B5     		push	{r3, r4, r5, lr}
 2059              	.LCFI30:
 2060              		.cfi_def_cfa_offset 16
 2061              		.cfi_offset 3, -16
 2062              		.cfi_offset 4, -12
 2063              		.cfi_offset 5, -8
 2064              		.cfi_offset 14, -4
 2065 0002 0446     		mov	r4, r0
 2066              	.LVL163:
1410:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2067              		.loc 1 1410 0
 2068 0004 8568     		ldr	r5, [r0, #8]
 2069 0006 1DB9     		cbnz	r5, .L198
1410:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2070              		.loc 1 1410 0 is_stmt 0 discriminator 1
 2071 0008 4368     		ldr	r3, [r0, #4]
 2072 000a B3F5827F 		cmp	r3, #260
 2073 000e 10D0     		beq	.L210
 2074              	.L198:
1418:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2075              		.loc 1 1418 0 is_stmt 1
 2076 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2077              	.LVL164:
 2078 0014 0128     		cmp	r0, #1
 2079 0016 4AD0     		beq	.L204
1418:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2080              		.loc 1 1418 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccefzn75.s 			page 110


 2081 0018 0123     		movs	r3, #1
 2082 001a 84F85030 		strb	r3, [r4, #80]
1420:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2083              		.loc 1 1420 0 is_stmt 1 discriminator 2
 2084 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2085 0022 C0B2     		uxtb	r0, r0
 2086 0024 9842     		cmp	r0, r3
 2087 0026 0CD0     		beq	.L211
1422:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2088              		.loc 1 1422 0
 2089 0028 0220     		movs	r0, #2
 2090              	.LVL165:
 2091              	.L200:
1485:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2092              		.loc 1 1485 0
 2093 002a 0023     		movs	r3, #0
 2094 002c 84F85030 		strb	r3, [r4, #80]
1486:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 2095              		.loc 1 1486 0
 2096 0030 38BD     		pop	{r3, r4, r5, pc}
 2097              	.LVL166:
 2098              	.L210:
 2099 0032 1346     		mov	r3, r2
1412:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2100              		.loc 1 1412 0
 2101 0034 0422     		movs	r2, #4
 2102              	.LVL167:
 2103 0036 80F85120 		strb	r2, [r0, #81]
1414:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2104              		.loc 1 1414 0
 2105 003a 0A46     		mov	r2, r1
 2106 003c FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2107              	.LVL168:
 2108 0040 38BD     		pop	{r3, r4, r5, pc}
 2109              	.LVL169:
 2110              	.L211:
1426:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2111              		.loc 1 1426 0
 2112 0042 0029     		cmp	r1, #0
 2113 0044 2DD0     		beq	.L206
1426:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2114              		.loc 1 1426 0 is_stmt 0 discriminator 1
 2115 0046 002A     		cmp	r2, #0
 2116 0048 2DD0     		beq	.L207
1433:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2117              		.loc 1 1433 0 is_stmt 1
 2118 004a 0423     		movs	r3, #4
 2119 004c 84F85130 		strb	r3, [r4, #81]
1434:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2120              		.loc 1 1434 0
 2121 0050 0023     		movs	r3, #0
 2122 0052 6365     		str	r3, [r4, #84]
1435:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2123              		.loc 1 1435 0
 2124 0054 A163     		str	r1, [r4, #56]
1436:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2125              		.loc 1 1436 0
ARM GAS  /tmp/ccefzn75.s 			page 111


 2126 0056 A287     		strh	r2, [r4, #60]	@ movhi
1437:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2127              		.loc 1 1437 0
 2128 0058 E287     		strh	r2, [r4, #62]	@ movhi
1440:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2129              		.loc 1 1440 0
 2130 005a 2363     		str	r3, [r4, #48]
1441:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2131              		.loc 1 1441 0
 2132 005c A386     		strh	r3, [r4, #52]	@ movhi
1442:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2133              		.loc 1 1442 0
 2134 005e E386     		strh	r3, [r4, #54]	@ movhi
1443:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2135              		.loc 1 1443 0
 2136 0060 6364     		str	r3, [r4, #68]
1446:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2137              		.loc 1 1446 0
 2138 0062 E368     		ldr	r3, [r4, #12]
 2139 0064 A3B1     		cbz	r3, .L201
1448:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2140              		.loc 1 1448 0
 2141 0066 134B     		ldr	r3, .L213
 2142 0068 2364     		str	r3, [r4, #64]
 2143              	.L202:
1456:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2144              		.loc 1 1456 0
 2145 006a B5F5004F 		cmp	r5, #32768
 2146 006e 12D0     		beq	.L212
 2147              	.LVL170:
 2148              	.L203:
1470:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2149              		.loc 1 1470 0
 2150 0070 2268     		ldr	r2, [r4]
 2151 0072 5368     		ldr	r3, [r2, #4]
 2152 0074 43F06003 		orr	r3, r3, #96
 2153 0078 5360     		str	r3, [r2, #4]
1477:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2154              		.loc 1 1477 0
 2155 007a 2368     		ldr	r3, [r4]
 2156 007c 1A68     		ldr	r2, [r3]
 2157 007e 12F0400F 		tst	r2, #64
 2158 0082 12D1     		bne	.L208
1480:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2159              		.loc 1 1480 0
 2160 0084 1A68     		ldr	r2, [r3]
 2161 0086 42F04002 		orr	r2, r2, #64
 2162 008a 1A60     		str	r2, [r3]
1408:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2163              		.loc 1 1408 0
 2164 008c 0020     		movs	r0, #0
 2165 008e CCE7     		b	.L200
 2166              	.LVL171:
 2167              	.L201:
1452:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2168              		.loc 1 1452 0
 2169 0090 094B     		ldr	r3, .L213+4
ARM GAS  /tmp/ccefzn75.s 			page 112


 2170 0092 2364     		str	r3, [r4, #64]
 2171 0094 E9E7     		b	.L202
 2172              	.L212:
1458:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2173              		.loc 1 1458 0
 2174 0096 2268     		ldr	r2, [r4]
 2175              	.LVL172:
 2176 0098 1368     		ldr	r3, [r2]
 2177 009a 23F48043 		bic	r3, r3, #16384
 2178 009e 1360     		str	r3, [r2]
 2179              	.LVL173:
 2180 00a0 E6E7     		b	.L203
 2181              	.LVL174:
 2182              	.L206:
1428:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2183              		.loc 1 1428 0
 2184 00a2 0120     		movs	r0, #1
 2185 00a4 C1E7     		b	.L200
 2186              	.L207:
 2187 00a6 0120     		movs	r0, #1
 2188 00a8 BFE7     		b	.L200
 2189              	.LVL175:
 2190              	.L208:
1408:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2191              		.loc 1 1408 0
 2192 00aa 0020     		movs	r0, #0
 2193 00ac BDE7     		b	.L200
 2194              	.LVL176:
 2195              	.L204:
1418:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2196              		.loc 1 1418 0
 2197 00ae 0220     		movs	r0, #2
1487:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2198              		.loc 1 1487 0
 2199 00b0 38BD     		pop	{r3, r4, r5, pc}
 2200              	.LVL177:
 2201              	.L214:
 2202 00b2 00BF     		.align	2
 2203              	.L213:
 2204 00b4 00000000 		.word	SPI_RxISR_16BIT
 2205 00b8 00000000 		.word	SPI_RxISR_8BIT
 2206              		.cfi_endproc
 2207              	.LFE80:
 2209              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2210              		.align	1
 2211              		.global	HAL_SPI_Transmit_DMA
 2212              		.syntax unified
 2213              		.thumb
 2214              		.thumb_func
 2215              		.fpu softvfp
 2217              	HAL_SPI_Transmit_DMA:
 2218              	.LFB82:
1587:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2219              		.loc 1 1587 0
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccefzn75.s 			page 113


 2223              	.LVL178:
1597:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2224              		.loc 1 1597 0
 2225 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 2226 0004 012B     		cmp	r3, #1
 2227 0006 60D0     		beq	.L221
1587:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2228              		.loc 1 1587 0 discriminator 2
 2229 0008 10B5     		push	{r4, lr}
 2230              	.LCFI31:
 2231              		.cfi_def_cfa_offset 8
 2232              		.cfi_offset 4, -8
 2233              		.cfi_offset 14, -4
 2234 000a 0446     		mov	r4, r0
1597:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2235              		.loc 1 1597 0 discriminator 2
 2236 000c 0123     		movs	r3, #1
 2237 000e 80F85030 		strb	r3, [r0, #80]
1599:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2238              		.loc 1 1599 0 discriminator 2
 2239 0012 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
 2240 0016 DBB2     		uxtb	r3, r3
 2241 0018 012B     		cmp	r3, #1
 2242 001a 05D0     		beq	.L229
1601:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2243              		.loc 1 1601 0
 2244 001c 0223     		movs	r3, #2
 2245              	.LVL179:
 2246              	.L217:
1678:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2247              		.loc 1 1678 0
 2248 001e 0022     		movs	r2, #0
 2249 0020 84F85020 		strb	r2, [r4, #80]
1680:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2250              		.loc 1 1680 0
 2251 0024 1846     		mov	r0, r3
 2252 0026 10BD     		pop	{r4, pc}
 2253              	.LVL180:
 2254              	.L229:
1605:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2255              		.loc 1 1605 0
 2256 0028 0029     		cmp	r1, #0
 2257 002a 4AD0     		beq	.L223
1605:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2258              		.loc 1 1605 0 is_stmt 0 discriminator 1
 2259 002c 002A     		cmp	r2, #0
 2260 002e 4AD0     		beq	.L224
1612:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2261              		.loc 1 1612 0 is_stmt 1
 2262 0030 0323     		movs	r3, #3
 2263 0032 80F85130 		strb	r3, [r0, #81]
1613:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2264              		.loc 1 1613 0
 2265 0036 0023     		movs	r3, #0
 2266 0038 4365     		str	r3, [r0, #84]
1614:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2267              		.loc 1 1614 0
ARM GAS  /tmp/ccefzn75.s 			page 114


 2268 003a 0163     		str	r1, [r0, #48]
1615:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2269              		.loc 1 1615 0
 2270 003c 8286     		strh	r2, [r0, #52]	@ movhi
1616:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2271              		.loc 1 1616 0
 2272 003e C286     		strh	r2, [r0, #54]	@ movhi
1619:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2273              		.loc 1 1619 0
 2274 0040 8363     		str	r3, [r0, #56]
1620:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2275              		.loc 1 1620 0
 2276 0042 4364     		str	r3, [r0, #68]
1621:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2277              		.loc 1 1621 0
 2278 0044 0364     		str	r3, [r0, #64]
1622:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2279              		.loc 1 1622 0
 2280 0046 8387     		strh	r3, [r0, #60]	@ movhi
1623:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2281              		.loc 1 1623 0
 2282 0048 C387     		strh	r3, [r0, #62]	@ movhi
1626:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2283              		.loc 1 1626 0
 2284 004a 8368     		ldr	r3, [r0, #8]
 2285 004c B3F5004F 		cmp	r3, #32768
 2286 0050 1DD0     		beq	.L230
 2287              	.LVL181:
 2288              	.L218:
1640:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2289              		.loc 1 1640 0
 2290 0052 A36C     		ldr	r3, [r4, #72]
 2291 0054 1E4A     		ldr	r2, .L231
 2292 0056 DA62     		str	r2, [r3, #44]
1643:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2293              		.loc 1 1643 0
 2294 0058 A36C     		ldr	r3, [r4, #72]
 2295 005a 1E4A     		ldr	r2, .L231+4
 2296 005c 9A62     		str	r2, [r3, #40]
1646:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2297              		.loc 1 1646 0
 2298 005e A36C     		ldr	r3, [r4, #72]
 2299 0060 1D4A     		ldr	r2, .L231+8
 2300 0062 1A63     		str	r2, [r3, #48]
1649:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2301              		.loc 1 1649 0
 2302 0064 A36C     		ldr	r3, [r4, #72]
 2303 0066 0022     		movs	r2, #0
 2304 0068 5A63     		str	r2, [r3, #52]
1652:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2305              		.loc 1 1652 0
 2306 006a 2268     		ldr	r2, [r4]
1653:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2307              		.loc 1 1653 0
 2308 006c E38E     		ldrh	r3, [r4, #54]
1652:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2309              		.loc 1 1652 0
ARM GAS  /tmp/ccefzn75.s 			page 115


 2310 006e 9BB2     		uxth	r3, r3
 2311 0070 0C32     		adds	r2, r2, #12
 2312 0072 216B     		ldr	r1, [r4, #48]
 2313              	.LVL182:
 2314 0074 A06C     		ldr	r0, [r4, #72]
 2315              	.LVL183:
 2316 0076 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2317              	.LVL184:
 2318 007a 0346     		mov	r3, r0
 2319 007c 68B1     		cbz	r0, .L219
1656:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2320              		.loc 1 1656 0
 2321 007e 636D     		ldr	r3, [r4, #84]
 2322 0080 43F01003 		orr	r3, r3, #16
 2323 0084 6365     		str	r3, [r4, #84]
 2324              	.LVL185:
1659:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2325              		.loc 1 1659 0
 2326 0086 0123     		movs	r3, #1
 2327 0088 84F85130 		strb	r3, [r4, #81]
1660:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2328              		.loc 1 1660 0
 2329 008c C7E7     		b	.L217
 2330              	.LVL186:
 2331              	.L230:
1628:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2332              		.loc 1 1628 0
 2333 008e 0268     		ldr	r2, [r0]
 2334              	.LVL187:
 2335 0090 1368     		ldr	r3, [r2]
 2336 0092 43F48043 		orr	r3, r3, #16384
 2337 0096 1360     		str	r3, [r2]
 2338              	.LVL188:
 2339 0098 DBE7     		b	.L218
 2340              	.LVL189:
 2341              	.L219:
1664:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2342              		.loc 1 1664 0
 2343 009a 2268     		ldr	r2, [r4]
 2344 009c 1168     		ldr	r1, [r2]
 2345 009e 11F0400F 		tst	r1, #64
 2346 00a2 03D1     		bne	.L220
1667:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2347              		.loc 1 1667 0
 2348 00a4 1168     		ldr	r1, [r2]
 2349 00a6 41F04001 		orr	r1, r1, #64
 2350 00aa 1160     		str	r1, [r2]
 2351              	.L220:
1671:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2352              		.loc 1 1671 0
 2353 00ac 2168     		ldr	r1, [r4]
 2354 00ae 4A68     		ldr	r2, [r1, #4]
 2355 00b0 42F02002 		orr	r2, r2, #32
 2356 00b4 4A60     		str	r2, [r1, #4]
1674:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2357              		.loc 1 1674 0
 2358 00b6 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccefzn75.s 			page 116


 2359 00b8 4A68     		ldr	r2, [r1, #4]
 2360 00ba 42F00202 		orr	r2, r2, #2
 2361 00be 4A60     		str	r2, [r1, #4]
 2362 00c0 ADE7     		b	.L217
 2363              	.LVL190:
 2364              	.L223:
1607:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2365              		.loc 1 1607 0
 2366 00c2 0123     		movs	r3, #1
 2367 00c4 ABE7     		b	.L217
 2368              	.L224:
 2369 00c6 0123     		movs	r3, #1
 2370 00c8 A9E7     		b	.L217
 2371              	.L221:
 2372              	.LCFI32:
 2373              		.cfi_def_cfa_offset 0
 2374              		.cfi_restore 4
 2375              		.cfi_restore 14
1597:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2376              		.loc 1 1597 0
 2377 00ca 0223     		movs	r3, #2
1680:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2378              		.loc 1 1680 0
 2379 00cc 1846     		mov	r0, r3
 2380              	.LVL191:
 2381 00ce 7047     		bx	lr
 2382              	.L232:
 2383              		.align	2
 2384              	.L231:
 2385 00d0 00000000 		.word	SPI_DMAHalfTransmitCplt
 2386 00d4 00000000 		.word	SPI_DMATransmitCplt
 2387 00d8 00000000 		.word	SPI_DMAError
 2388              		.cfi_endproc
 2389              	.LFE82:
 2391              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2392              		.align	1
 2393              		.global	HAL_SPI_TransmitReceive_DMA
 2394              		.syntax unified
 2395              		.thumb
 2396              		.thumb_func
 2397              		.fpu softvfp
 2399              	HAL_SPI_TransmitReceive_DMA:
 2400              	.LFB84:
1807:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t             tmp_mode;
 2401              		.loc 1 1807 0
 2402              		.cfi_startproc
 2403              		@ args = 0, pretend = 0, frame = 0
 2404              		@ frame_needed = 0, uses_anonymous_args = 0
 2405              	.LVL192:
 2406 0000 38B5     		push	{r3, r4, r5, lr}
 2407              	.LCFI33:
 2408              		.cfi_def_cfa_offset 16
 2409              		.cfi_offset 3, -16
 2410              		.cfi_offset 4, -12
 2411              		.cfi_offset 5, -8
 2412              		.cfi_offset 14, -4
 2413              	.LVL193:
ARM GAS  /tmp/ccefzn75.s 			page 117


1820:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2414              		.loc 1 1820 0
 2415 0002 90F85040 		ldrb	r4, [r0, #80]	@ zero_extendqisi2
 2416 0006 012C     		cmp	r4, #1
 2417 0008 00F09780 		beq	.L243
 2418 000c 0446     		mov	r4, r0
1820:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2419              		.loc 1 1820 0 is_stmt 0 discriminator 2
 2420 000e 0120     		movs	r0, #1
 2421              	.LVL194:
 2422 0010 84F85000 		strb	r0, [r4, #80]
1823:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2423              		.loc 1 1823 0 is_stmt 1 discriminator 2
 2424 0014 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2425 0018 C0B2     		uxtb	r0, r0
 2426              	.LVL195:
1824:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2427              		.loc 1 1824 0 discriminator 2
 2428 001a 6568     		ldr	r5, [r4, #4]
 2429              	.LVL196:
1826:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2430              		.loc 1 1826 0 discriminator 2
 2431 001c 0128     		cmp	r0, #1
 2432 001e 0FD0     		beq	.L235
1826:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2433              		.loc 1 1826 0 is_stmt 0 discriminator 1
 2434 0020 B5F5827F 		cmp	r5, #260
 2435 0024 05D0     		beq	.L251
1829:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2436              		.loc 1 1829 0 is_stmt 1
 2437 0026 0223     		movs	r3, #2
 2438              	.LVL197:
 2439              	.L236:
1934:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2440              		.loc 1 1934 0
 2441 0028 0022     		movs	r2, #0
 2442 002a 84F85020 		strb	r2, [r4, #80]
 2443              	.LVL198:
 2444              	.L234:
1936:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2445              		.loc 1 1936 0
 2446 002e 1846     		mov	r0, r3
 2447 0030 38BD     		pop	{r3, r4, r5, pc}
 2448              	.LVL199:
 2449              	.L251:
1827:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2450              		.loc 1 1827 0
 2451 0032 A568     		ldr	r5, [r4, #8]
 2452              	.LVL200:
 2453 0034 002D     		cmp	r5, #0
 2454 0036 78D1     		bne	.L245
1827:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2455              		.loc 1 1827 0 is_stmt 0 discriminator 1
 2456 0038 0428     		cmp	r0, #4
 2457 003a 01D0     		beq	.L235
1829:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2458              		.loc 1 1829 0 is_stmt 1
ARM GAS  /tmp/ccefzn75.s 			page 118


 2459 003c 0223     		movs	r3, #2
 2460              	.LVL201:
 2461 003e F3E7     		b	.L236
 2462              	.LVL202:
 2463              	.L235:
1833:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2464              		.loc 1 1833 0
 2465 0040 0029     		cmp	r1, #0
 2466 0042 74D0     		beq	.L247
1833:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2467              		.loc 1 1833 0 is_stmt 0 discriminator 1
 2468 0044 002A     		cmp	r2, #0
 2469 0046 74D0     		beq	.L248
1833:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2470              		.loc 1 1833 0 discriminator 2
 2471 0048 002B     		cmp	r3, #0
 2472 004a 74D0     		beq	.L249
1840:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2473              		.loc 1 1840 0 is_stmt 1
 2474 004c 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2475              	.LVL203:
 2476 0050 C0B2     		uxtb	r0, r0
 2477 0052 0428     		cmp	r0, #4
 2478 0054 02D0     		beq	.L237
1842:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2479              		.loc 1 1842 0
 2480 0056 0520     		movs	r0, #5
 2481 0058 84F85100 		strb	r0, [r4, #81]
 2482              	.L237:
1846:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2483              		.loc 1 1846 0
 2484 005c 0020     		movs	r0, #0
 2485 005e 6065     		str	r0, [r4, #84]
1847:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2486              		.loc 1 1847 0
 2487 0060 2163     		str	r1, [r4, #48]
1848:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2488              		.loc 1 1848 0
 2489 0062 A386     		strh	r3, [r4, #52]	@ movhi
1849:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2490              		.loc 1 1849 0
 2491 0064 E386     		strh	r3, [r4, #54]	@ movhi
1850:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2492              		.loc 1 1850 0
 2493 0066 A263     		str	r2, [r4, #56]
1851:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2494              		.loc 1 1851 0
 2495 0068 A387     		strh	r3, [r4, #60]	@ movhi
1852:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2496              		.loc 1 1852 0
 2497 006a E387     		strh	r3, [r4, #62]	@ movhi
1855:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2498              		.loc 1 1855 0
 2499 006c 2064     		str	r0, [r4, #64]
1856:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2500              		.loc 1 1856 0
 2501 006e 6064     		str	r0, [r4, #68]
ARM GAS  /tmp/ccefzn75.s 			page 119


1867:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2502              		.loc 1 1867 0
 2503 0070 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2504              	.LVL204:
 2505 0074 DBB2     		uxtb	r3, r3
 2506 0076 042B     		cmp	r3, #4
 2507 0078 1CD0     		beq	.L252
1876:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 2508              		.loc 1 1876 0
 2509 007a E36C     		ldr	r3, [r4, #76]
 2510 007c 304A     		ldr	r2, .L253
 2511              	.LVL205:
 2512 007e DA62     		str	r2, [r3, #44]
 2513              	.LVL206:
1877:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2514              		.loc 1 1877 0
 2515 0080 E36C     		ldr	r3, [r4, #76]
 2516 0082 304A     		ldr	r2, .L253+4
 2517 0084 9A62     		str	r2, [r3, #40]
 2518              	.L239:
1881:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2519              		.loc 1 1881 0
 2520 0086 E36C     		ldr	r3, [r4, #76]
 2521 0088 2F4A     		ldr	r2, .L253+8
 2522 008a 1A63     		str	r2, [r3, #48]
1884:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2523              		.loc 1 1884 0
 2524 008c E36C     		ldr	r3, [r4, #76]
 2525 008e 0022     		movs	r2, #0
 2526 0090 5A63     		str	r2, [r3, #52]
1887:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2527              		.loc 1 1887 0
 2528 0092 2168     		ldr	r1, [r4]
 2529              	.LVL207:
1888:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2530              		.loc 1 1888 0
 2531 0094 E38F     		ldrh	r3, [r4, #62]
1887:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2532              		.loc 1 1887 0
 2533 0096 9BB2     		uxth	r3, r3
 2534 0098 A26B     		ldr	r2, [r4, #56]
 2535 009a 0C31     		adds	r1, r1, #12
 2536 009c E06C     		ldr	r0, [r4, #76]
 2537 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 2538              	.LVL208:
 2539 00a2 70B1     		cbz	r0, .L240
1891:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2540              		.loc 1 1891 0
 2541 00a4 636D     		ldr	r3, [r4, #84]
 2542 00a6 43F01003 		orr	r3, r3, #16
 2543 00aa 6365     		str	r3, [r4, #84]
 2544              	.LVL209:
1894:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2545              		.loc 1 1894 0
 2546 00ac 0123     		movs	r3, #1
 2547 00ae 84F85130 		strb	r3, [r4, #81]
1895:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
ARM GAS  /tmp/ccefzn75.s 			page 120


 2548              		.loc 1 1895 0
 2549 00b2 B9E7     		b	.L236
 2550              	.LVL210:
 2551              	.L252:
1870:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 2552              		.loc 1 1870 0
 2553 00b4 E36C     		ldr	r3, [r4, #76]
 2554 00b6 254A     		ldr	r2, .L253+12
 2555              	.LVL211:
 2556 00b8 DA62     		str	r2, [r3, #44]
 2557              	.LVL212:
1871:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2558              		.loc 1 1871 0
 2559 00ba E36C     		ldr	r3, [r4, #76]
 2560 00bc 244A     		ldr	r2, .L253+16
 2561 00be 9A62     		str	r2, [r3, #40]
 2562 00c0 E1E7     		b	.L239
 2563              	.LVL213:
 2564              	.L240:
1899:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2565              		.loc 1 1899 0
 2566 00c2 2268     		ldr	r2, [r4]
 2567 00c4 5368     		ldr	r3, [r2, #4]
 2568 00c6 43F00103 		orr	r3, r3, #1
 2569 00ca 5360     		str	r3, [r2, #4]
1903:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 2570              		.loc 1 1903 0
 2571 00cc A26C     		ldr	r2, [r4, #72]
 2572 00ce 0023     		movs	r3, #0
 2573 00d0 D362     		str	r3, [r2, #44]
1904:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 2574              		.loc 1 1904 0
 2575 00d2 A26C     		ldr	r2, [r4, #72]
 2576 00d4 9362     		str	r3, [r2, #40]
1905:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 2577              		.loc 1 1905 0
 2578 00d6 A26C     		ldr	r2, [r4, #72]
 2579 00d8 1363     		str	r3, [r2, #48]
1906:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2580              		.loc 1 1906 0
 2581 00da A26C     		ldr	r2, [r4, #72]
 2582 00dc 5363     		str	r3, [r2, #52]
1909:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2583              		.loc 1 1909 0
 2584 00de 2268     		ldr	r2, [r4]
1910:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2585              		.loc 1 1910 0
 2586 00e0 E38E     		ldrh	r3, [r4, #54]
1909:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2587              		.loc 1 1909 0
 2588 00e2 9BB2     		uxth	r3, r3
 2589 00e4 0C32     		adds	r2, r2, #12
 2590 00e6 216B     		ldr	r1, [r4, #48]
 2591 00e8 A06C     		ldr	r0, [r4, #72]
 2592 00ea FFF7FEFF 		bl	HAL_DMA_Start_IT
 2593              	.LVL214:
 2594 00ee 0346     		mov	r3, r0
ARM GAS  /tmp/ccefzn75.s 			page 121


 2595 00f0 38B1     		cbz	r0, .L241
1913:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2596              		.loc 1 1913 0
 2597 00f2 636D     		ldr	r3, [r4, #84]
 2598 00f4 43F01003 		orr	r3, r3, #16
 2599 00f8 6365     		str	r3, [r4, #84]
 2600              	.LVL215:
1916:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2601              		.loc 1 1916 0
 2602 00fa 0123     		movs	r3, #1
 2603 00fc 84F85130 		strb	r3, [r4, #81]
1917:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2604              		.loc 1 1917 0
 2605 0100 92E7     		b	.L236
 2606              	.LVL216:
 2607              	.L241:
1921:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2608              		.loc 1 1921 0
 2609 0102 2268     		ldr	r2, [r4]
 2610 0104 1168     		ldr	r1, [r2]
 2611 0106 11F0400F 		tst	r1, #64
 2612 010a 03D1     		bne	.L242
1924:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2613              		.loc 1 1924 0
 2614 010c 1168     		ldr	r1, [r2]
 2615 010e 41F04001 		orr	r1, r1, #64
 2616 0112 1160     		str	r1, [r2]
 2617              	.L242:
1927:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2618              		.loc 1 1927 0
 2619 0114 2168     		ldr	r1, [r4]
 2620 0116 4A68     		ldr	r2, [r1, #4]
 2621 0118 42F02002 		orr	r2, r2, #32
 2622 011c 4A60     		str	r2, [r1, #4]
1930:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2623              		.loc 1 1930 0
 2624 011e 2168     		ldr	r1, [r4]
 2625 0120 4A68     		ldr	r2, [r1, #4]
 2626 0122 42F00202 		orr	r2, r2, #2
 2627 0126 4A60     		str	r2, [r1, #4]
 2628 0128 7EE7     		b	.L236
 2629              	.LVL217:
 2630              	.L245:
1829:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2631              		.loc 1 1829 0
 2632 012a 0223     		movs	r3, #2
 2633              	.LVL218:
 2634 012c 7CE7     		b	.L236
 2635              	.LVL219:
 2636              	.L247:
1835:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2637              		.loc 1 1835 0
 2638 012e 0123     		movs	r3, #1
 2639              	.LVL220:
 2640 0130 7AE7     		b	.L236
 2641              	.LVL221:
 2642              	.L248:
ARM GAS  /tmp/ccefzn75.s 			page 122


 2643 0132 0123     		movs	r3, #1
 2644              	.LVL222:
 2645 0134 78E7     		b	.L236
 2646              	.LVL223:
 2647              	.L249:
 2648 0136 0123     		movs	r3, #1
 2649              	.LVL224:
 2650 0138 76E7     		b	.L236
 2651              	.LVL225:
 2652              	.L243:
1820:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2653              		.loc 1 1820 0
 2654 013a 0223     		movs	r3, #2
 2655              	.LVL226:
 2656 013c 77E7     		b	.L234
 2657              	.L254:
 2658 013e 00BF     		.align	2
 2659              	.L253:
 2660 0140 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 2661 0144 00000000 		.word	SPI_DMATransmitReceiveCplt
 2662 0148 00000000 		.word	SPI_DMAError
 2663 014c 00000000 		.word	SPI_DMAHalfReceiveCplt
 2664 0150 00000000 		.word	SPI_DMAReceiveCplt
 2665              		.cfi_endproc
 2666              	.LFE84:
 2668              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2669              		.align	1
 2670              		.global	HAL_SPI_Receive_DMA
 2671              		.syntax unified
 2672              		.thumb
 2673              		.thumb_func
 2674              		.fpu softvfp
 2676              	HAL_SPI_Receive_DMA:
 2677              	.LFB83:
1693:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2678              		.loc 1 1693 0
 2679              		.cfi_startproc
 2680              		@ args = 0, pretend = 0, frame = 0
 2681              		@ frame_needed = 0, uses_anonymous_args = 0
 2682              	.LVL227:
 2683 0000 38B5     		push	{r3, r4, r5, lr}
 2684              	.LCFI34:
 2685              		.cfi_def_cfa_offset 16
 2686              		.cfi_offset 3, -16
 2687              		.cfi_offset 4, -12
 2688              		.cfi_offset 5, -8
 2689              		.cfi_offset 14, -4
 2690 0002 0446     		mov	r4, r0
 2691              	.LVL228:
1699:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2692              		.loc 1 1699 0
 2693 0004 8568     		ldr	r5, [r0, #8]
 2694 0006 1DB9     		cbnz	r5, .L256
1699:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2695              		.loc 1 1699 0 is_stmt 0 discriminator 1
 2696 0008 4368     		ldr	r3, [r0, #4]
 2697 000a B3F5827F 		cmp	r3, #260
ARM GAS  /tmp/ccefzn75.s 			page 123


 2698 000e 11D0     		beq	.L267
 2699              	.L256:
1711:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2700              		.loc 1 1711 0 is_stmt 1
 2701 0010 94F85000 		ldrb	r0, [r4, #80]	@ zero_extendqisi2
 2702              	.LVL229:
 2703 0014 0128     		cmp	r0, #1
 2704 0016 65D0     		beq	.L262
1711:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2705              		.loc 1 1711 0 is_stmt 0 discriminator 2
 2706 0018 0123     		movs	r3, #1
 2707 001a 84F85030 		strb	r3, [r4, #80]
1713:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2708              		.loc 1 1713 0 is_stmt 1 discriminator 2
 2709 001e 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 2710 0022 C0B2     		uxtb	r0, r0
 2711 0024 9842     		cmp	r0, r3
 2712 0026 0ED0     		beq	.L268
1715:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2713              		.loc 1 1715 0
 2714 0028 0223     		movs	r3, #2
 2715              	.LVL230:
 2716              	.L258:
1791:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 2717              		.loc 1 1791 0
 2718 002a 0022     		movs	r2, #0
 2719 002c 84F85020 		strb	r2, [r4, #80]
 2720              	.LVL231:
 2721              	.L257:
1793:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2722              		.loc 1 1793 0
 2723 0030 1846     		mov	r0, r3
 2724 0032 38BD     		pop	{r3, r4, r5, pc}
 2725              	.LVL232:
 2726              	.L267:
1701:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2727              		.loc 1 1701 0
 2728 0034 0423     		movs	r3, #4
 2729 0036 80F85130 		strb	r3, [r0, #81]
1707:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2730              		.loc 1 1707 0
 2731 003a 1346     		mov	r3, r2
 2732 003c 0A46     		mov	r2, r1
 2733              	.LVL233:
 2734 003e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2735              	.LVL234:
 2736 0042 0346     		mov	r3, r0
 2737 0044 F4E7     		b	.L257
 2738              	.LVL235:
 2739              	.L268:
1719:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2740              		.loc 1 1719 0
 2741 0046 0029     		cmp	r1, #0
 2742 0048 48D0     		beq	.L264
1719:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2743              		.loc 1 1719 0 is_stmt 0 discriminator 1
 2744 004a 002A     		cmp	r2, #0
ARM GAS  /tmp/ccefzn75.s 			page 124


 2745 004c 48D0     		beq	.L265
1726:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2746              		.loc 1 1726 0 is_stmt 1
 2747 004e 0423     		movs	r3, #4
 2748 0050 84F85130 		strb	r3, [r4, #81]
1727:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2749              		.loc 1 1727 0
 2750 0054 0023     		movs	r3, #0
 2751 0056 6365     		str	r3, [r4, #84]
1728:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2752              		.loc 1 1728 0
 2753 0058 A163     		str	r1, [r4, #56]
1729:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2754              		.loc 1 1729 0
 2755 005a A287     		strh	r2, [r4, #60]	@ movhi
1730:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2756              		.loc 1 1730 0
 2757 005c E287     		strh	r2, [r4, #62]	@ movhi
1733:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2758              		.loc 1 1733 0
 2759 005e 2364     		str	r3, [r4, #64]
1734:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2760              		.loc 1 1734 0
 2761 0060 6364     		str	r3, [r4, #68]
1735:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2762              		.loc 1 1735 0
 2763 0062 A386     		strh	r3, [r4, #52]	@ movhi
1736:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2764              		.loc 1 1736 0
 2765 0064 E386     		strh	r3, [r4, #54]	@ movhi
1739:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2766              		.loc 1 1739 0
 2767 0066 B5F5004F 		cmp	r5, #32768
 2768 006a 1DD0     		beq	.L269
 2769              	.LVL236:
 2770              	.L259:
1753:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2771              		.loc 1 1753 0
 2772 006c E36C     		ldr	r3, [r4, #76]
 2773 006e 1E4A     		ldr	r2, .L270
 2774 0070 DA62     		str	r2, [r3, #44]
1756:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2775              		.loc 1 1756 0
 2776 0072 E36C     		ldr	r3, [r4, #76]
 2777 0074 1D4A     		ldr	r2, .L270+4
 2778 0076 9A62     		str	r2, [r3, #40]
1759:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2779              		.loc 1 1759 0
 2780 0078 E36C     		ldr	r3, [r4, #76]
 2781 007a 1D4A     		ldr	r2, .L270+8
 2782 007c 1A63     		str	r2, [r3, #48]
1762:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2783              		.loc 1 1762 0
 2784 007e E36C     		ldr	r3, [r4, #76]
 2785 0080 0022     		movs	r2, #0
 2786 0082 5A63     		str	r2, [r3, #52]
1765:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
ARM GAS  /tmp/ccefzn75.s 			page 125


 2787              		.loc 1 1765 0
 2788 0084 2168     		ldr	r1, [r4]
 2789              	.LVL237:
1766:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2790              		.loc 1 1766 0
 2791 0086 E38F     		ldrh	r3, [r4, #62]
1765:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2792              		.loc 1 1765 0
 2793 0088 9BB2     		uxth	r3, r3
 2794 008a A26B     		ldr	r2, [r4, #56]
 2795 008c 0C31     		adds	r1, r1, #12
 2796 008e E06C     		ldr	r0, [r4, #76]
 2797 0090 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2798              	.LVL238:
 2799 0094 0346     		mov	r3, r0
 2800 0096 68B1     		cbz	r0, .L260
1769:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2801              		.loc 1 1769 0
 2802 0098 636D     		ldr	r3, [r4, #84]
 2803 009a 43F01003 		orr	r3, r3, #16
 2804 009e 6365     		str	r3, [r4, #84]
 2805              	.LVL239:
1772:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2806              		.loc 1 1772 0
 2807 00a0 0123     		movs	r3, #1
 2808 00a2 84F85130 		strb	r3, [r4, #81]
1773:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2809              		.loc 1 1773 0
 2810 00a6 C0E7     		b	.L258
 2811              	.LVL240:
 2812              	.L269:
1741:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2813              		.loc 1 1741 0
 2814 00a8 2268     		ldr	r2, [r4]
 2815              	.LVL241:
 2816 00aa 1368     		ldr	r3, [r2]
 2817 00ac 23F48043 		bic	r3, r3, #16384
 2818 00b0 1360     		str	r3, [r2]
 2819              	.LVL242:
 2820 00b2 DBE7     		b	.L259
 2821              	.LVL243:
 2822              	.L260:
1777:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2823              		.loc 1 1777 0
 2824 00b4 2268     		ldr	r2, [r4]
 2825 00b6 1168     		ldr	r1, [r2]
 2826 00b8 11F0400F 		tst	r1, #64
 2827 00bc 03D1     		bne	.L261
1780:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2828              		.loc 1 1780 0
 2829 00be 1168     		ldr	r1, [r2]
 2830 00c0 41F04001 		orr	r1, r1, #64
 2831 00c4 1160     		str	r1, [r2]
 2832              	.L261:
1784:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2833              		.loc 1 1784 0
 2834 00c6 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccefzn75.s 			page 126


 2835 00c8 4A68     		ldr	r2, [r1, #4]
 2836 00ca 42F02002 		orr	r2, r2, #32
 2837 00ce 4A60     		str	r2, [r1, #4]
1787:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2838              		.loc 1 1787 0
 2839 00d0 2168     		ldr	r1, [r4]
 2840 00d2 4A68     		ldr	r2, [r1, #4]
 2841 00d4 42F00102 		orr	r2, r2, #1
 2842 00d8 4A60     		str	r2, [r1, #4]
 2843 00da A6E7     		b	.L258
 2844              	.LVL244:
 2845              	.L264:
1721:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     goto error;
 2846              		.loc 1 1721 0
 2847 00dc 0123     		movs	r3, #1
 2848 00de A4E7     		b	.L258
 2849              	.L265:
 2850 00e0 0123     		movs	r3, #1
 2851 00e2 A2E7     		b	.L258
 2852              	.L262:
1711:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2853              		.loc 1 1711 0
 2854 00e4 0223     		movs	r3, #2
 2855 00e6 A3E7     		b	.L257
 2856              	.L271:
 2857              		.align	2
 2858              	.L270:
 2859 00e8 00000000 		.word	SPI_DMAHalfReceiveCplt
 2860 00ec 00000000 		.word	SPI_DMAReceiveCplt
 2861 00f0 00000000 		.word	SPI_DMAError
 2862              		.cfi_endproc
 2863              	.LFE83:
 2865              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 2866              		.align	1
 2867              		.global	HAL_SPI_Abort
 2868              		.syntax unified
 2869              		.thumb
 2870              		.thumb_func
 2871              		.fpu softvfp
 2873              	HAL_SPI_Abort:
 2874              	.LFB85:
1952:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 2875              		.loc 1 1952 0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 16
 2878              		@ frame_needed = 0, uses_anonymous_args = 0
 2879              	.LVL245:
 2880 0000 10B5     		push	{r4, lr}
 2881              	.LCFI35:
 2882              		.cfi_def_cfa_offset 8
 2883              		.cfi_offset 4, -8
 2884              		.cfi_offset 14, -4
 2885 0002 84B0     		sub	sp, sp, #16
 2886              	.LCFI36:
 2887              		.cfi_def_cfa_offset 24
 2888 0004 0446     		mov	r4, r0
 2889              	.LVL246:
ARM GAS  /tmp/ccefzn75.s 			page 127


1959:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
 2890              		.loc 1 1959 0
 2891 0006 494B     		ldr	r3, .L293
 2892 0008 1B68     		ldr	r3, [r3]
 2893 000a 494A     		ldr	r2, .L293+4
 2894 000c A2FB0323 		umull	r2, r3, r2, r3
 2895 0010 5B0A     		lsrs	r3, r3, #9
 2896 0012 6422     		movs	r2, #100
 2897 0014 02FB03F3 		mul	r3, r2, r3
 2898 0018 0293     		str	r3, [sp, #8]
1960:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2899              		.loc 1 1960 0
 2900 001a 029B     		ldr	r3, [sp, #8]
 2901 001c 0393     		str	r3, [sp, #12]
1963:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2902              		.loc 1 1963 0
 2903 001e 0268     		ldr	r2, [r0]
 2904 0020 5368     		ldr	r3, [r2, #4]
 2905 0022 23F02003 		bic	r3, r3, #32
 2906 0026 5360     		str	r3, [r2, #4]
1966:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2907              		.loc 1 1966 0
 2908 0028 0268     		ldr	r2, [r0]
 2909 002a 5368     		ldr	r3, [r2, #4]
 2910 002c 13F0800F 		tst	r3, #128
 2911 0030 12D0     		beq	.L273
1968:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 2912              		.loc 1 1968 0
 2913 0032 404B     		ldr	r3, .L293+8
 2914 0034 4364     		str	r3, [r0, #68]
 2915              	.L276:
1972:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 2916              		.loc 1 1972 0
 2917 0036 039B     		ldr	r3, [sp, #12]
 2918 0038 43B1     		cbz	r3, .L290
1977:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 2919              		.loc 1 1977 0
 2920 003a 039B     		ldr	r3, [sp, #12]
 2921 003c 013B     		subs	r3, r3, #1
 2922 003e 0393     		str	r3, [sp, #12]
1978:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 2923              		.loc 1 1978 0
 2924 0040 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2925 0044 DBB2     		uxtb	r3, r3
 2926 0046 072B     		cmp	r3, #7
 2927 0048 F5D1     		bne	.L276
 2928 004a 03E0     		b	.L275
 2929              	.L290:
1974:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 2930              		.loc 1 1974 0
 2931 004c 636D     		ldr	r3, [r4, #84]
 2932 004e 43F04003 		orr	r3, r3, #64
 2933 0052 6365     		str	r3, [r4, #84]
 2934              	.L275:
1980:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2935              		.loc 1 1980 0
 2936 0054 029B     		ldr	r3, [sp, #8]
ARM GAS  /tmp/ccefzn75.s 			page 128


 2937 0056 0393     		str	r3, [sp, #12]
 2938              	.L273:
1983:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2939              		.loc 1 1983 0
 2940 0058 5368     		ldr	r3, [r2, #4]
 2941 005a 13F0400F 		tst	r3, #64
 2942 005e 12D0     		beq	.L277
1985:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 2943              		.loc 1 1985 0
 2944 0060 354B     		ldr	r3, .L293+12
 2945 0062 2364     		str	r3, [r4, #64]
 2946              	.L280:
1989:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 2947              		.loc 1 1989 0
 2948 0064 039B     		ldr	r3, [sp, #12]
 2949 0066 43B1     		cbz	r3, .L291
1994:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 2950              		.loc 1 1994 0
 2951 0068 039B     		ldr	r3, [sp, #12]
 2952 006a 013B     		subs	r3, r3, #1
 2953 006c 0393     		str	r3, [sp, #12]
1995:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 2954              		.loc 1 1995 0
 2955 006e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 2956 0072 DBB2     		uxtb	r3, r3
 2957 0074 072B     		cmp	r3, #7
 2958 0076 F5D1     		bne	.L280
 2959 0078 03E0     		b	.L279
 2960              	.L291:
1991:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 2961              		.loc 1 1991 0
 2962 007a 636D     		ldr	r3, [r4, #84]
 2963 007c 43F04003 		orr	r3, r3, #64
 2964 0080 6365     		str	r3, [r4, #84]
 2965              	.L279:
1997:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 2966              		.loc 1 1997 0
 2967 0082 029B     		ldr	r3, [sp, #8]
 2968 0084 0393     		str	r3, [sp, #12]
 2969              	.L277:
2001:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 2970              		.loc 1 2001 0
 2971 0086 5368     		ldr	r3, [r2, #4]
 2972 0088 13F0020F 		tst	r3, #2
 2973 008c 1DD0     		beq	.L281
2004:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 2974              		.loc 1 2004 0
 2975 008e A36C     		ldr	r3, [r4, #72]
 2976 0090 DBB1     		cbz	r3, .L281
2008:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2977              		.loc 1 2008 0
 2978 0092 0022     		movs	r2, #0
 2979 0094 5A63     		str	r2, [r3, #52]
2011:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 2980              		.loc 1 2011 0
 2981 0096 A06C     		ldr	r0, [r4, #72]
 2982              	.LVL247:
ARM GAS  /tmp/ccefzn75.s 			page 129


 2983 0098 FFF7FEFF 		bl	HAL_DMA_Abort
 2984              	.LVL248:
 2985 009c 08B1     		cbz	r0, .L282
2013:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 2986              		.loc 1 2013 0
 2987 009e 4023     		movs	r3, #64
 2988 00a0 6365     		str	r3, [r4, #84]
 2989              	.L282:
2017:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 2990              		.loc 1 2017 0
 2991 00a2 2268     		ldr	r2, [r4]
 2992 00a4 5368     		ldr	r3, [r2, #4]
 2993 00a6 23F00203 		bic	r3, r3, #2
 2994 00aa 5360     		str	r3, [r2, #4]
 2995              	.L284:
2022:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 2996              		.loc 1 2022 0
 2997 00ac 039B     		ldr	r3, [sp, #12]
 2998 00ae 43B1     		cbz	r3, .L292
2027:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 2999              		.loc 1 2027 0
 3000 00b0 039B     		ldr	r3, [sp, #12]
 3001 00b2 013B     		subs	r3, r3, #1
 3002 00b4 0393     		str	r3, [sp, #12]
2028:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3003              		.loc 1 2028 0
 3004 00b6 2368     		ldr	r3, [r4]
 3005 00b8 9B68     		ldr	r3, [r3, #8]
 3006 00ba 13F0020F 		tst	r3, #2
 3007 00be F5D0     		beq	.L284
 3008 00c0 03E0     		b	.L281
 3009              	.L292:
2024:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           break;
 3010              		.loc 1 2024 0
 3011 00c2 636D     		ldr	r3, [r4, #84]
 3012 00c4 43F04003 		orr	r3, r3, #64
 3013 00c8 6365     		str	r3, [r4, #84]
 3014              	.L281:
2033:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3015              		.loc 1 2033 0
 3016 00ca 2368     		ldr	r3, [r4]
 3017 00cc 5B68     		ldr	r3, [r3, #4]
 3018 00ce 13F0010F 		tst	r3, #1
 3019 00d2 13D0     		beq	.L285
2036:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3020              		.loc 1 2036 0
 3021 00d4 E36C     		ldr	r3, [r4, #76]
 3022 00d6 8BB1     		cbz	r3, .L285
2040:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3023              		.loc 1 2040 0
 3024 00d8 0022     		movs	r2, #0
 3025 00da 5A63     		str	r2, [r3, #52]
2043:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 3026              		.loc 1 2043 0
 3027 00dc E06C     		ldr	r0, [r4, #76]
 3028 00de FFF7FEFF 		bl	HAL_DMA_Abort
 3029              	.LVL249:
ARM GAS  /tmp/ccefzn75.s 			page 130


 3030 00e2 08B1     		cbz	r0, .L286
2045:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 3031              		.loc 1 2045 0
 3032 00e4 4023     		movs	r3, #64
 3033 00e6 6365     		str	r3, [r4, #84]
 3034              	.L286:
2049:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3035              		.loc 1 2049 0
 3036 00e8 2268     		ldr	r2, [r4]
 3037 00ea 1368     		ldr	r3, [r2]
 3038 00ec 23F04003 		bic	r3, r3, #64
 3039 00f0 1360     		str	r3, [r2]
2052:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3040              		.loc 1 2052 0
 3041 00f2 2268     		ldr	r2, [r4]
 3042 00f4 5368     		ldr	r3, [r2, #4]
 3043 00f6 23F00103 		bic	r3, r3, #1
 3044 00fa 5360     		str	r3, [r2, #4]
 3045              	.L285:
2056:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3046              		.loc 1 2056 0
 3047 00fc 0023     		movs	r3, #0
 3048 00fe E387     		strh	r3, [r4, #62]	@ movhi
2057:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3049              		.loc 1 2057 0
 3050 0100 E386     		strh	r3, [r4, #54]	@ movhi
2060:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3051              		.loc 1 2060 0
 3052 0102 636D     		ldr	r3, [r4, #84]
 3053 0104 402B     		cmp	r3, #64
 3054 0106 0ED0     		beq	.L288
2068:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3055              		.loc 1 2068 0
 3056 0108 0020     		movs	r0, #0
 3057 010a 6065     		str	r0, [r4, #84]
 3058              	.L287:
 3059              	.LVL250:
 3060              	.LBB4:
2072:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 3061              		.loc 1 2072 0
 3062 010c 0023     		movs	r3, #0
 3063 010e 0193     		str	r3, [sp, #4]
 3064 0110 2368     		ldr	r3, [r4]
 3065 0112 DA68     		ldr	r2, [r3, #12]
 3066 0114 0192     		str	r2, [sp, #4]
 3067 0116 9B68     		ldr	r3, [r3, #8]
 3068 0118 0193     		str	r3, [sp, #4]
 3069 011a 019B     		ldr	r3, [sp, #4]
 3070              	.LBE4:
2078:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3071              		.loc 1 2078 0
 3072 011c 0123     		movs	r3, #1
 3073 011e 84F85130 		strb	r3, [r4, #81]
2081:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3074              		.loc 1 2081 0
 3075 0122 04B0     		add	sp, sp, #16
 3076              	.LCFI37:
ARM GAS  /tmp/ccefzn75.s 			page 131


 3077              		.cfi_remember_state
 3078              		.cfi_def_cfa_offset 8
 3079              		@ sp needed
 3080 0124 10BD     		pop	{r4, pc}
 3081              	.LVL251:
 3082              	.L288:
 3083              	.LCFI38:
 3084              		.cfi_restore_state
2063:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3085              		.loc 1 2063 0
 3086 0126 0120     		movs	r0, #1
 3087 0128 F0E7     		b	.L287
 3088              	.L294:
 3089 012a 00BF     		.align	2
 3090              	.L293:
 3091 012c 00000000 		.word	SystemCoreClock
 3092 0130 F1197605 		.word	91625969
 3093 0134 00000000 		.word	SPI_AbortTx_ISR
 3094 0138 00000000 		.word	SPI_AbortRx_ISR
 3095              		.cfi_endproc
 3096              	.LFE85:
 3098              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 3099              		.align	1
 3100              		.global	HAL_SPI_DMAPause
 3101              		.syntax unified
 3102              		.thumb
 3103              		.thumb_func
 3104              		.fpu softvfp
 3106              	HAL_SPI_DMAPause:
 3107              	.LFB87:
2262:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 3108              		.loc 1 2262 0
 3109              		.cfi_startproc
 3110              		@ args = 0, pretend = 0, frame = 0
 3111              		@ frame_needed = 0, uses_anonymous_args = 0
 3112              		@ link register save eliminated.
 3113              	.LVL252:
2264:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3114              		.loc 1 2264 0
 3115 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3116 0004 012B     		cmp	r3, #1
 3117 0006 0CD0     		beq	.L297
2264:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3118              		.loc 1 2264 0 is_stmt 0 discriminator 2
 3119 0008 0123     		movs	r3, #1
 3120 000a 80F85030 		strb	r3, [r0, #80]
2267:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3121              		.loc 1 2267 0 is_stmt 1 discriminator 2
 3122 000e 0268     		ldr	r2, [r0]
 3123 0010 5368     		ldr	r3, [r2, #4]
 3124 0012 23F00303 		bic	r3, r3, #3
 3125 0016 5360     		str	r3, [r2, #4]
2270:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3126              		.loc 1 2270 0 discriminator 2
 3127 0018 0023     		movs	r3, #0
 3128 001a 80F85030 		strb	r3, [r0, #80]
2272:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
ARM GAS  /tmp/ccefzn75.s 			page 132


 3129              		.loc 1 2272 0 discriminator 2
 3130 001e 1846     		mov	r0, r3
 3131              	.LVL253:
 3132 0020 7047     		bx	lr
 3133              	.LVL254:
 3134              	.L297:
2264:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3135              		.loc 1 2264 0
 3136 0022 0220     		movs	r0, #2
 3137              	.LVL255:
2273:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3138              		.loc 1 2273 0
 3139 0024 7047     		bx	lr
 3140              		.cfi_endproc
 3141              	.LFE87:
 3143              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 3144              		.align	1
 3145              		.global	HAL_SPI_DMAResume
 3146              		.syntax unified
 3147              		.thumb
 3148              		.thumb_func
 3149              		.fpu softvfp
 3151              	HAL_SPI_DMAResume:
 3152              	.LFB88:
2282:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Process Locked */
 3153              		.loc 1 2282 0
 3154              		.cfi_startproc
 3155              		@ args = 0, pretend = 0, frame = 0
 3156              		@ frame_needed = 0, uses_anonymous_args = 0
 3157              		@ link register save eliminated.
 3158              	.LVL256:
2284:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3159              		.loc 1 2284 0
 3160 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3161 0004 012B     		cmp	r3, #1
 3162 0006 0CD0     		beq	.L300
2284:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3163              		.loc 1 2284 0 is_stmt 0 discriminator 2
 3164 0008 0123     		movs	r3, #1
 3165 000a 80F85030 		strb	r3, [r0, #80]
2287:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3166              		.loc 1 2287 0 is_stmt 1 discriminator 2
 3167 000e 0268     		ldr	r2, [r0]
 3168 0010 5368     		ldr	r3, [r2, #4]
 3169 0012 43F00303 		orr	r3, r3, #3
 3170 0016 5360     		str	r3, [r2, #4]
2290:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3171              		.loc 1 2290 0 discriminator 2
 3172 0018 0023     		movs	r3, #0
 3173 001a 80F85030 		strb	r3, [r0, #80]
2292:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 3174              		.loc 1 2292 0 discriminator 2
 3175 001e 1846     		mov	r0, r3
 3176              	.LVL257:
 3177 0020 7047     		bx	lr
 3178              	.LVL258:
 3179              	.L300:
ARM GAS  /tmp/ccefzn75.s 			page 133


2284:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3180              		.loc 1 2284 0
 3181 0022 0220     		movs	r0, #2
 3182              	.LVL259:
2293:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3183              		.loc 1 2293 0
 3184 0024 7047     		bx	lr
 3185              		.cfi_endproc
 3186              	.LFE88:
 3188              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 3189              		.align	1
 3190              		.global	HAL_SPI_DMAStop
 3191              		.syntax unified
 3192              		.thumb
 3193              		.thumb_func
 3194              		.fpu softvfp
 3196              	HAL_SPI_DMAStop:
 3197              	.LFB89:
2302:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3198              		.loc 1 2302 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 0
 3201              		@ frame_needed = 0, uses_anonymous_args = 0
 3202              	.LVL260:
 3203 0000 38B5     		push	{r3, r4, r5, lr}
 3204              	.LCFI39:
 3205              		.cfi_def_cfa_offset 16
 3206              		.cfi_offset 3, -16
 3207              		.cfi_offset 4, -12
 3208              		.cfi_offset 5, -8
 3209              		.cfi_offset 14, -4
 3210 0002 0446     		mov	r4, r0
 3211              	.LVL261:
2311:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3212              		.loc 1 2311 0
 3213 0004 806C     		ldr	r0, [r0, #72]
 3214              	.LVL262:
 3215 0006 E0B1     		cbz	r0, .L304
2313:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3216              		.loc 1 2313 0
 3217 0008 FFF7FEFF 		bl	HAL_DMA_Abort
 3218              	.LVL263:
 3219 000c 0546     		mov	r5, r0
 3220 000e 20B1     		cbz	r0, .L302
2315:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3221              		.loc 1 2315 0
 3222 0010 636D     		ldr	r3, [r4, #84]
 3223 0012 43F01003 		orr	r3, r3, #16
 3224 0016 6365     		str	r3, [r4, #84]
 3225              	.LVL264:
2316:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3226              		.loc 1 2316 0
 3227 0018 0125     		movs	r5, #1
 3228              	.LVL265:
 3229              	.L302:
2320:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3230              		.loc 1 2320 0
ARM GAS  /tmp/ccefzn75.s 			page 134


 3231 001a E06C     		ldr	r0, [r4, #76]
 3232 001c 38B1     		cbz	r0, .L303
2322:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3233              		.loc 1 2322 0
 3234 001e FFF7FEFF 		bl	HAL_DMA_Abort
 3235              	.LVL266:
 3236 0022 20B1     		cbz	r0, .L303
2324:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3237              		.loc 1 2324 0
 3238 0024 636D     		ldr	r3, [r4, #84]
 3239 0026 43F01003 		orr	r3, r3, #16
 3240 002a 6365     		str	r3, [r4, #84]
 3241              	.LVL267:
2325:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 3242              		.loc 1 2325 0
 3243 002c 0125     		movs	r5, #1
 3244              	.LVL268:
 3245              	.L303:
2330:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3246              		.loc 1 2330 0
 3247 002e 2268     		ldr	r2, [r4]
 3248 0030 5368     		ldr	r3, [r2, #4]
 3249 0032 23F00303 		bic	r3, r3, #3
 3250 0036 5360     		str	r3, [r2, #4]
2331:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   return errorcode;
 3251              		.loc 1 2331 0
 3252 0038 0123     		movs	r3, #1
 3253 003a 84F85130 		strb	r3, [r4, #81]
2333:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3254              		.loc 1 2333 0
 3255 003e 2846     		mov	r0, r5
 3256 0040 38BD     		pop	{r3, r4, r5, pc}
 3257              	.LVL269:
 3258              	.L304:
2303:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 3259              		.loc 1 2303 0
 3260 0042 0025     		movs	r5, #0
 3261 0044 E9E7     		b	.L302
 3262              		.cfi_endproc
 3263              	.LFE89:
 3265              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 3266              		.align	1
 3267              		.weak	HAL_SPI_TxCpltCallback
 3268              		.syntax unified
 3269              		.thumb
 3270              		.thumb_func
 3271              		.fpu softvfp
 3273              	HAL_SPI_TxCpltCallback:
 3274              	.LFB91:
2456:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3275              		.loc 1 2456 0
 3276              		.cfi_startproc
 3277              		@ args = 0, pretend = 0, frame = 0
 3278              		@ frame_needed = 0, uses_anonymous_args = 0
 3279              		@ link register save eliminated.
 3280              	.LVL270:
 3281 0000 7047     		bx	lr
ARM GAS  /tmp/ccefzn75.s 			page 135


 3282              		.cfi_endproc
 3283              	.LFE91:
 3285              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 3286              		.align	1
 3287              		.weak	HAL_SPI_RxCpltCallback
 3288              		.syntax unified
 3289              		.thumb
 3290              		.thumb_func
 3291              		.fpu softvfp
 3293              	HAL_SPI_RxCpltCallback:
 3294              	.LFB92:
2472:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3295              		.loc 1 2472 0
 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 0
 3298              		@ frame_needed = 0, uses_anonymous_args = 0
 3299              		@ link register save eliminated.
 3300              	.LVL271:
 3301 0000 7047     		bx	lr
 3302              		.cfi_endproc
 3303              	.LFE92:
 3305              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 3306              		.align	1
 3307              		.weak	HAL_SPI_TxRxCpltCallback
 3308              		.syntax unified
 3309              		.thumb
 3310              		.thumb_func
 3311              		.fpu softvfp
 3313              	HAL_SPI_TxRxCpltCallback:
 3314              	.LFB93:
2488:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3315              		.loc 1 2488 0
 3316              		.cfi_startproc
 3317              		@ args = 0, pretend = 0, frame = 0
 3318              		@ frame_needed = 0, uses_anonymous_args = 0
 3319              		@ link register save eliminated.
 3320              	.LVL272:
 3321 0000 7047     		bx	lr
 3322              		.cfi_endproc
 3323              	.LFE93:
 3325              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 3326              		.align	1
 3327              		.weak	HAL_SPI_TxHalfCpltCallback
 3328              		.syntax unified
 3329              		.thumb
 3330              		.thumb_func
 3331              		.fpu softvfp
 3333              	HAL_SPI_TxHalfCpltCallback:
 3334              	.LFB94:
2504:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3335              		.loc 1 2504 0
 3336              		.cfi_startproc
 3337              		@ args = 0, pretend = 0, frame = 0
 3338              		@ frame_needed = 0, uses_anonymous_args = 0
 3339              		@ link register save eliminated.
 3340              	.LVL273:
 3341 0000 7047     		bx	lr
ARM GAS  /tmp/ccefzn75.s 			page 136


 3342              		.cfi_endproc
 3343              	.LFE94:
 3345              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 3346              		.align	1
 3347              		.syntax unified
 3348              		.thumb
 3349              		.thumb_func
 3350              		.fpu softvfp
 3352              	SPI_DMAHalfTransmitCplt:
 3353              	.LFB104:
2849:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3354              		.loc 1 2849 0
 3355              		.cfi_startproc
 3356              		@ args = 0, pretend = 0, frame = 0
 3357              		@ frame_needed = 0, uses_anonymous_args = 0
 3358              	.LVL274:
2849:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3359              		.loc 1 2849 0
 3360 0000 08B5     		push	{r3, lr}
 3361              	.LCFI40:
 3362              		.cfi_def_cfa_offset 8
 3363              		.cfi_offset 3, -8
 3364              		.cfi_offset 14, -4
 3365              	.LVL275:
2856:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3366              		.loc 1 2856 0
 3367 0002 406A     		ldr	r0, [r0, #36]
 3368              	.LVL276:
 3369 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 3370              	.LVL277:
 3371 0008 08BD     		pop	{r3, pc}
 3372              		.cfi_endproc
 3373              	.LFE104:
 3375              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 3376              		.align	1
 3377              		.weak	HAL_SPI_RxHalfCpltCallback
 3378              		.syntax unified
 3379              		.thumb
 3380              		.thumb_func
 3381              		.fpu softvfp
 3383              	HAL_SPI_RxHalfCpltCallback:
 3384              	.LFB95:
2520:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3385              		.loc 1 2520 0
 3386              		.cfi_startproc
 3387              		@ args = 0, pretend = 0, frame = 0
 3388              		@ frame_needed = 0, uses_anonymous_args = 0
 3389              		@ link register save eliminated.
 3390              	.LVL278:
 3391 0000 7047     		bx	lr
 3392              		.cfi_endproc
 3393              	.LFE95:
 3395              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 3396              		.align	1
 3397              		.syntax unified
 3398              		.thumb
 3399              		.thumb_func
ARM GAS  /tmp/ccefzn75.s 			page 137


 3400              		.fpu softvfp
 3402              	SPI_DMAHalfReceiveCplt:
 3403              	.LFB105:
2867:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3404              		.loc 1 2867 0
 3405              		.cfi_startproc
 3406              		@ args = 0, pretend = 0, frame = 0
 3407              		@ frame_needed = 0, uses_anonymous_args = 0
 3408              	.LVL279:
2867:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3409              		.loc 1 2867 0
 3410 0000 08B5     		push	{r3, lr}
 3411              	.LCFI41:
 3412              		.cfi_def_cfa_offset 8
 3413              		.cfi_offset 3, -8
 3414              		.cfi_offset 14, -4
 3415              	.LVL280:
2874:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3416              		.loc 1 2874 0
 3417 0002 406A     		ldr	r0, [r0, #36]
 3418              	.LVL281:
 3419 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 3420              	.LVL282:
 3421 0008 08BD     		pop	{r3, pc}
 3422              		.cfi_endproc
 3423              	.LFE105:
 3425              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 3426              		.align	1
 3427              		.weak	HAL_SPI_TxRxHalfCpltCallback
 3428              		.syntax unified
 3429              		.thumb
 3430              		.thumb_func
 3431              		.fpu softvfp
 3433              	HAL_SPI_TxRxHalfCpltCallback:
 3434              	.LFB96:
2536:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3435              		.loc 1 2536 0
 3436              		.cfi_startproc
 3437              		@ args = 0, pretend = 0, frame = 0
 3438              		@ frame_needed = 0, uses_anonymous_args = 0
 3439              		@ link register save eliminated.
 3440              	.LVL283:
 3441 0000 7047     		bx	lr
 3442              		.cfi_endproc
 3443              	.LFE96:
 3445              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 3446              		.align	1
 3447              		.syntax unified
 3448              		.thumb
 3449              		.thumb_func
 3450              		.fpu softvfp
 3452              	SPI_DMAHalfTransmitReceiveCplt:
 3453              	.LFB106:
2885:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3454              		.loc 1 2885 0
 3455              		.cfi_startproc
 3456              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccefzn75.s 			page 138


 3457              		@ frame_needed = 0, uses_anonymous_args = 0
 3458              	.LVL284:
2885:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 3459              		.loc 1 2885 0
 3460 0000 08B5     		push	{r3, lr}
 3461              	.LCFI42:
 3462              		.cfi_def_cfa_offset 8
 3463              		.cfi_offset 3, -8
 3464              		.cfi_offset 14, -4
 3465              	.LVL285:
2892:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3466              		.loc 1 2892 0
 3467 0002 406A     		ldr	r0, [r0, #36]
 3468              	.LVL286:
 3469 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 3470              	.LVL287:
 3471 0008 08BD     		pop	{r3, pc}
 3472              		.cfi_endproc
 3473              	.LFE106:
 3475              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 3476              		.align	1
 3477              		.weak	HAL_SPI_ErrorCallback
 3478              		.syntax unified
 3479              		.thumb
 3480              		.thumb_func
 3481              		.fpu softvfp
 3483              	HAL_SPI_ErrorCallback:
 3484              	.LFB97:
2552:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3485              		.loc 1 2552 0
 3486              		.cfi_startproc
 3487              		@ args = 0, pretend = 0, frame = 0
 3488              		@ frame_needed = 0, uses_anonymous_args = 0
 3489              		@ link register save eliminated.
 3490              	.LVL288:
 3491 0000 7047     		bx	lr
 3492              		.cfi_endproc
 3493              	.LFE97:
 3495              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 3496              		.align	1
 3497              		.syntax unified
 3498              		.thumb
 3499              		.thumb_func
 3500              		.fpu softvfp
 3502              	SPI_CloseTx_ISR:
 3503              	.LFB124:
3705:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 3504              		.loc 1 3705 0
 3505              		.cfi_startproc
 3506              		@ args = 0, pretend = 0, frame = 8
 3507              		@ frame_needed = 0, uses_anonymous_args = 0
 3508              	.LVL289:
3705:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 3509              		.loc 1 3705 0
 3510 0000 10B5     		push	{r4, lr}
 3511              	.LCFI43:
 3512              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccefzn75.s 			page 139


 3513              		.cfi_offset 4, -8
 3514              		.cfi_offset 14, -4
 3515 0002 82B0     		sub	sp, sp, #8
 3516              	.LCFI44:
 3517              		.cfi_def_cfa_offset 16
 3518 0004 0446     		mov	r4, r0
3707:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3519              		.loc 1 3707 0
 3520 0006 204B     		ldr	r3, .L330
 3521 0008 1B68     		ldr	r3, [r3]
 3522 000a 204A     		ldr	r2, .L330+4
 3523 000c A2FB0323 		umull	r2, r3, r2, r3
 3524 0010 5B0A     		lsrs	r3, r3, #9
 3525 0012 6422     		movs	r2, #100
 3526 0014 02FB03F3 		mul	r3, r2, r3
 3527 0018 0193     		str	r3, [sp, #4]
3710:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3528              		.loc 1 3710 0
 3529 001a FFF7FEFF 		bl	HAL_GetTick
 3530              	.LVL290:
 3531 001e 0246     		mov	r2, r0
 3532              	.LVL291:
 3533              	.L322:
3715:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3534              		.loc 1 3715 0
 3535 0020 019B     		ldr	r3, [sp, #4]
 3536 0022 43B1     		cbz	r3, .L328
3720:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3537              		.loc 1 3720 0
 3538 0024 019B     		ldr	r3, [sp, #4]
 3539 0026 013B     		subs	r3, r3, #1
 3540 0028 0193     		str	r3, [sp, #4]
3721:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3541              		.loc 1 3721 0
 3542 002a 2368     		ldr	r3, [r4]
 3543 002c 9B68     		ldr	r3, [r3, #8]
 3544 002e 13F0020F 		tst	r3, #2
 3545 0032 F5D0     		beq	.L322
 3546 0034 03E0     		b	.L321
 3547              	.L328:
3717:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
 3548              		.loc 1 3717 0
 3549 0036 636D     		ldr	r3, [r4, #84]
 3550 0038 43F02003 		orr	r3, r3, #32
 3551 003c 6365     		str	r3, [r4, #84]
 3552              	.L321:
3724:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3553              		.loc 1 3724 0
 3554 003e 2168     		ldr	r1, [r4]
 3555 0040 4B68     		ldr	r3, [r1, #4]
 3556 0042 23F0A003 		bic	r3, r3, #160
 3557 0046 4B60     		str	r3, [r1, #4]
3727:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3558              		.loc 1 3727 0
 3559 0048 6421     		movs	r1, #100
 3560 004a 2046     		mov	r0, r4
 3561              	.LVL292:
ARM GAS  /tmp/ccefzn75.s 			page 140


 3562 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3563              	.LVL293:
 3564 0050 18B1     		cbz	r0, .L323
3729:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3565              		.loc 1 3729 0
 3566 0052 636D     		ldr	r3, [r4, #84]
 3567 0054 43F02003 		orr	r3, r3, #32
 3568 0058 6365     		str	r3, [r4, #84]
 3569              	.L323:
3733:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3570              		.loc 1 3733 0
 3571 005a A368     		ldr	r3, [r4, #8]
 3572 005c 33B9     		cbnz	r3, .L324
 3573              	.LBB5:
3735:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3574              		.loc 1 3735 0
 3575 005e 0093     		str	r3, [sp]
 3576 0060 2368     		ldr	r3, [r4]
 3577 0062 DA68     		ldr	r2, [r3, #12]
 3578 0064 0092     		str	r2, [sp]
 3579 0066 9B68     		ldr	r3, [r3, #8]
 3580 0068 0093     		str	r3, [sp]
 3581 006a 009B     		ldr	r3, [sp]
 3582              	.L324:
 3583              	.LBE5:
3738:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 3584              		.loc 1 3738 0
 3585 006c 0123     		movs	r3, #1
 3586 006e 84F85130 		strb	r3, [r4, #81]
3739:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3587              		.loc 1 3739 0
 3588 0072 636D     		ldr	r3, [r4, #84]
 3589 0074 23B9     		cbnz	r3, .L329
3754:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3590              		.loc 1 3754 0
 3591 0076 2046     		mov	r0, r4
 3592 0078 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 3593              	.LVL294:
 3594              	.L319:
3757:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3595              		.loc 1 3757 0
 3596 007c 02B0     		add	sp, sp, #8
 3597              	.LCFI45:
 3598              		.cfi_remember_state
 3599              		.cfi_def_cfa_offset 8
 3600              		@ sp needed
 3601 007e 10BD     		pop	{r4, pc}
 3602              	.LVL295:
 3603              	.L329:
 3604              	.LCFI46:
 3605              		.cfi_restore_state
3745:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3606              		.loc 1 3745 0
 3607 0080 2046     		mov	r0, r4
 3608 0082 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3609              	.LVL296:
 3610 0086 F9E7     		b	.L319
ARM GAS  /tmp/ccefzn75.s 			page 141


 3611              	.L331:
 3612              		.align	2
 3613              	.L330:
 3614 0088 00000000 		.word	SystemCoreClock
 3615 008c F1197605 		.word	91625969
 3616              		.cfi_endproc
 3617              	.LFE124:
 3619              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 3620              		.align	1
 3621              		.syntax unified
 3622              		.thumb
 3623              		.thumb_func
 3624              		.fpu softvfp
 3626              	SPI_TxISR_8BIT:
 3627              	.LFB117:
3358:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 3628              		.loc 1 3358 0
 3629              		.cfi_startproc
 3630              		@ args = 0, pretend = 0, frame = 0
 3631              		@ frame_needed = 0, uses_anonymous_args = 0
 3632              	.LVL297:
 3633 0000 08B5     		push	{r3, lr}
 3634              	.LCFI47:
 3635              		.cfi_def_cfa_offset 8
 3636              		.cfi_offset 3, -8
 3637              		.cfi_offset 14, -4
3359:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 3638              		.loc 1 3359 0
 3639 0002 0368     		ldr	r3, [r0]
 3640 0004 026B     		ldr	r2, [r0, #48]
 3641 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3642 0008 1A73     		strb	r2, [r3, #12]
3360:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 3643              		.loc 1 3360 0
 3644 000a 036B     		ldr	r3, [r0, #48]
 3645 000c 0133     		adds	r3, r3, #1
 3646 000e 0363     		str	r3, [r0, #48]
3361:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3647              		.loc 1 3361 0
 3648 0010 C38E     		ldrh	r3, [r0, #54]
 3649 0012 9BB2     		uxth	r3, r3
 3650 0014 013B     		subs	r3, r3, #1
 3651 0016 9BB2     		uxth	r3, r3
 3652 0018 C386     		strh	r3, [r0, #54]	@ movhi
3363:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3653              		.loc 1 3363 0
 3654 001a C38E     		ldrh	r3, [r0, #54]
 3655 001c 9BB2     		uxth	r3, r3
 3656 001e 03B1     		cbz	r3, .L335
 3657              	.LVL298:
 3658              	.L332:
 3659 0020 08BD     		pop	{r3, pc}
 3660              	.LVL299:
 3661              	.L335:
3372:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3662              		.loc 1 3372 0
 3663 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
ARM GAS  /tmp/ccefzn75.s 			page 142


 3664              	.LVL300:
3374:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3665              		.loc 1 3374 0
 3666 0026 FBE7     		b	.L332
 3667              		.cfi_endproc
 3668              	.LFE117:
 3670              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 3671              		.align	1
 3672              		.syntax unified
 3673              		.thumb
 3674              		.thumb_func
 3675              		.fpu softvfp
 3677              	SPI_TxISR_16BIT:
 3678              	.LFB118:
3383:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 3679              		.loc 1 3383 0
 3680              		.cfi_startproc
 3681              		@ args = 0, pretend = 0, frame = 0
 3682              		@ frame_needed = 0, uses_anonymous_args = 0
 3683              	.LVL301:
 3684 0000 08B5     		push	{r3, lr}
 3685              	.LCFI48:
 3686              		.cfi_def_cfa_offset 8
 3687              		.cfi_offset 3, -8
 3688              		.cfi_offset 14, -4
3385:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 3689              		.loc 1 3385 0
 3690 0002 0368     		ldr	r3, [r0]
 3691 0004 026B     		ldr	r2, [r0, #48]
 3692 0006 1288     		ldrh	r2, [r2]
 3693 0008 DA60     		str	r2, [r3, #12]
3386:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 3694              		.loc 1 3386 0
 3695 000a 036B     		ldr	r3, [r0, #48]
 3696 000c 0233     		adds	r3, r3, #2
 3697 000e 0363     		str	r3, [r0, #48]
3387:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3698              		.loc 1 3387 0
 3699 0010 C38E     		ldrh	r3, [r0, #54]
 3700 0012 9BB2     		uxth	r3, r3
 3701 0014 013B     		subs	r3, r3, #1
 3702 0016 9BB2     		uxth	r3, r3
 3703 0018 C386     		strh	r3, [r0, #54]	@ movhi
3389:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3704              		.loc 1 3389 0
 3705 001a C38E     		ldrh	r3, [r0, #54]
 3706 001c 9BB2     		uxth	r3, r3
 3707 001e 03B1     		cbz	r3, .L339
 3708              	.LVL302:
 3709              	.L336:
 3710 0020 08BD     		pop	{r3, pc}
 3711              	.LVL303:
 3712              	.L339:
3398:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3713              		.loc 1 3398 0
 3714 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 3715              	.LVL304:
ARM GAS  /tmp/ccefzn75.s 			page 143


3400:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3716              		.loc 1 3400 0
 3717 0026 FBE7     		b	.L336
 3718              		.cfi_endproc
 3719              	.LFE118:
 3721              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 3722              		.align	1
 3723              		.syntax unified
 3724              		.thumb
 3725              		.thumb_func
 3726              		.fpu softvfp
 3728              	SPI_CloseRx_ISR:
 3729              	.LFB123:
3642:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 3730              		.loc 1 3642 0
 3731              		.cfi_startproc
 3732              		@ args = 0, pretend = 0, frame = 8
 3733              		@ frame_needed = 0, uses_anonymous_args = 0
 3734              	.LVL305:
 3735 0000 10B5     		push	{r4, lr}
 3736              	.LCFI49:
 3737              		.cfi_def_cfa_offset 8
 3738              		.cfi_offset 4, -8
 3739              		.cfi_offset 14, -4
 3740 0002 82B0     		sub	sp, sp, #8
 3741              	.LCFI50:
 3742              		.cfi_def_cfa_offset 16
 3743 0004 0446     		mov	r4, r0
3644:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3744              		.loc 1 3644 0
 3745 0006 0268     		ldr	r2, [r0]
 3746 0008 5368     		ldr	r3, [r2, #4]
 3747 000a 23F06003 		bic	r3, r3, #96
 3748 000e 5360     		str	r3, [r2, #4]
3647:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3749              		.loc 1 3647 0
 3750 0010 FFF7FEFF 		bl	HAL_GetTick
 3751              	.LVL306:
 3752 0014 0246     		mov	r2, r0
 3753 0016 6421     		movs	r1, #100
 3754 0018 2046     		mov	r0, r4
 3755 001a FFF7FEFF 		bl	SPI_EndRxTransaction
 3756              	.LVL307:
 3757 001e 18B1     		cbz	r0, .L341
3649:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3758              		.loc 1 3649 0
 3759 0020 636D     		ldr	r3, [r4, #84]
 3760 0022 43F02003 		orr	r3, r3, #32
 3761 0026 6365     		str	r3, [r4, #84]
 3762              	.L341:
3653:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3763              		.loc 1 3653 0
 3764 0028 A368     		ldr	r3, [r4, #8]
 3765 002a 33B9     		cbnz	r3, .L342
 3766              	.LBB6:
3655:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3767              		.loc 1 3655 0
ARM GAS  /tmp/ccefzn75.s 			page 144


 3768 002c 0193     		str	r3, [sp, #4]
 3769 002e 2368     		ldr	r3, [r4]
 3770 0030 DA68     		ldr	r2, [r3, #12]
 3771 0032 0192     		str	r2, [sp, #4]
 3772 0034 9B68     		ldr	r3, [r3, #8]
 3773 0036 0193     		str	r3, [sp, #4]
 3774 0038 019B     		ldr	r3, [sp, #4]
 3775              	.L342:
 3776              	.LBE6:
3657:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3777              		.loc 1 3657 0
 3778 003a 0123     		movs	r3, #1
 3779 003c 84F85130 		strb	r3, [r4, #81]
3675:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3780              		.loc 1 3675 0
 3781 0040 636D     		ldr	r3, [r4, #84]
 3782 0042 23B1     		cbz	r3, .L346
3690:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3783              		.loc 1 3690 0
 3784 0044 2046     		mov	r0, r4
 3785 0046 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3786              	.LVL308:
 3787              	.L340:
3696:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3788              		.loc 1 3696 0
 3789 004a 02B0     		add	sp, sp, #8
 3790              	.LCFI51:
 3791              		.cfi_remember_state
 3792              		.cfi_def_cfa_offset 8
 3793              		@ sp needed
 3794 004c 10BD     		pop	{r4, pc}
 3795              	.LVL309:
 3796              	.L346:
 3797              	.LCFI52:
 3798              		.cfi_restore_state
3681:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 3799              		.loc 1 3681 0
 3800 004e 2046     		mov	r0, r4
 3801 0050 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3802              	.LVL310:
 3803 0054 F9E7     		b	.L340
 3804              		.cfi_endproc
 3805              	.LFE123:
 3807              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 3808              		.align	1
 3809              		.syntax unified
 3810              		.thumb
 3811              		.thumb_func
 3812              		.fpu softvfp
 3814              	SPI_RxISR_8BIT:
 3815              	.LFB115:
3273:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 3816              		.loc 1 3273 0
 3817              		.cfi_startproc
 3818              		@ args = 0, pretend = 0, frame = 0
 3819              		@ frame_needed = 0, uses_anonymous_args = 0
 3820              	.LVL311:
ARM GAS  /tmp/ccefzn75.s 			page 145


 3821 0000 08B5     		push	{r3, lr}
 3822              	.LCFI53:
 3823              		.cfi_def_cfa_offset 8
 3824              		.cfi_offset 3, -8
 3825              		.cfi_offset 14, -4
3274:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 3826              		.loc 1 3274 0
 3827 0002 836B     		ldr	r3, [r0, #56]
 3828 0004 0268     		ldr	r2, [r0]
 3829 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 3830 0008 1A70     		strb	r2, [r3]
3275:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 3831              		.loc 1 3275 0
 3832 000a 836B     		ldr	r3, [r0, #56]
 3833 000c 0133     		adds	r3, r3, #1
 3834 000e 8363     		str	r3, [r0, #56]
3276:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3835              		.loc 1 3276 0
 3836 0010 C38F     		ldrh	r3, [r0, #62]
 3837 0012 9BB2     		uxth	r3, r3
 3838 0014 013B     		subs	r3, r3, #1
 3839 0016 9BB2     		uxth	r3, r3
 3840 0018 C387     		strh	r3, [r0, #62]	@ movhi
3286:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3841              		.loc 1 3286 0
 3842 001a C38F     		ldrh	r3, [r0, #62]
 3843 001c 9BB2     		uxth	r3, r3
 3844 001e 03B1     		cbz	r3, .L350
 3845              	.LVL312:
 3846              	.L347:
 3847 0020 08BD     		pop	{r3, pc}
 3848              	.LVL313:
 3849              	.L350:
3295:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3850              		.loc 1 3295 0
 3851 0022 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3852              	.LVL314:
3297:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3853              		.loc 1 3297 0
 3854 0026 FBE7     		b	.L347
 3855              		.cfi_endproc
 3856              	.LFE115:
 3858              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 3859              		.align	1
 3860              		.syntax unified
 3861              		.thumb
 3862              		.thumb_func
 3863              		.fpu softvfp
 3865              	SPI_RxISR_16BIT:
 3866              	.LFB116:
3325:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 3867              		.loc 1 3325 0
 3868              		.cfi_startproc
 3869              		@ args = 0, pretend = 0, frame = 0
 3870              		@ frame_needed = 0, uses_anonymous_args = 0
 3871              	.LVL315:
 3872 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccefzn75.s 			page 146


 3873              	.LCFI54:
 3874              		.cfi_def_cfa_offset 8
 3875              		.cfi_offset 3, -8
 3876              		.cfi_offset 14, -4
3326:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 3877              		.loc 1 3326 0
 3878 0002 836B     		ldr	r3, [r0, #56]
 3879 0004 0268     		ldr	r2, [r0]
 3880 0006 D268     		ldr	r2, [r2, #12]
 3881 0008 1A80     		strh	r2, [r3]	@ movhi
3327:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 3882              		.loc 1 3327 0
 3883 000a 836B     		ldr	r3, [r0, #56]
 3884 000c 0233     		adds	r3, r3, #2
 3885 000e 8363     		str	r3, [r0, #56]
3328:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3886              		.loc 1 3328 0
 3887 0010 C38F     		ldrh	r3, [r0, #62]
 3888 0012 9BB2     		uxth	r3, r3
 3889 0014 013B     		subs	r3, r3, #1
 3890 0016 9BB2     		uxth	r3, r3
 3891 0018 C387     		strh	r3, [r0, #62]	@ movhi
3338:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3892              		.loc 1 3338 0
 3893 001a C38F     		ldrh	r3, [r0, #62]
 3894 001c 9BB2     		uxth	r3, r3
 3895 001e 03B1     		cbz	r3, .L354
 3896              	.LVL316:
 3897              	.L351:
 3898 0020 08BD     		pop	{r3, pc}
 3899              	.LVL317:
 3900              	.L354:
3347:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3901              		.loc 1 3347 0
 3902 0022 FFF7FEFF 		bl	SPI_CloseRx_ISR
 3903              	.LVL318:
3349:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3904              		.loc 1 3349 0
 3905 0026 FBE7     		b	.L351
 3906              		.cfi_endproc
 3907              	.LFE116:
 3909              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 3910              		.align	1
 3911              		.syntax unified
 3912              		.thumb
 3913              		.thumb_func
 3914              		.fpu softvfp
 3916              	SPI_CloseRxTx_ISR:
 3917              	.LFB122:
3547:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 3918              		.loc 1 3547 0
 3919              		.cfi_startproc
 3920              		@ args = 0, pretend = 0, frame = 8
 3921              		@ frame_needed = 0, uses_anonymous_args = 0
 3922              	.LVL319:
 3923 0000 10B5     		push	{r4, lr}
 3924              	.LCFI55:
ARM GAS  /tmp/ccefzn75.s 			page 147


 3925              		.cfi_def_cfa_offset 8
 3926              		.cfi_offset 4, -8
 3927              		.cfi_offset 14, -4
 3928 0002 82B0     		sub	sp, sp, #8
 3929              	.LCFI56:
 3930              		.cfi_def_cfa_offset 16
 3931 0004 0446     		mov	r4, r0
3549:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3932              		.loc 1 3549 0
 3933 0006 284B     		ldr	r3, .L367
 3934 0008 1B68     		ldr	r3, [r3]
 3935 000a 284A     		ldr	r2, .L367+4
 3936 000c A2FB0323 		umull	r2, r3, r2, r3
 3937 0010 5B0A     		lsrs	r3, r3, #9
 3938 0012 6422     		movs	r2, #100
 3939 0014 02FB03F3 		mul	r3, r2, r3
 3940 0018 0193     		str	r3, [sp, #4]
3552:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3941              		.loc 1 3552 0
 3942 001a FFF7FEFF 		bl	HAL_GetTick
 3943              	.LVL320:
 3944 001e 0246     		mov	r2, r0
 3945              	.LVL321:
3555:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3946              		.loc 1 3555 0
 3947 0020 2168     		ldr	r1, [r4]
 3948 0022 4B68     		ldr	r3, [r1, #4]
 3949 0024 23F02003 		bic	r3, r3, #32
 3950 0028 4B60     		str	r3, [r1, #4]
 3951              	.L358:
3560:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3952              		.loc 1 3560 0
 3953 002a 019B     		ldr	r3, [sp, #4]
 3954 002c 43B1     		cbz	r3, .L365
3565:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3955              		.loc 1 3565 0
 3956 002e 019B     		ldr	r3, [sp, #4]
 3957 0030 013B     		subs	r3, r3, #1
 3958 0032 0193     		str	r3, [sp, #4]
3566:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 3959              		.loc 1 3566 0
 3960 0034 2368     		ldr	r3, [r4]
 3961 0036 9B68     		ldr	r3, [r3, #8]
 3962 0038 13F0020F 		tst	r3, #2
 3963 003c F5D0     		beq	.L358
 3964 003e 03E0     		b	.L357
 3965              	.L365:
3562:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
 3966              		.loc 1 3562 0
 3967 0040 636D     		ldr	r3, [r4, #84]
 3968 0042 43F02003 		orr	r3, r3, #32
 3969 0046 6365     		str	r3, [r4, #84]
 3970              	.L357:
3569:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3971              		.loc 1 3569 0
 3972 0048 6421     		movs	r1, #100
 3973 004a 2046     		mov	r0, r4
ARM GAS  /tmp/ccefzn75.s 			page 148


 3974              	.LVL322:
 3975 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3976              	.LVL323:
 3977 0050 18B1     		cbz	r0, .L359
3571:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3978              		.loc 1 3571 0
 3979 0052 636D     		ldr	r3, [r4, #84]
 3980 0054 43F02003 		orr	r3, r3, #32
 3981 0058 6365     		str	r3, [r4, #84]
 3982              	.L359:
3575:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 3983              		.loc 1 3575 0
 3984 005a A368     		ldr	r3, [r4, #8]
 3985 005c 33B9     		cbnz	r3, .L360
 3986              	.LBB7:
3577:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 3987              		.loc 1 3577 0
 3988 005e 0093     		str	r3, [sp]
 3989 0060 2368     		ldr	r3, [r4]
 3990 0062 DA68     		ldr	r2, [r3, #12]
 3991 0064 0092     		str	r2, [sp]
 3992 0066 9B68     		ldr	r3, [r3, #8]
 3993 0068 0093     		str	r3, [sp]
 3994 006a 009B     		ldr	r3, [sp]
 3995              	.L360:
 3996              	.LBE7:
3597:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 3997              		.loc 1 3597 0
 3998 006c 636D     		ldr	r3, [r4, #84]
 3999 006e 9BB9     		cbnz	r3, .L361
3599:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4000              		.loc 1 3599 0
 4001 0070 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4002 0074 DBB2     		uxtb	r3, r3
 4003 0076 042B     		cmp	r3, #4
 4004 0078 07D0     		beq	.L366
3611:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user TxRx complete callback */
 4005              		.loc 1 3611 0
 4006 007a 0123     		movs	r3, #1
 4007 007c 84F85130 		strb	r3, [r4, #81]
3616:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4008              		.loc 1 3616 0
 4009 0080 2046     		mov	r0, r4
 4010 0082 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4011              	.LVL324:
 4012              	.L355:
3633:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4013              		.loc 1 3633 0
 4014 0086 02B0     		add	sp, sp, #8
 4015              	.LCFI57:
 4016              		.cfi_remember_state
 4017              		.cfi_def_cfa_offset 8
 4018              		@ sp needed
 4019 0088 10BD     		pop	{r4, pc}
 4020              	.LVL325:
 4021              	.L366:
 4022              	.LCFI58:
ARM GAS  /tmp/ccefzn75.s 			page 149


 4023              		.cfi_restore_state
3601:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         /* Call user Rx complete callback */
 4024              		.loc 1 3601 0
 4025 008a 0123     		movs	r3, #1
 4026 008c 84F85130 		strb	r3, [r4, #81]
3606:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4027              		.loc 1 3606 0
 4028 0090 2046     		mov	r0, r4
 4029 0092 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4030              	.LVL326:
 4031 0096 F6E7     		b	.L355
 4032              	.L361:
3622:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Call user error callback */
 4033              		.loc 1 3622 0
 4034 0098 0123     		movs	r3, #1
 4035 009a 84F85130 		strb	r3, [r4, #81]
3627:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4036              		.loc 1 3627 0
 4037 009e 2046     		mov	r0, r4
 4038 00a0 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4039              	.LVL327:
3633:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4040              		.loc 1 3633 0
 4041 00a4 EFE7     		b	.L355
 4042              	.L368:
 4043 00a6 00BF     		.align	2
 4044              	.L367:
 4045 00a8 00000000 		.word	SystemCoreClock
 4046 00ac F1197605 		.word	91625969
 4047              		.cfi_endproc
 4048              	.LFE122:
 4050              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 4051              		.align	1
 4052              		.syntax unified
 4053              		.thumb
 4054              		.thumb_func
 4055              		.fpu softvfp
 4057              	SPI_2linesTxISR_8BIT:
 4058              	.LFB112:
3132:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4059              		.loc 1 3132 0
 4060              		.cfi_startproc
 4061              		@ args = 0, pretend = 0, frame = 0
 4062              		@ frame_needed = 0, uses_anonymous_args = 0
 4063              	.LVL328:
 4064 0000 08B5     		push	{r3, lr}
 4065              	.LCFI59:
 4066              		.cfi_def_cfa_offset 8
 4067              		.cfi_offset 3, -8
 4068              		.cfi_offset 14, -4
3133:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4069              		.loc 1 3133 0
 4070 0002 0368     		ldr	r3, [r0]
 4071 0004 026B     		ldr	r2, [r0, #48]
 4072 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4073 0008 1A73     		strb	r2, [r3, #12]
3134:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
ARM GAS  /tmp/ccefzn75.s 			page 150


 4074              		.loc 1 3134 0
 4075 000a 036B     		ldr	r3, [r0, #48]
 4076 000c 0133     		adds	r3, r3, #1
 4077 000e 0363     		str	r3, [r0, #48]
3135:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4078              		.loc 1 3135 0
 4079 0010 C38E     		ldrh	r3, [r0, #54]
 4080 0012 9BB2     		uxth	r3, r3
 4081 0014 013B     		subs	r3, r3, #1
 4082 0016 9BB2     		uxth	r3, r3
 4083 0018 C386     		strh	r3, [r0, #54]	@ movhi
3138:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4084              		.loc 1 3138 0
 4085 001a C38E     		ldrh	r3, [r0, #54]
 4086 001c 9BB2     		uxth	r3, r3
 4087 001e 3BB9     		cbnz	r3, .L369
3152:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4088              		.loc 1 3152 0
 4089 0020 0268     		ldr	r2, [r0]
 4090 0022 5368     		ldr	r3, [r2, #4]
 4091 0024 23F08003 		bic	r3, r3, #128
 4092 0028 5360     		str	r3, [r2, #4]
3154:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4093              		.loc 1 3154 0
 4094 002a C38F     		ldrh	r3, [r0, #62]
 4095 002c 9BB2     		uxth	r3, r3
 4096 002e 03B1     		cbz	r3, .L372
 4097              	.LVL329:
 4098              	.L369:
 4099 0030 08BD     		pop	{r3, pc}
 4100              	.LVL330:
 4101              	.L372:
3156:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4102              		.loc 1 3156 0
 4103 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4104              	.LVL331:
3159:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4105              		.loc 1 3159 0
 4106 0036 FBE7     		b	.L369
 4107              		.cfi_endproc
 4108              	.LFE112:
 4110              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 4111              		.align	1
 4112              		.syntax unified
 4113              		.thumb
 4114              		.thumb_func
 4115              		.fpu softvfp
 4117              	SPI_2linesRxISR_8BIT:
 4118              	.LFB111:
3076:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 8bit mode */
 4119              		.loc 1 3076 0
 4120              		.cfi_startproc
 4121              		@ args = 0, pretend = 0, frame = 0
 4122              		@ frame_needed = 0, uses_anonymous_args = 0
 4123              	.LVL332:
 4124 0000 08B5     		push	{r3, lr}
 4125              	.LCFI60:
ARM GAS  /tmp/ccefzn75.s 			page 151


 4126              		.cfi_def_cfa_offset 8
 4127              		.cfi_offset 3, -8
 4128              		.cfi_offset 14, -4
3078:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 4129              		.loc 1 3078 0
 4130 0002 836B     		ldr	r3, [r0, #56]
 4131 0004 0268     		ldr	r2, [r0]
 4132 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 4133 0008 1A70     		strb	r2, [r3]
3079:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 4134              		.loc 1 3079 0
 4135 000a 836B     		ldr	r3, [r0, #56]
 4136 000c 0133     		adds	r3, r3, #1
 4137 000e 8363     		str	r3, [r0, #56]
3080:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4138              		.loc 1 3080 0
 4139 0010 C38F     		ldrh	r3, [r0, #62]
 4140 0012 9BB2     		uxth	r3, r3
 4141 0014 013B     		subs	r3, r3, #1
 4142 0016 9BB2     		uxth	r3, r3
 4143 0018 C387     		strh	r3, [r0, #62]	@ movhi
3083:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4144              		.loc 1 3083 0
 4145 001a C38F     		ldrh	r3, [r0, #62]
 4146 001c 9BB2     		uxth	r3, r3
 4147 001e 3BB9     		cbnz	r3, .L373
3094:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4148              		.loc 1 3094 0
 4149 0020 0268     		ldr	r2, [r0]
 4150 0022 5368     		ldr	r3, [r2, #4]
 4151 0024 23F06003 		bic	r3, r3, #96
 4152 0028 5360     		str	r3, [r2, #4]
3096:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4153              		.loc 1 3096 0
 4154 002a C38E     		ldrh	r3, [r0, #54]
 4155 002c 9BB2     		uxth	r3, r3
 4156 002e 03B1     		cbz	r3, .L376
 4157              	.LVL333:
 4158              	.L373:
 4159 0030 08BD     		pop	{r3, pc}
 4160              	.LVL334:
 4161              	.L376:
3098:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4162              		.loc 1 3098 0
 4163 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4164              	.LVL335:
3101:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4165              		.loc 1 3101 0
 4166 0036 FBE7     		b	.L373
 4167              		.cfi_endproc
 4168              	.LFE111:
 4170              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 4171              		.align	1
 4172              		.syntax unified
 4173              		.thumb
 4174              		.thumb_func
 4175              		.fpu softvfp
ARM GAS  /tmp/ccefzn75.s 			page 152


 4177              	SPI_2linesTxISR_16BIT:
 4178              	.LFB114:
3220:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4179              		.loc 1 3220 0
 4180              		.cfi_startproc
 4181              		@ args = 0, pretend = 0, frame = 0
 4182              		@ frame_needed = 0, uses_anonymous_args = 0
 4183              	.LVL336:
 4184 0000 08B5     		push	{r3, lr}
 4185              	.LCFI61:
 4186              		.cfi_def_cfa_offset 8
 4187              		.cfi_offset 3, -8
 4188              		.cfi_offset 14, -4
3222:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4189              		.loc 1 3222 0
 4190 0002 0368     		ldr	r3, [r0]
 4191 0004 026B     		ldr	r2, [r0, #48]
 4192 0006 1288     		ldrh	r2, [r2]
 4193 0008 DA60     		str	r2, [r3, #12]
3223:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount--;
 4194              		.loc 1 3223 0
 4195 000a 036B     		ldr	r3, [r0, #48]
 4196 000c 0233     		adds	r3, r3, #2
 4197 000e 0363     		str	r3, [r0, #48]
3224:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4198              		.loc 1 3224 0
 4199 0010 C38E     		ldrh	r3, [r0, #54]
 4200 0012 9BB2     		uxth	r3, r3
 4201 0014 013B     		subs	r3, r3, #1
 4202 0016 9BB2     		uxth	r3, r3
 4203 0018 C386     		strh	r3, [r0, #54]	@ movhi
3227:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4204              		.loc 1 3227 0
 4205 001a C38E     		ldrh	r3, [r0, #54]
 4206 001c 9BB2     		uxth	r3, r3
 4207 001e 3BB9     		cbnz	r3, .L377
3241:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4208              		.loc 1 3241 0
 4209 0020 0268     		ldr	r2, [r0]
 4210 0022 5368     		ldr	r3, [r2, #4]
 4211 0024 23F08003 		bic	r3, r3, #128
 4212 0028 5360     		str	r3, [r2, #4]
3243:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4213              		.loc 1 3243 0
 4214 002a C38F     		ldrh	r3, [r0, #62]
 4215 002c 9BB2     		uxth	r3, r3
 4216 002e 03B1     		cbz	r3, .L380
 4217              	.LVL337:
 4218              	.L377:
 4219 0030 08BD     		pop	{r3, pc}
 4220              	.LVL338:
 4221              	.L380:
3245:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4222              		.loc 1 3245 0
 4223 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4224              	.LVL339:
3248:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccefzn75.s 			page 153


 4225              		.loc 1 3248 0
 4226 0036 FBE7     		b	.L377
 4227              		.cfi_endproc
 4228              	.LFE114:
 4230              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 4231              		.align	1
 4232              		.syntax unified
 4233              		.thumb
 4234              		.thumb_func
 4235              		.fpu softvfp
 4237              	SPI_2linesRxISR_16BIT:
 4238              	.LFB113:
3168:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 4239              		.loc 1 3168 0
 4240              		.cfi_startproc
 4241              		@ args = 0, pretend = 0, frame = 0
 4242              		@ frame_needed = 0, uses_anonymous_args = 0
 4243              	.LVL340:
 4244 0000 08B5     		push	{r3, lr}
 4245              	.LCFI62:
 4246              		.cfi_def_cfa_offset 8
 4247              		.cfi_offset 3, -8
 4248              		.cfi_offset 14, -4
3170:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4249              		.loc 1 3170 0
 4250 0002 836B     		ldr	r3, [r0, #56]
 4251 0004 0268     		ldr	r2, [r0]
 4252 0006 D268     		ldr	r2, [r2, #12]
 4253 0008 1A80     		strh	r2, [r3]	@ movhi
3171:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount--;
 4254              		.loc 1 3171 0
 4255 000a 836B     		ldr	r3, [r0, #56]
 4256 000c 0233     		adds	r3, r3, #2
 4257 000e 8363     		str	r3, [r0, #56]
3172:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4258              		.loc 1 3172 0
 4259 0010 C38F     		ldrh	r3, [r0, #62]
 4260 0012 9BB2     		uxth	r3, r3
 4261 0014 013B     		subs	r3, r3, #1
 4262 0016 9BB2     		uxth	r3, r3
 4263 0018 C387     		strh	r3, [r0, #62]	@ movhi
3174:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4264              		.loc 1 3174 0
 4265 001a C38F     		ldrh	r3, [r0, #62]
 4266 001c 9BB2     		uxth	r3, r3
 4267 001e 3BB9     		cbnz	r3, .L381
3185:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4268              		.loc 1 3185 0
 4269 0020 0268     		ldr	r2, [r0]
 4270 0022 5368     		ldr	r3, [r2, #4]
 4271 0024 23F04003 		bic	r3, r3, #64
 4272 0028 5360     		str	r3, [r2, #4]
3187:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4273              		.loc 1 3187 0
 4274 002a C38E     		ldrh	r3, [r0, #54]
 4275 002c 9BB2     		uxth	r3, r3
 4276 002e 03B1     		cbz	r3, .L384
ARM GAS  /tmp/ccefzn75.s 			page 154


 4277              	.LVL341:
 4278              	.L381:
 4279 0030 08BD     		pop	{r3, pc}
 4280              	.LVL342:
 4281              	.L384:
3189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4282              		.loc 1 3189 0
 4283 0032 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4284              	.LVL343:
3192:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4285              		.loc 1 3192 0
 4286 0036 FBE7     		b	.L381
 4287              		.cfi_endproc
 4288              	.LFE113:
 4290              		.section	.text.SPI_DMAError,"ax",%progbits
 4291              		.align	1
 4292              		.syntax unified
 4293              		.thumb
 4294              		.thumb_func
 4295              		.fpu softvfp
 4297              	SPI_DMAError:
 4298              	.LFB107:
2903:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4299              		.loc 1 2903 0
 4300              		.cfi_startproc
 4301              		@ args = 0, pretend = 0, frame = 0
 4302              		@ frame_needed = 0, uses_anonymous_args = 0
 4303              	.LVL344:
 4304 0000 08B5     		push	{r3, lr}
 4305              	.LCFI63:
 4306              		.cfi_def_cfa_offset 8
 4307              		.cfi_offset 3, -8
 4308              		.cfi_offset 14, -4
2904:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4309              		.loc 1 2904 0
 4310 0002 406A     		ldr	r0, [r0, #36]
 4311              	.LVL345:
2907:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4312              		.loc 1 2907 0
 4313 0004 0268     		ldr	r2, [r0]
 4314 0006 5368     		ldr	r3, [r2, #4]
 4315 0008 23F00303 		bic	r3, r3, #3
 4316 000c 5360     		str	r3, [r2, #4]
2909:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4317              		.loc 1 2909 0
 4318 000e 436D     		ldr	r3, [r0, #84]
 4319 0010 43F01003 		orr	r3, r3, #16
 4320 0014 4365     		str	r3, [r0, #84]
2910:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Call user error callback */
 4321              		.loc 1 2910 0
 4322 0016 0123     		movs	r3, #1
 4323 0018 80F85130 		strb	r3, [r0, #81]
2915:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4324              		.loc 1 2915 0
 4325 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4326              	.LVL346:
 4327 0020 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccefzn75.s 			page 155


 4328              		.cfi_endproc
 4329              	.LFE107:
 4331              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4332              		.align	1
 4333              		.syntax unified
 4334              		.thumb
 4335              		.thumb_func
 4336              		.fpu softvfp
 4338              	SPI_DMATransmitCplt:
 4339              	.LFB101:
2642:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4340              		.loc 1 2642 0
 4341              		.cfi_startproc
 4342              		@ args = 0, pretend = 0, frame = 8
 4343              		@ frame_needed = 0, uses_anonymous_args = 0
 4344              	.LVL347:
 4345 0000 30B5     		push	{r4, r5, lr}
 4346              	.LCFI64:
 4347              		.cfi_def_cfa_offset 12
 4348              		.cfi_offset 4, -12
 4349              		.cfi_offset 5, -8
 4350              		.cfi_offset 14, -4
 4351 0002 83B0     		sub	sp, sp, #12
 4352              	.LCFI65:
 4353              		.cfi_def_cfa_offset 24
 4354 0004 0546     		mov	r5, r0
2643:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 4355              		.loc 1 2643 0
 4356 0006 446A     		ldr	r4, [r0, #36]
 4357              	.LVL348:
2647:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4358              		.loc 1 2647 0
 4359 0008 FFF7FEFF 		bl	HAL_GetTick
 4360              	.LVL349:
2650:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4361              		.loc 1 2650 0
 4362 000c 2B68     		ldr	r3, [r5]
 4363 000e 1B68     		ldr	r3, [r3]
 4364 0010 13F0200F 		tst	r3, #32
 4365 0014 23D1     		bne	.L388
2653:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4366              		.loc 1 2653 0
 4367 0016 2268     		ldr	r2, [r4]
 4368 0018 5368     		ldr	r3, [r2, #4]
 4369 001a 23F02003 		bic	r3, r3, #32
 4370 001e 5360     		str	r3, [r2, #4]
2656:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4371              		.loc 1 2656 0
 4372 0020 2268     		ldr	r2, [r4]
 4373 0022 5368     		ldr	r3, [r2, #4]
 4374 0024 23F00203 		bic	r3, r3, #2
 4375 0028 5360     		str	r3, [r2, #4]
2659:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4376              		.loc 1 2659 0
 4377 002a 0246     		mov	r2, r0
 4378 002c 6421     		movs	r1, #100
 4379 002e 2046     		mov	r0, r4
ARM GAS  /tmp/ccefzn75.s 			page 156


 4380              	.LVL350:
 4381 0030 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4382              	.LVL351:
 4383 0034 18B1     		cbz	r0, .L389
2661:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4384              		.loc 1 2661 0
 4385 0036 636D     		ldr	r3, [r4, #84]
 4386 0038 43F02003 		orr	r3, r3, #32
 4387 003c 6365     		str	r3, [r4, #84]
 4388              	.L389:
2665:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4389              		.loc 1 2665 0
 4390 003e A368     		ldr	r3, [r4, #8]
 4391 0040 33B9     		cbnz	r3, .L390
 4392              	.LBB8:
2667:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4393              		.loc 1 2667 0
 4394 0042 0193     		str	r3, [sp, #4]
 4395 0044 2368     		ldr	r3, [r4]
 4396 0046 DA68     		ldr	r2, [r3, #12]
 4397 0048 0192     		str	r2, [sp, #4]
 4398 004a 9B68     		ldr	r3, [r3, #8]
 4399 004c 0193     		str	r3, [sp, #4]
 4400 004e 019B     		ldr	r3, [sp, #4]
 4401              	.L390:
 4402              	.LBE8:
2670:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4403              		.loc 1 2670 0
 4404 0050 0023     		movs	r3, #0
 4405 0052 E386     		strh	r3, [r4, #54]	@ movhi
2671:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4406              		.loc 1 2671 0
 4407 0054 0123     		movs	r3, #1
 4408 0056 84F85130 		strb	r3, [r4, #81]
2673:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4409              		.loc 1 2673 0
 4410 005a 636D     		ldr	r3, [r4, #84]
 4411 005c 23B9     		cbnz	r3, .L393
 4412              	.L388:
2688:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4413              		.loc 1 2688 0
 4414 005e 2046     		mov	r0, r4
 4415 0060 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4416              	.LVL352:
 4417              	.L387:
2690:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4418              		.loc 1 2690 0
 4419 0064 03B0     		add	sp, sp, #12
 4420              	.LCFI66:
 4421              		.cfi_remember_state
 4422              		.cfi_def_cfa_offset 12
 4423              		@ sp needed
 4424 0066 30BD     		pop	{r4, r5, pc}
 4425              	.LVL353:
 4426              	.L393:
 4427              	.LCFI67:
 4428              		.cfi_restore_state
ARM GAS  /tmp/ccefzn75.s 			page 157


2679:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4429              		.loc 1 2679 0
 4430 0068 2046     		mov	r0, r4
 4431 006a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4432              	.LVL354:
2681:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4433              		.loc 1 2681 0
 4434 006e F9E7     		b	.L387
 4435              		.cfi_endproc
 4436              	.LFE101:
 4438              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4439              		.align	1
 4440              		.syntax unified
 4441              		.thumb
 4442              		.thumb_func
 4443              		.fpu softvfp
 4445              	SPI_DMAReceiveCplt:
 4446              	.LFB102:
2699:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4447              		.loc 1 2699 0
 4448              		.cfi_startproc
 4449              		@ args = 0, pretend = 0, frame = 0
 4450              		@ frame_needed = 0, uses_anonymous_args = 0
 4451              	.LVL355:
 4452 0000 38B5     		push	{r3, r4, r5, lr}
 4453              	.LCFI68:
 4454              		.cfi_def_cfa_offset 16
 4455              		.cfi_offset 3, -16
 4456              		.cfi_offset 4, -12
 4457              		.cfi_offset 5, -8
 4458              		.cfi_offset 14, -4
 4459 0002 0546     		mov	r5, r0
2700:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 4460              		.loc 1 2700 0
 4461 0004 446A     		ldr	r4, [r0, #36]
 4462              	.LVL356:
2704:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4463              		.loc 1 2704 0
 4464 0006 FFF7FEFF 		bl	HAL_GetTick
 4465              	.LVL357:
2707:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4466              		.loc 1 2707 0
 4467 000a 2B68     		ldr	r3, [r5]
 4468 000c 1B68     		ldr	r3, [r3]
 4469 000e 13F0200F 		tst	r3, #32
 4470 0012 18D1     		bne	.L395
2710:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4471              		.loc 1 2710 0
 4472 0014 2268     		ldr	r2, [r4]
 4473 0016 5368     		ldr	r3, [r2, #4]
 4474 0018 23F02003 		bic	r3, r3, #32
 4475 001c 5360     		str	r3, [r2, #4]
2728:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4476              		.loc 1 2728 0
 4477 001e 2268     		ldr	r2, [r4]
 4478 0020 5368     		ldr	r3, [r2, #4]
 4479 0022 23F00303 		bic	r3, r3, #3
ARM GAS  /tmp/ccefzn75.s 			page 158


 4480 0026 5360     		str	r3, [r2, #4]
2731:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4481              		.loc 1 2731 0
 4482 0028 0246     		mov	r2, r0
 4483 002a 6421     		movs	r1, #100
 4484 002c 2046     		mov	r0, r4
 4485              	.LVL358:
 4486 002e FFF7FEFF 		bl	SPI_EndRxTransaction
 4487              	.LVL359:
 4488 0032 08B1     		cbz	r0, .L396
2733:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4489              		.loc 1 2733 0
 4490 0034 2023     		movs	r3, #32
 4491 0036 6365     		str	r3, [r4, #84]
 4492              	.L396:
2736:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4493              		.loc 1 2736 0
 4494 0038 0023     		movs	r3, #0
 4495 003a E387     		strh	r3, [r4, #62]	@ movhi
2737:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4496              		.loc 1 2737 0
 4497 003c 0123     		movs	r3, #1
 4498 003e 84F85130 		strb	r3, [r4, #81]
2748:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4499              		.loc 1 2748 0
 4500 0042 636D     		ldr	r3, [r4, #84]
 4501 0044 1BB9     		cbnz	r3, .L399
 4502              	.L395:
2763:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4503              		.loc 1 2763 0
 4504 0046 2046     		mov	r0, r4
 4505 0048 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4506              	.LVL360:
 4507 004c 38BD     		pop	{r3, r4, r5, pc}
 4508              	.LVL361:
 4509              	.L399:
2754:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4510              		.loc 1 2754 0
 4511 004e 2046     		mov	r0, r4
 4512 0050 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4513              	.LVL362:
2756:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4514              		.loc 1 2756 0
 4515 0054 38BD     		pop	{r3, r4, r5, pc}
 4516              		.cfi_endproc
 4517              	.LFE102:
 4519              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 4520              		.align	1
 4521              		.syntax unified
 4522              		.thumb
 4523              		.thumb_func
 4524              		.fpu softvfp
 4526              	SPI_DMATransmitReceiveCplt:
 4527              	.LFB103:
2774:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4528              		.loc 1 2774 0
 4529              		.cfi_startproc
ARM GAS  /tmp/ccefzn75.s 			page 159


 4530              		@ args = 0, pretend = 0, frame = 0
 4531              		@ frame_needed = 0, uses_anonymous_args = 0
 4532              	.LVL363:
 4533 0000 38B5     		push	{r3, r4, r5, lr}
 4534              	.LCFI69:
 4535              		.cfi_def_cfa_offset 16
 4536              		.cfi_offset 3, -16
 4537              		.cfi_offset 4, -12
 4538              		.cfi_offset 5, -8
 4539              		.cfi_offset 14, -4
 4540 0002 0546     		mov	r5, r0
2775:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t tickstart;
 4541              		.loc 1 2775 0
 4542 0004 446A     		ldr	r4, [r0, #36]
 4543              	.LVL364:
2779:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4544              		.loc 1 2779 0
 4545 0006 FFF7FEFF 		bl	HAL_GetTick
 4546              	.LVL365:
2782:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4547              		.loc 1 2782 0
 4548 000a 2B68     		ldr	r3, [r5]
 4549 000c 1B68     		ldr	r3, [r3]
 4550 000e 13F0200F 		tst	r3, #32
 4551 0012 1BD1     		bne	.L401
2785:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4552              		.loc 1 2785 0
 4553 0014 2268     		ldr	r2, [r4]
 4554 0016 5368     		ldr	r3, [r2, #4]
 4555 0018 23F02003 		bic	r3, r3, #32
 4556 001c 5360     		str	r3, [r2, #4]
2802:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4557              		.loc 1 2802 0
 4558 001e 0246     		mov	r2, r0
 4559 0020 6421     		movs	r1, #100
 4560 0022 2046     		mov	r0, r4
 4561              	.LVL366:
 4562 0024 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4563              	.LVL367:
 4564 0028 18B1     		cbz	r0, .L402
2804:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4565              		.loc 1 2804 0
 4566 002a 636D     		ldr	r3, [r4, #84]
 4567 002c 43F02003 		orr	r3, r3, #32
 4568 0030 6365     		str	r3, [r4, #84]
 4569              	.L402:
2808:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4570              		.loc 1 2808 0
 4571 0032 2268     		ldr	r2, [r4]
 4572 0034 5368     		ldr	r3, [r2, #4]
 4573 0036 23F00303 		bic	r3, r3, #3
 4574 003a 5360     		str	r3, [r2, #4]
2810:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4575              		.loc 1 2810 0
 4576 003c 0023     		movs	r3, #0
 4577 003e E386     		strh	r3, [r4, #54]	@ movhi
2811:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/ccefzn75.s 			page 160


 4578              		.loc 1 2811 0
 4579 0040 E387     		strh	r3, [r4, #62]	@ movhi
2812:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4580              		.loc 1 2812 0
 4581 0042 0123     		movs	r3, #1
 4582 0044 84F85130 		strb	r3, [r4, #81]
2823:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4583              		.loc 1 2823 0
 4584 0048 636D     		ldr	r3, [r4, #84]
 4585 004a 1BB9     		cbnz	r3, .L405
 4586              	.L401:
2838:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4587              		.loc 1 2838 0
 4588 004c 2046     		mov	r0, r4
 4589 004e FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4590              	.LVL368:
 4591 0052 38BD     		pop	{r3, r4, r5, pc}
 4592              	.LVL369:
 4593              	.L405:
2829:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4594              		.loc 1 2829 0
 4595 0054 2046     		mov	r0, r4
 4596 0056 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4597              	.LVL370:
2831:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4598              		.loc 1 2831 0
 4599 005a 38BD     		pop	{r3, r4, r5, pc}
 4600              		.cfi_endproc
 4601              	.LFE103:
 4603              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4604              		.align	1
 4605              		.global	HAL_SPI_IRQHandler
 4606              		.syntax unified
 4607              		.thumb
 4608              		.thumb_func
 4609              		.fpu softvfp
 4611              	HAL_SPI_IRQHandler:
 4612              	.LFB90:
2342:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4613              		.loc 1 2342 0
 4614              		.cfi_startproc
 4615              		@ args = 0, pretend = 0, frame = 16
 4616              		@ frame_needed = 0, uses_anonymous_args = 0
 4617              	.LVL371:
 4618 0000 10B5     		push	{r4, lr}
 4619              	.LCFI70:
 4620              		.cfi_def_cfa_offset 8
 4621              		.cfi_offset 4, -8
 4622              		.cfi_offset 14, -4
 4623 0002 84B0     		sub	sp, sp, #16
 4624              	.LCFI71:
 4625              		.cfi_def_cfa_offset 24
 4626 0004 0446     		mov	r4, r0
2343:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4627              		.loc 1 2343 0
 4628 0006 0268     		ldr	r2, [r0]
 4629 0008 5168     		ldr	r1, [r2, #4]
ARM GAS  /tmp/ccefzn75.s 			page 161


 4630              	.LVL372:
2344:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4631              		.loc 1 2344 0
 4632 000a 9368     		ldr	r3, [r2, #8]
 4633              	.LVL373:
2347:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4634              		.loc 1 2347 0
 4635 000c 03F04100 		and	r0, r3, #65
 4636              	.LVL374:
 4637 0010 0128     		cmp	r0, #1
 4638 0012 5AD0     		beq	.L416
 4639              	.L407:
2355:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4640              		.loc 1 2355 0
 4641 0014 13F0020F 		tst	r3, #2
 4642 0018 02D0     		beq	.L409
2355:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4643              		.loc 1 2355 0 is_stmt 0 discriminator 1
 4644 001a 11F0800F 		tst	r1, #128
 4645 001e 5BD1     		bne	.L417
 4646              	.L409:
2366:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****        && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 4647              		.loc 1 2366 0 is_stmt 1
 4648 0020 13F0600F 		tst	r3, #96
 4649 0024 5BD0     		beq	.L406
2367:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif
 4650              		.loc 1 2367 0
 4651 0026 11F0200F 		tst	r1, #32
 4652 002a 58D0     		beq	.L406
2371:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4653              		.loc 1 2371 0
 4654 002c 13F0400F 		tst	r3, #64
 4655 0030 0FD0     		beq	.L410
2373:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4656              		.loc 1 2373 0
 4657 0032 94F85100 		ldrb	r0, [r4, #81]	@ zero_extendqisi2
 4658 0036 C0B2     		uxtb	r0, r0
 4659 0038 0328     		cmp	r0, #3
 4660 003a 52D0     		beq	.L411
2375:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4661              		.loc 1 2375 0
 4662 003c 606D     		ldr	r0, [r4, #84]
 4663 003e 40F00400 		orr	r0, r0, #4
 4664 0042 6065     		str	r0, [r4, #84]
 4665              	.LBB9:
2376:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4666              		.loc 1 2376 0
 4667 0044 0020     		movs	r0, #0
 4668 0046 0190     		str	r0, [sp, #4]
 4669 0048 D068     		ldr	r0, [r2, #12]
 4670 004a 0190     		str	r0, [sp, #4]
 4671 004c 9068     		ldr	r0, [r2, #8]
 4672 004e 0190     		str	r0, [sp, #4]
 4673 0050 0198     		ldr	r0, [sp, #4]
 4674              	.L410:
 4675              	.LBE9:
2386:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccefzn75.s 			page 162


 4676              		.loc 1 2386 0
 4677 0052 13F0200F 		tst	r3, #32
 4678 0056 0CD0     		beq	.L412
2388:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4679              		.loc 1 2388 0
 4680 0058 636D     		ldr	r3, [r4, #84]
 4681              	.LVL375:
 4682 005a 43F00103 		orr	r3, r3, #1
 4683 005e 6365     		str	r3, [r4, #84]
 4684              	.LBB10:
2389:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4685              		.loc 1 2389 0
 4686 0060 0023     		movs	r3, #0
 4687 0062 0393     		str	r3, [sp, #12]
 4688 0064 9368     		ldr	r3, [r2, #8]
 4689 0066 0393     		str	r3, [sp, #12]
 4690 0068 1368     		ldr	r3, [r2]
 4691 006a 23F04003 		bic	r3, r3, #64
 4692 006e 1360     		str	r3, [r2]
 4693 0070 039B     		ldr	r3, [sp, #12]
 4694              	.L412:
 4695              	.LBE10:
2401:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4696              		.loc 1 2401 0
 4697 0072 636D     		ldr	r3, [r4, #84]
 4698 0074 002B     		cmp	r3, #0
 4699 0076 32D0     		beq	.L406
2404:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4700              		.loc 1 2404 0
 4701 0078 2268     		ldr	r2, [r4]
 4702 007a 5368     		ldr	r3, [r2, #4]
 4703 007c 23F0E003 		bic	r3, r3, #224
 4704 0080 5360     		str	r3, [r2, #4]
2406:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 4705              		.loc 1 2406 0
 4706 0082 0123     		movs	r3, #1
 4707 0084 84F85130 		strb	r3, [r4, #81]
2408:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4708              		.loc 1 2408 0
 4709 0088 11F0030F 		tst	r1, #3
 4710 008c 31D0     		beq	.L413
2410:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4711              		.loc 1 2410 0
 4712 008e 2268     		ldr	r2, [r4]
 4713 0090 5368     		ldr	r3, [r2, #4]
 4714 0092 23F00303 		bic	r3, r3, #3
 4715 0096 5360     		str	r3, [r2, #4]
2413:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 4716              		.loc 1 2413 0
 4717 0098 E36C     		ldr	r3, [r4, #76]
 4718 009a 4BB1     		cbz	r3, .L414
2417:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 4719              		.loc 1 2417 0
 4720 009c 174A     		ldr	r2, .L418
 4721 009e 5A63     		str	r2, [r3, #52]
2418:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
 4722              		.loc 1 2418 0
ARM GAS  /tmp/ccefzn75.s 			page 163


 4723 00a0 E06C     		ldr	r0, [r4, #76]
 4724 00a2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4725              	.LVL376:
 4726 00a6 18B1     		cbz	r0, .L414
2420:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
 4727              		.loc 1 2420 0
 4728 00a8 636D     		ldr	r3, [r4, #84]
 4729 00aa 43F04003 		orr	r3, r3, #64
 4730 00ae 6365     		str	r3, [r4, #84]
 4731              	.L414:
2424:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         {
 4732              		.loc 1 2424 0
 4733 00b0 A36C     		ldr	r3, [r4, #72]
 4734 00b2 A3B1     		cbz	r3, .L406
2428:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 4735              		.loc 1 2428 0
 4736 00b4 114A     		ldr	r2, .L418
 4737 00b6 5A63     		str	r2, [r3, #52]
2429:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           {
 4738              		.loc 1 2429 0
 4739 00b8 A06C     		ldr	r0, [r4, #72]
 4740 00ba FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4741              	.LVL377:
 4742 00be 70B1     		cbz	r0, .L406
2431:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****           }
 4743              		.loc 1 2431 0
 4744 00c0 636D     		ldr	r3, [r4, #84]
 4745 00c2 43F04003 		orr	r3, r3, #64
 4746 00c6 6365     		str	r3, [r4, #84]
 4747 00c8 09E0     		b	.L406
 4748              	.LVL378:
 4749              	.L416:
2348:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4750              		.loc 1 2348 0
 4751 00ca 11F0400F 		tst	r1, #64
 4752 00ce A1D0     		beq	.L407
2350:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
 4753              		.loc 1 2350 0
 4754 00d0 236C     		ldr	r3, [r4, #64]
 4755              	.LVL379:
 4756 00d2 2046     		mov	r0, r4
 4757 00d4 9847     		blx	r3
 4758              	.LVL380:
2351:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4759              		.loc 1 2351 0
 4760 00d6 02E0     		b	.L406
 4761              	.LVL381:
 4762              	.L417:
2357:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     return;
 4763              		.loc 1 2357 0
 4764 00d8 636C     		ldr	r3, [r4, #68]
 4765              	.LVL382:
 4766 00da 2046     		mov	r0, r4
 4767 00dc 9847     		blx	r3
 4768              	.LVL383:
 4769              	.L406:
2447:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
ARM GAS  /tmp/ccefzn75.s 			page 164


 4770              		.loc 1 2447 0
 4771 00de 04B0     		add	sp, sp, #16
 4772              	.LCFI72:
 4773              		.cfi_remember_state
 4774              		.cfi_def_cfa_offset 8
 4775              		@ sp needed
 4776 00e0 10BD     		pop	{r4, pc}
 4777              	.LVL384:
 4778              	.L411:
 4779              	.LCFI73:
 4780              		.cfi_restore_state
 4781              	.LBB11:
2380:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         return;
 4782              		.loc 1 2380 0
 4783 00e2 0023     		movs	r3, #0
 4784              	.LVL385:
 4785 00e4 0293     		str	r3, [sp, #8]
 4786 00e6 D368     		ldr	r3, [r2, #12]
 4787 00e8 0293     		str	r3, [sp, #8]
 4788 00ea 9368     		ldr	r3, [r2, #8]
 4789 00ec 0293     		str	r3, [sp, #8]
 4790 00ee 029B     		ldr	r3, [sp, #8]
 4791              	.LBE11:
2381:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 4792              		.loc 1 2381 0
 4793 00f0 F5E7     		b	.L406
 4794              	.L413:
2441:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4795              		.loc 1 2441 0
 4796 00f2 2046     		mov	r0, r4
 4797 00f4 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4798              	.LVL386:
 4799 00f8 F1E7     		b	.L406
 4800              	.L419:
 4801 00fa 00BF     		.align	2
 4802              	.L418:
 4803 00fc 00000000 		.word	SPI_DMAAbortOnError
 4804              		.cfi_endproc
 4805              	.LFE90:
 4807              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 4808              		.align	1
 4809              		.syntax unified
 4810              		.thumb
 4811              		.thumb_func
 4812              		.fpu softvfp
 4814              	SPI_DMAAbortOnError:
 4815              	.LFB108:
2926:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4816              		.loc 1 2926 0
 4817              		.cfi_startproc
 4818              		@ args = 0, pretend = 0, frame = 0
 4819              		@ frame_needed = 0, uses_anonymous_args = 0
 4820              	.LVL387:
 4821 0000 08B5     		push	{r3, lr}
 4822              	.LCFI74:
 4823              		.cfi_def_cfa_offset 8
 4824              		.cfi_offset 3, -8
ARM GAS  /tmp/ccefzn75.s 			page 165


 4825              		.cfi_offset 14, -4
2927:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 4826              		.loc 1 2927 0
 4827 0002 406A     		ldr	r0, [r0, #36]
 4828              	.LVL388:
2928:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 4829              		.loc 1 2928 0
 4830 0004 0023     		movs	r3, #0
 4831 0006 C387     		strh	r3, [r0, #62]	@ movhi
2929:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4832              		.loc 1 2929 0
 4833 0008 C386     		strh	r3, [r0, #54]	@ movhi
2935:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4834              		.loc 1 2935 0
 4835 000a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4836              	.LVL389:
 4837 000e 08BD     		pop	{r3, pc}
 4838              		.cfi_endproc
 4839              	.LFE108:
 4841              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4842              		.align	1
 4843              		.weak	HAL_SPI_AbortCpltCallback
 4844              		.syntax unified
 4845              		.thumb
 4846              		.thumb_func
 4847              		.fpu softvfp
 4849              	HAL_SPI_AbortCpltCallback:
 4850              	.LFB98:
2570:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4851              		.loc 1 2570 0
 4852              		.cfi_startproc
 4853              		@ args = 0, pretend = 0, frame = 0
 4854              		@ frame_needed = 0, uses_anonymous_args = 0
 4855              		@ link register save eliminated.
 4856              	.LVL390:
 4857 0000 7047     		bx	lr
 4858              		.cfi_endproc
 4859              	.LFE98:
 4861              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 4862              		.align	1
 4863              		.global	HAL_SPI_Abort_IT
 4864              		.syntax unified
 4865              		.thumb
 4866              		.thumb_func
 4867              		.fpu softvfp
 4869              	HAL_SPI_Abort_IT:
 4870              	.LFB86:
2099:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4871              		.loc 1 2099 0
 4872              		.cfi_startproc
 4873              		@ args = 0, pretend = 0, frame = 16
 4874              		@ frame_needed = 0, uses_anonymous_args = 0
 4875              	.LVL391:
2099:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 4876              		.loc 1 2099 0
 4877 0000 30B5     		push	{r4, r5, lr}
 4878              	.LCFI75:
ARM GAS  /tmp/ccefzn75.s 			page 166


 4879              		.cfi_def_cfa_offset 12
 4880              		.cfi_offset 4, -12
 4881              		.cfi_offset 5, -8
 4882              		.cfi_offset 14, -4
 4883 0002 85B0     		sub	sp, sp, #20
 4884              	.LCFI76:
 4885              		.cfi_def_cfa_offset 32
 4886 0004 0446     		mov	r4, r0
 4887              	.LVL392:
2108:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = resetcount;
 4888              		.loc 1 2108 0
 4889 0006 4E4B     		ldr	r3, .L450
 4890 0008 1B68     		ldr	r3, [r3]
 4891 000a 4E4A     		ldr	r2, .L450+4
 4892 000c A2FB0323 		umull	r2, r3, r2, r3
 4893 0010 5B0A     		lsrs	r3, r3, #9
 4894 0012 6422     		movs	r2, #100
 4895 0014 02FB03F3 		mul	r3, r2, r3
 4896 0018 0293     		str	r3, [sp, #8]
2109:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4897              		.loc 1 2109 0
 4898 001a 029B     		ldr	r3, [sp, #8]
 4899 001c 0393     		str	r3, [sp, #12]
2112:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 4900              		.loc 1 2112 0
 4901 001e 0268     		ldr	r2, [r0]
 4902 0020 5368     		ldr	r3, [r2, #4]
 4903 0022 23F02003 		bic	r3, r3, #32
 4904 0026 5360     		str	r3, [r2, #4]
2115:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4905              		.loc 1 2115 0
 4906 0028 0268     		ldr	r2, [r0]
 4907 002a 5368     		ldr	r3, [r2, #4]
 4908 002c 13F0800F 		tst	r3, #128
 4909 0030 12D0     		beq	.L424
2117:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4910              		.loc 1 2117 0
 4911 0032 454B     		ldr	r3, .L450+8
 4912 0034 4364     		str	r3, [r0, #68]
 4913              	.L427:
2121:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4914              		.loc 1 2121 0
 4915 0036 039B     		ldr	r3, [sp, #12]
 4916 0038 43B1     		cbz	r3, .L447
2126:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4917              		.loc 1 2126 0
 4918 003a 039B     		ldr	r3, [sp, #12]
 4919 003c 013B     		subs	r3, r3, #1
 4920 003e 0393     		str	r3, [sp, #12]
2127:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 4921              		.loc 1 2127 0
 4922 0040 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4923 0044 DBB2     		uxtb	r3, r3
 4924 0046 072B     		cmp	r3, #7
 4925 0048 F5D1     		bne	.L427
 4926 004a 03E0     		b	.L426
 4927              	.L447:
ARM GAS  /tmp/ccefzn75.s 			page 167


2123:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 4928              		.loc 1 2123 0
 4929 004c 636D     		ldr	r3, [r4, #84]
 4930 004e 43F04003 		orr	r3, r3, #64
 4931 0052 6365     		str	r3, [r4, #84]
 4932              	.L426:
2129:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4933              		.loc 1 2129 0
 4934 0054 029B     		ldr	r3, [sp, #8]
 4935 0056 0393     		str	r3, [sp, #12]
 4936              	.L424:
2132:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4937              		.loc 1 2132 0
 4938 0058 5368     		ldr	r3, [r2, #4]
 4939 005a 13F0400F 		tst	r3, #64
 4940 005e 12D0     		beq	.L428
2134:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 4941              		.loc 1 2134 0
 4942 0060 3A4B     		ldr	r3, .L450+12
 4943 0062 2364     		str	r3, [r4, #64]
 4944              	.L431:
2138:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 4945              		.loc 1 2138 0
 4946 0064 039B     		ldr	r3, [sp, #12]
 4947 0066 43B1     		cbz	r3, .L448
2143:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 4948              		.loc 1 2143 0
 4949 0068 039B     		ldr	r3, [sp, #12]
 4950 006a 013B     		subs	r3, r3, #1
 4951 006c 0393     		str	r3, [sp, #12]
2144:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     /* Reset Timeout Counter */
 4952              		.loc 1 2144 0
 4953 006e 94F85130 		ldrb	r3, [r4, #81]	@ zero_extendqisi2
 4954 0072 DBB2     		uxtb	r3, r3
 4955 0074 072B     		cmp	r3, #7
 4956 0076 F5D1     		bne	.L431
 4957 0078 03E0     		b	.L430
 4958              	.L448:
2140:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         break;
 4959              		.loc 1 2140 0
 4960 007a 636D     		ldr	r3, [r4, #84]
 4961 007c 43F04003 		orr	r3, r3, #64
 4962 0080 6365     		str	r3, [r4, #84]
 4963              	.L430:
2146:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 4964              		.loc 1 2146 0
 4965 0082 029B     		ldr	r3, [sp, #8]
 4966 0084 0393     		str	r3, [sp, #12]
 4967              	.L428:
2152:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4968              		.loc 1 2152 0
 4969 0086 A36C     		ldr	r3, [r4, #72]
 4970 0088 2BB1     		cbz	r3, .L432
2156:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4971              		.loc 1 2156 0
 4972 008a 5268     		ldr	r2, [r2, #4]
 4973 008c 12F0020F 		tst	r2, #2
ARM GAS  /tmp/ccefzn75.s 			page 168


 4974 0090 1BD0     		beq	.L433
2158:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4975              		.loc 1 2158 0
 4976 0092 2F4A     		ldr	r2, .L450+16
 4977 0094 5A63     		str	r2, [r3, #52]
 4978              	.L432:
2166:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4979              		.loc 1 2166 0
 4980 0096 E36C     		ldr	r3, [r4, #76]
 4981 0098 33B1     		cbz	r3, .L434
2170:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4982              		.loc 1 2170 0
 4983 009a 2268     		ldr	r2, [r4]
 4984 009c 5268     		ldr	r2, [r2, #4]
 4985 009e 12F0010F 		tst	r2, #1
 4986 00a2 15D0     		beq	.L435
2172:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 4987              		.loc 1 2172 0
 4988 00a4 2B4A     		ldr	r2, .L450+20
 4989 00a6 5A63     		str	r2, [r3, #52]
 4990              	.L434:
2181:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 4991              		.loc 1 2181 0
 4992 00a8 2368     		ldr	r3, [r4]
 4993 00aa 5B68     		ldr	r3, [r3, #4]
 4994 00ac 13F0020F 		tst	r3, #2
 4995 00b0 11D0     		beq	.L440
2184:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 4996              		.loc 1 2184 0
 4997 00b2 A06C     		ldr	r0, [r4, #72]
 4998              	.LVL393:
 4999 00b4 20B3     		cbz	r0, .L441
2187:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 5000              		.loc 1 2187 0
 5001 00b6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5002              	.LVL394:
 5003 00ba 18B3     		cbz	r0, .L442
2189:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5004              		.loc 1 2189 0
 5005 00bc A36C     		ldr	r3, [r4, #72]
 5006 00be 0022     		movs	r2, #0
 5007 00c0 5A63     		str	r2, [r3, #52]
2190:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 5008              		.loc 1 2190 0
 5009 00c2 4023     		movs	r3, #64
 5010 00c4 6365     		str	r3, [r4, #84]
2107:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5011              		.loc 1 2107 0
 5012 00c6 0125     		movs	r5, #1
 5013 00c8 06E0     		b	.L436
 5014              	.LVL395:
 5015              	.L433:
2162:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5016              		.loc 1 2162 0
 5017 00ca 0022     		movs	r2, #0
 5018 00cc 5A63     		str	r2, [r3, #52]
 5019 00ce E2E7     		b	.L432
ARM GAS  /tmp/ccefzn75.s 			page 169


 5020              	.L435:
2176:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5021              		.loc 1 2176 0
 5022 00d0 0022     		movs	r2, #0
 5023 00d2 5A63     		str	r2, [r3, #52]
 5024 00d4 E8E7     		b	.L434
 5025              	.L440:
2107:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5026              		.loc 1 2107 0
 5027 00d6 0125     		movs	r5, #1
 5028              	.LVL396:
 5029              	.L436:
2199:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5030              		.loc 1 2199 0
 5031 00d8 2368     		ldr	r3, [r4]
 5032 00da 5B68     		ldr	r3, [r3, #4]
 5033 00dc 13F0010F 		tst	r3, #1
 5034 00e0 09D0     		beq	.L437
2202:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5035              		.loc 1 2202 0
 5036 00e2 E06C     		ldr	r0, [r4, #76]
 5037 00e4 38B1     		cbz	r0, .L437
2205:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       {
 5038              		.loc 1 2205 0
 5039 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5040              	.LVL397:
 5041 00ea 68B1     		cbz	r0, .L443
2207:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5042              		.loc 1 2207 0
 5043 00ec E36C     		ldr	r3, [r4, #76]
 5044 00ee 0022     		movs	r2, #0
 5045 00f0 5A63     		str	r2, [r3, #52]
2208:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 5046              		.loc 1 2208 0
 5047 00f2 4023     		movs	r3, #64
 5048 00f4 6365     		str	r3, [r4, #84]
 5049              	.LVL398:
 5050              	.L437:
2217:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5051              		.loc 1 2217 0
 5052 00f6 4DB9     		cbnz	r5, .L449
2106:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   abortcplt = 1U;
 5053              		.loc 1 2106 0
 5054 00f8 0025     		movs	r5, #0
 5055              	.LVL399:
 5056              	.L438:
2253:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5057              		.loc 1 2253 0
 5058 00fa 2846     		mov	r0, r5
 5059 00fc 05B0     		add	sp, sp, #20
 5060              	.LCFI77:
 5061              		.cfi_remember_state
 5062              		.cfi_def_cfa_offset 12
 5063              		@ sp needed
 5064 00fe 30BD     		pop	{r4, r5, pc}
 5065              	.LVL400:
 5066              	.L441:
ARM GAS  /tmp/ccefzn75.s 			page 170


 5067              	.LCFI78:
 5068              		.cfi_restore_state
2107:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5069              		.loc 1 2107 0
 5070 0100 0125     		movs	r5, #1
 5071 0102 E9E7     		b	.L436
 5072              	.L442:
2194:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 5073              		.loc 1 2194 0
 5074 0104 0025     		movs	r5, #0
 5075 0106 E7E7     		b	.L436
 5076              	.LVL401:
 5077              	.L443:
2212:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       }
 5078              		.loc 1 2212 0
 5079 0108 0025     		movs	r5, #0
 5080              	.LVL402:
 5081 010a F4E7     		b	.L437
 5082              	.LVL403:
 5083              	.L449:
2220:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5084              		.loc 1 2220 0
 5085 010c 0023     		movs	r3, #0
 5086 010e E387     		strh	r3, [r4, #62]	@ movhi
2221:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5087              		.loc 1 2221 0
 5088 0110 E386     		strh	r3, [r4, #54]	@ movhi
2224:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5089              		.loc 1 2224 0
 5090 0112 636D     		ldr	r3, [r4, #84]
 5091 0114 402B     		cmp	r3, #64
 5092 0116 10D0     		beq	.L445
2232:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5093              		.loc 1 2232 0
 5094 0118 0025     		movs	r5, #0
 5095              	.LVL404:
 5096 011a 6565     		str	r5, [r4, #84]
 5097              	.L439:
 5098              	.LVL405:
 5099              	.LBB12:
2236:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 5100              		.loc 1 2236 0
 5101 011c 0023     		movs	r3, #0
 5102 011e 0193     		str	r3, [sp, #4]
 5103 0120 2368     		ldr	r3, [r4]
 5104 0122 DA68     		ldr	r2, [r3, #12]
 5105 0124 0192     		str	r2, [sp, #4]
 5106 0126 9B68     		ldr	r3, [r3, #8]
 5107 0128 0193     		str	r3, [sp, #4]
 5108 012a 019B     		ldr	r3, [sp, #4]
 5109              	.LBE12:
2242:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5110              		.loc 1 2242 0
 5111 012c 0123     		movs	r3, #1
 5112 012e 84F85130 		strb	r3, [r4, #81]
2248:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5113              		.loc 1 2248 0
ARM GAS  /tmp/ccefzn75.s 			page 171


 5114 0132 2046     		mov	r0, r4
 5115 0134 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5116              	.LVL406:
 5117 0138 DFE7     		b	.L438
 5118              	.LVL407:
 5119              	.L445:
2227:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     }
 5120              		.loc 1 2227 0
 5121 013a 0125     		movs	r5, #1
 5122              	.LVL408:
 5123 013c EEE7     		b	.L439
 5124              	.L451:
 5125 013e 00BF     		.align	2
 5126              	.L450:
 5127 0140 00000000 		.word	SystemCoreClock
 5128 0144 F1197605 		.word	91625969
 5129 0148 00000000 		.word	SPI_AbortTx_ISR
 5130 014c 00000000 		.word	SPI_AbortRx_ISR
 5131 0150 00000000 		.word	SPI_DMATxAbortCallback
 5132 0154 00000000 		.word	SPI_DMARxAbortCallback
 5133              		.cfi_endproc
 5134              	.LFE86:
 5136              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5137              		.align	1
 5138              		.syntax unified
 5139              		.thumb
 5140              		.thumb_func
 5141              		.fpu softvfp
 5143              	SPI_DMARxAbortCallback:
 5144              	.LFB110:
3015:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5145              		.loc 1 3015 0
 5146              		.cfi_startproc
 5147              		@ args = 0, pretend = 0, frame = 8
 5148              		@ frame_needed = 0, uses_anonymous_args = 0
 5149              	.LVL409:
 5150 0000 10B5     		push	{r4, lr}
 5151              	.LCFI79:
 5152              		.cfi_def_cfa_offset 8
 5153              		.cfi_offset 4, -8
 5154              		.cfi_offset 14, -4
 5155 0002 82B0     		sub	sp, sp, #8
 5156              	.LCFI80:
 5157              		.cfi_def_cfa_offset 16
3016:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5158              		.loc 1 3016 0
 5159 0004 446A     		ldr	r4, [r0, #36]
 5160              	.LVL410:
3019:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5161              		.loc 1 3019 0
 5162 0006 2268     		ldr	r2, [r4]
 5163 0008 1368     		ldr	r3, [r2]
 5164 000a 23F04003 		bic	r3, r3, #64
 5165 000e 1360     		str	r3, [r2]
3021:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5166              		.loc 1 3021 0
 5167 0010 E36C     		ldr	r3, [r4, #76]
ARM GAS  /tmp/ccefzn75.s 			page 172


 5168 0012 0022     		movs	r2, #0
 5169 0014 5A63     		str	r2, [r3, #52]
3024:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5170              		.loc 1 3024 0
 5171 0016 2268     		ldr	r2, [r4]
 5172 0018 5368     		ldr	r3, [r2, #4]
 5173 001a 23F00103 		bic	r3, r3, #1
 5174 001e 5360     		str	r3, [r2, #4]
3027:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5175              		.loc 1 3027 0
 5176 0020 FFF7FEFF 		bl	HAL_GetTick
 5177              	.LVL411:
 5178 0024 0246     		mov	r2, r0
 5179 0026 6421     		movs	r1, #100
 5180 0028 2046     		mov	r0, r4
 5181 002a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5182              	.LVL412:
 5183 002e 18B1     		cbz	r0, .L453
3029:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5184              		.loc 1 3029 0
 5185 0030 636D     		ldr	r3, [r4, #84]
 5186 0032 43F04003 		orr	r3, r3, #64
 5187 0036 6365     		str	r3, [r4, #84]
 5188              	.L453:
3033:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5189              		.loc 1 3033 0
 5190 0038 A36C     		ldr	r3, [r4, #72]
 5191 003a 1BB1     		cbz	r3, .L454
3035:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5192              		.loc 1 3035 0
 5193 003c 5B6B     		ldr	r3, [r3, #52]
 5194 003e 0BB1     		cbz	r3, .L454
 5195              	.L452:
3067:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5196              		.loc 1 3067 0
 5197 0040 02B0     		add	sp, sp, #8
 5198              	.LCFI81:
 5199              		.cfi_remember_state
 5200              		.cfi_def_cfa_offset 8
 5201              		@ sp needed
 5202 0042 10BD     		pop	{r4, pc}
 5203              	.LVL413:
 5204              	.L454:
 5205              	.LCFI82:
 5206              		.cfi_restore_state
3042:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5207              		.loc 1 3042 0
 5208 0044 0023     		movs	r3, #0
 5209 0046 E387     		strh	r3, [r4, #62]	@ movhi
3043:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5210              		.loc 1 3043 0
 5211 0048 E386     		strh	r3, [r4, #54]	@ movhi
3046:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5212              		.loc 1 3046 0
 5213 004a 636D     		ldr	r3, [r4, #84]
 5214 004c 402B     		cmp	r3, #64
 5215 004e 01D0     		beq	.L456
ARM GAS  /tmp/ccefzn75.s 			page 173


3049:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5216              		.loc 1 3049 0
 5217 0050 0023     		movs	r3, #0
 5218 0052 6365     		str	r3, [r4, #84]
 5219              	.L456:
 5220              	.LBB13:
3053:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 5221              		.loc 1 3053 0
 5222 0054 0023     		movs	r3, #0
 5223 0056 0193     		str	r3, [sp, #4]
 5224 0058 2368     		ldr	r3, [r4]
 5225 005a DA68     		ldr	r2, [r3, #12]
 5226 005c 0192     		str	r2, [sp, #4]
 5227 005e 9B68     		ldr	r3, [r3, #8]
 5228 0060 0193     		str	r3, [sp, #4]
 5229 0062 019B     		ldr	r3, [sp, #4]
 5230              	.LBE13:
3059:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5231              		.loc 1 3059 0
 5232 0064 0123     		movs	r3, #1
 5233 0066 84F85130 		strb	r3, [r4, #81]
3065:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5234              		.loc 1 3065 0
 5235 006a 2046     		mov	r0, r4
 5236 006c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5237              	.LVL414:
 5238 0070 E6E7     		b	.L452
 5239              		.cfi_endproc
 5240              	.LFE110:
 5242              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5243              		.align	1
 5244              		.syntax unified
 5245              		.thumb
 5246              		.thumb_func
 5247              		.fpu softvfp
 5249              	SPI_DMATxAbortCallback:
 5250              	.LFB109:
2948:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5251              		.loc 1 2948 0
 5252              		.cfi_startproc
 5253              		@ args = 0, pretend = 0, frame = 8
 5254              		@ frame_needed = 0, uses_anonymous_args = 0
 5255              	.LVL415:
 5256 0000 00B5     		push	{lr}
 5257              	.LCFI83:
 5258              		.cfi_def_cfa_offset 4
 5259              		.cfi_offset 14, -4
 5260 0002 83B0     		sub	sp, sp, #12
 5261              	.LCFI84:
 5262              		.cfi_def_cfa_offset 16
2949:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   __IO uint32_t count;
 5263              		.loc 1 2949 0
 5264 0004 406A     		ldr	r0, [r0, #36]
 5265              	.LVL416:
2952:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5266              		.loc 1 2952 0
 5267 0006 836C     		ldr	r3, [r0, #72]
ARM GAS  /tmp/ccefzn75.s 			page 174


 5268 0008 0022     		movs	r2, #0
 5269 000a 5A63     		str	r2, [r3, #52]
2953:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5270              		.loc 1 2953 0
 5271 000c 1D4B     		ldr	r3, .L467
 5272 000e 1B68     		ldr	r3, [r3]
 5273 0010 1D4A     		ldr	r2, .L467+4
 5274 0012 A2FB0323 		umull	r2, r3, r2, r3
 5275 0016 5B0A     		lsrs	r3, r3, #9
 5276 0018 6422     		movs	r2, #100
 5277 001a 02FB03F3 		mul	r3, r2, r3
 5278 001e 0193     		str	r3, [sp, #4]
2956:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5279              		.loc 1 2956 0
 5280 0020 0268     		ldr	r2, [r0]
 5281 0022 5368     		ldr	r3, [r2, #4]
 5282 0024 23F00203 		bic	r3, r3, #2
 5283 0028 5360     		str	r3, [r2, #4]
 5284              	.L461:
2961:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5285              		.loc 1 2961 0
 5286 002a 019B     		ldr	r3, [sp, #4]
 5287 002c 43B1     		cbz	r3, .L466
2966:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 5288              		.loc 1 2966 0
 5289 002e 019B     		ldr	r3, [sp, #4]
 5290 0030 013B     		subs	r3, r3, #1
 5291 0032 0193     		str	r3, [sp, #4]
2967:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5292              		.loc 1 2967 0
 5293 0034 0368     		ldr	r3, [r0]
 5294 0036 9B68     		ldr	r3, [r3, #8]
 5295 0038 13F0020F 		tst	r3, #2
 5296 003c F5D0     		beq	.L461
 5297 003e 03E0     		b	.L460
 5298              	.L466:
2963:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****       break;
 5299              		.loc 1 2963 0
 5300 0040 436D     		ldr	r3, [r0, #84]
 5301 0042 43F04003 		orr	r3, r3, #64
 5302 0046 4365     		str	r3, [r0, #84]
 5303              	.L460:
2970:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5304              		.loc 1 2970 0
 5305 0048 C36C     		ldr	r3, [r0, #76]
 5306 004a 23B1     		cbz	r3, .L462
2972:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****     {
 5307              		.loc 1 2972 0
 5308 004c 5B6B     		ldr	r3, [r3, #52]
 5309 004e 13B1     		cbz	r3, .L462
 5310              	.LVL417:
 5311              	.L458:
3004:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5312              		.loc 1 3004 0
 5313 0050 03B0     		add	sp, sp, #12
 5314              	.LCFI85:
 5315              		.cfi_remember_state
ARM GAS  /tmp/ccefzn75.s 			page 175


 5316              		.cfi_def_cfa_offset 4
 5317              		@ sp needed
 5318 0052 5DF804FB 		ldr	pc, [sp], #4
 5319              	.LVL418:
 5320              	.L462:
 5321              	.LCFI86:
 5322              		.cfi_restore_state
2979:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5323              		.loc 1 2979 0
 5324 0056 0023     		movs	r3, #0
 5325 0058 C387     		strh	r3, [r0, #62]	@ movhi
2980:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5326              		.loc 1 2980 0
 5327 005a C386     		strh	r3, [r0, #54]	@ movhi
2983:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   {
 5328              		.loc 1 2983 0
 5329 005c 436D     		ldr	r3, [r0, #84]
 5330 005e 402B     		cmp	r3, #64
 5331 0060 01D0     		beq	.L464
2986:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   }
 5332              		.loc 1 2986 0
 5333 0062 0023     		movs	r3, #0
 5334 0064 4365     		str	r3, [r0, #84]
 5335              	.L464:
 5336              	.LBB14:
2990:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #if defined(SPI_CR2_FRF)
 5337              		.loc 1 2990 0
 5338 0066 0023     		movs	r3, #0
 5339 0068 0093     		str	r3, [sp]
 5340 006a 0368     		ldr	r3, [r0]
 5341 006c DA68     		ldr	r2, [r3, #12]
 5342 006e 0092     		str	r2, [sp]
 5343 0070 9B68     		ldr	r3, [r3, #8]
 5344 0072 0093     		str	r3, [sp]
 5345 0074 009B     		ldr	r3, [sp]
 5346              	.LBE14:
2996:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5347              		.loc 1 2996 0
 5348 0076 0123     		movs	r3, #1
 5349 0078 80F85130 		strb	r3, [r0, #81]
3002:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5350              		.loc 1 3002 0
 5351 007c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5352              	.LVL419:
 5353 0080 E6E7     		b	.L458
 5354              	.L468:
 5355 0082 00BF     		.align	2
 5356              	.L467:
 5357 0084 00000000 		.word	SystemCoreClock
 5358 0088 F1197605 		.word	91625969
 5359              		.cfi_endproc
 5360              	.LFE109:
 5362              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 5363              		.align	1
 5364              		.global	HAL_SPI_GetState
 5365              		.syntax unified
 5366              		.thumb
ARM GAS  /tmp/ccefzn75.s 			page 176


 5367              		.thumb_func
 5368              		.fpu softvfp
 5370              	HAL_SPI_GetState:
 5371              	.LFB99:
2605:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI handle state */
 5372              		.loc 1 2605 0
 5373              		.cfi_startproc
 5374              		@ args = 0, pretend = 0, frame = 0
 5375              		@ frame_needed = 0, uses_anonymous_args = 0
 5376              		@ link register save eliminated.
 5377              	.LVL420:
2607:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 5378              		.loc 1 2607 0
 5379 0000 90F85100 		ldrb	r0, [r0, #81]	@ zero_extendqisi2
 5380              	.LVL421:
2608:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5381              		.loc 1 2608 0
 5382 0004 7047     		bx	lr
 5383              		.cfi_endproc
 5384              	.LFE99:
 5386              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 5387              		.align	1
 5388              		.global	HAL_SPI_GetError
 5389              		.syntax unified
 5390              		.thumb
 5391              		.thumb_func
 5392              		.fpu softvfp
 5394              	HAL_SPI_GetError:
 5395              	.LFB100:
2617:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c ****   /* Return SPI ErrorCode */
 5396              		.loc 1 2617 0
 5397              		.cfi_startproc
 5398              		@ args = 0, pretend = 0, frame = 0
 5399              		@ frame_needed = 0, uses_anonymous_args = 0
 5400              		@ link register save eliminated.
 5401              	.LVL422:
2619:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** }
 5402              		.loc 1 2619 0
 5403 0000 406D     		ldr	r0, [r0, #84]
 5404              	.LVL423:
2620:..//Source/stm/lib/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_spi.c **** 
 5405              		.loc 1 2620 0
 5406 0002 7047     		bx	lr
 5407              		.cfi_endproc
 5408              	.LFE100:
 5410              		.text
 5411              	.Letext0:
 5412              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5413              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5414              		.file 4 "..//Source/stm/lib/CMSIS/Include/core_cm3.h"
 5415              		.file 5 "..//Source/stm/lib/CMSIS/Device/ST/STM32L1xx/Include/system_stm32l1xx.h"
 5416              		.file 6 "..//Source/stm/lib/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xba.h"
 5417              		.file 7 "..//Source/stm/lib/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 5418              		.file 8 "..//Source/stm/lib/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 5419              		.file 9 "..//Source/stm/lib/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_dma.h"
 5420              		.file 10 "..//Source/stm/lib/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_spi.h"
 5421              		.file 11 "..//Source/stm/lib/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal.h"
ARM GAS  /tmp/ccefzn75.s 			page 177


ARM GAS  /tmp/ccefzn75.s 			page 178


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l1xx_hal_spi.c
     /tmp/ccefzn75.s:16     .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccefzn75.s:22     .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccefzn75.s:88     .text.SPI_AbortRx_ISR:0000000000000058 $d
     /tmp/ccefzn75.s:94     .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/ccefzn75.s:100    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/ccefzn75.s:126    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccefzn75.s:132    .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccefzn75.s:237    .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/ccefzn75.s:243    .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/ccefzn75.s:331    .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/ccefzn75.s:337    .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/ccefzn75.s:459    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccefzn75.s:466    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccefzn75.s:479    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccefzn75.s:486    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccefzn75.s:575    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccefzn75.s:582    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccefzn75.s:595    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccefzn75.s:602    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccefzn75.s:652    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccefzn75.s:659    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccefzn75.s:975    .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccefzn75.s:982    .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccefzn75.s:1426   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccefzn75.s:1433   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccefzn75.s:1709   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccefzn75.s:1716   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccefzn75.s:1843   .text.HAL_SPI_Transmit_IT:0000000000000098 $d
     /tmp/ccefzn75.s:3677   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccefzn75.s:3626   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccefzn75.s:1849   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccefzn75.s:1856   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccefzn75.s:2036   .text.HAL_SPI_TransmitReceive_IT:00000000000000b8 $d
     /tmp/ccefzn75.s:4237   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccefzn75.s:4177   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccefzn75.s:4117   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccefzn75.s:4057   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccefzn75.s:2044   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccefzn75.s:2051   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccefzn75.s:2204   .text.HAL_SPI_Receive_IT:00000000000000b4 $d
     /tmp/ccefzn75.s:3865   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccefzn75.s:3814   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccefzn75.s:2210   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccefzn75.s:2217   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccefzn75.s:2385   .text.HAL_SPI_Transmit_DMA:00000000000000d0 $d
     /tmp/ccefzn75.s:3352   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccefzn75.s:4338   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccefzn75.s:4297   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccefzn75.s:2392   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccefzn75.s:2399   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccefzn75.s:2660   .text.HAL_SPI_TransmitReceive_DMA:0000000000000140 $d
     /tmp/ccefzn75.s:3452   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccefzn75.s:4526   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccefzn75.s:3402   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccefzn75.s:4445   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
ARM GAS  /tmp/ccefzn75.s 			page 179


     /tmp/ccefzn75.s:2669   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccefzn75.s:2676   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccefzn75.s:2859   .text.HAL_SPI_Receive_DMA:00000000000000e8 $d
     /tmp/ccefzn75.s:2866   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccefzn75.s:2873   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccefzn75.s:3091   .text.HAL_SPI_Abort:000000000000012c $d
     /tmp/ccefzn75.s:3099   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccefzn75.s:3106   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccefzn75.s:3144   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccefzn75.s:3151   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccefzn75.s:3189   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccefzn75.s:3196   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccefzn75.s:3266   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccefzn75.s:3273   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccefzn75.s:3286   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccefzn75.s:3293   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccefzn75.s:3306   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccefzn75.s:3313   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccefzn75.s:3326   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccefzn75.s:3333   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccefzn75.s:3346   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccefzn75.s:3376   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccefzn75.s:3383   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccefzn75.s:3396   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccefzn75.s:3426   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccefzn75.s:3433   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccefzn75.s:3446   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccefzn75.s:3476   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccefzn75.s:3483   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccefzn75.s:3496   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccefzn75.s:3502   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccefzn75.s:3614   .text.SPI_CloseTx_ISR:0000000000000088 $d
     /tmp/ccefzn75.s:3620   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccefzn75.s:3671   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccefzn75.s:3722   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccefzn75.s:3728   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccefzn75.s:3808   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccefzn75.s:3859   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccefzn75.s:3910   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccefzn75.s:3916   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccefzn75.s:4045   .text.SPI_CloseRxTx_ISR:00000000000000a8 $d
     /tmp/ccefzn75.s:4051   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccefzn75.s:4111   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccefzn75.s:4171   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccefzn75.s:4231   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccefzn75.s:4291   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccefzn75.s:4332   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccefzn75.s:4439   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccefzn75.s:4520   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccefzn75.s:4604   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccefzn75.s:4611   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccefzn75.s:4803   .text.HAL_SPI_IRQHandler:00000000000000fc $d
     /tmp/ccefzn75.s:4814   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccefzn75.s:4808   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccefzn75.s:4842   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccefzn75.s:4849   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
     /tmp/ccefzn75.s:4862   .text.HAL_SPI_Abort_IT:0000000000000000 $t
ARM GAS  /tmp/ccefzn75.s 			page 180


     /tmp/ccefzn75.s:4869   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccefzn75.s:5127   .text.HAL_SPI_Abort_IT:0000000000000140 $d
     /tmp/ccefzn75.s:5249   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccefzn75.s:5143   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccefzn75.s:5137   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccefzn75.s:5243   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccefzn75.s:5357   .text.SPI_DMATxAbortCallback:0000000000000084 $d
     /tmp/ccefzn75.s:5363   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccefzn75.s:5370   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccefzn75.s:5387   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccefzn75.s:5394   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
